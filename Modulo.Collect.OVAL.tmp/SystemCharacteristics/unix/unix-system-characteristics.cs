// ------------------------------------------------------------------------------
//  <auto-generated>
//    Generated by Xsd2Code. Version 3.5.0.14890
//    <NameSpace>Modulo.Collect.OVAL.SystemCharacteristics.Unix</NameSpace><Collection>Array</Collection><codeType>CSharp</codeType><EnableDataBinding>False</EnableDataBinding><EnableLazyLoading>False</EnableLazyLoading><TrackingChangesEnable>False</TrackingChangesEnable><GenTrackingClasses>False</GenTrackingClasses><HidePrivateFieldInIDE>False</HidePrivateFieldInIDE><EnableSummaryComment>True</EnableSummaryComment><VirtualProp>False</VirtualProp><IncludeSerializeMethod>False</IncludeSerializeMethod><UseBaseClass>False</UseBaseClass><GenBaseClass>False</GenBaseClass><GenerateCloneMethod>False</GenerateCloneMethod><GenerateDataContracts>False</GenerateDataContracts><CodeBaseTag>Net20</CodeBaseTag><SerializeMethodName>Serialize</SerializeMethodName><DeserializeMethodName>Deserialize</DeserializeMethodName><SaveToFileMethodName>SaveToFile</SaveToFileMethodName><LoadFromFileMethodName>LoadFromFile</LoadFromFileMethodName><GenerateXMLAttributes>True</GenerateXMLAttributes><OrderXMLAttrib>False</OrderXMLAttrib><EnableEncoding>False</EnableEncoding><AutomaticProperties>False</AutomaticProperties><GenerateShouldSerialize>False</GenerateShouldSerialize><DisableDebug>False</DisableDebug><PropNameSpecified>Default</PropNameSpecified><Encoder>UTF8</Encoder><CustomUsings>Modulo.Collect.OVAL.Common;Modulo.Collect.OVAL.SystemCharacteristics</CustomUsings><ExcludeIncludedTypes>True</ExcludeIncludedTypes><EnableInitializeFields>False</EnableInitializeFields>
//  </auto-generated>
// ------------------------------------------------------------------------------
namespace Modulo.Collect.OVAL.SystemCharacteristics.Unix {
    using System;
    using System.Diagnostics;
    using System.Xml.Serialization;
    using System.Collections;
    using System.Xml.Schema;
    using System.ComponentModel;
    using Modulo.Collect.OVAL.Common;
    using Modulo.Collect.OVAL.SystemCharacteristics;
    
    
    /// <summary>
    /// The dnscache_item stores information retrieved from the DNS cache about a domain name, its time to live, and its corresponding IP addresses.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#unix")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#unix", IsNullable=false)]
    public partial class dnscache_item : ItemType {
        
        private EntityItemStringType domain_nameField;
        
        private EntityItemIntType ttlField;
        
        private EntityItemIPAddressStringType[] ip_addressField;
        
        /// <summary>
        /// The domain_name element contains a string that represents a domain name that was collected from the DNS cache on the local system.
        /// </summary>
        public EntityItemStringType domain_name {
            get {
                return this.domain_nameField;
            }
            set {
                this.domain_nameField = value;
            }
        }
        
        /// <summary>
        /// The ttl element contains an integer that represents the time to live in seconds of the DNS cache entry.
        /// </summary>
        public EntityItemIntType ttl {
            get {
                return this.ttlField;
            }
            set {
                this.ttlField = value;
            }
        }
        
        /// <summary>
        /// The ip_address element contains a string that represents an IP address associated with the specified domain name. Note that the IP address can be IPv4 or IPv6.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("ip_address")]
        public EntityItemIPAddressStringType[] ip_address {
            get {
                return this.ip_addressField;
            }
            set {
                this.ip_addressField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#unix")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#unix", IsNullable=true)]
    public partial class EntityItemInterfaceType : EntityItemStringType {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#unix")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#unix", IsNullable=true)]
    public partial class EntityItemEncryptMethodType : EntityItemStringType {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#unix")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#unix", IsNullable=true)]
    public partial class EntityItemWaitStatusType : EntityItemStringType {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#unix")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#unix", IsNullable=true)]
    public partial class EntityItemXinetdTypeStatusType : EntityItemStringType {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#unix")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#unix", IsNullable=true)]
    public partial class EntityItemRoutingTableFlagsType : EntityItemStringType {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#unix")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#unix", IsNullable=true)]
    public partial class EntityItemGconfTypeType : EntityItemStringType {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#unix")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#unix", IsNullable=true)]
    public partial class EntityItemEndpointType : EntityItemStringType {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#unix")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#unix", IsNullable=true)]
    public partial class EntityItemCapabilityType : EntityItemStringType {
    }
    
    /// <summary>
    /// The file item holds information about the individual files found on a system. Each file item contains path and filename information as well as its type, associated user and group ids, relevant dates, and the privialeges granted. It extends the standard ItemType as defined in the oval-system-characteristics schema and one should refer to the ItemType description for more information.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#unix")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#unix", IsNullable=false)]
    public partial class file_item : ItemType {
        
        private EntityItemStringType filepathField;
        
        private EntityItemStringType pathField;
        
        private EntityItemStringType filenameField;
        
        private EntityItemStringType typeField;
        
        private EntityItemIntType group_idField;
        
        private EntityItemIntType user_idField;
        
        private EntityItemIntType a_timeField;
        
        private EntityItemIntType c_timeField;
        
        private EntityItemIntType m_timeField;
        
        private EntityItemIntType sizeField;
        
        private EntityItemBoolType suidField;
        
        private EntityItemBoolType sgidField;
        
        private EntityItemBoolType stickyField;
        
        private EntityItemBoolType ureadField;
        
        private EntityItemBoolType uwriteField;
        
        private EntityItemBoolType uexecField;
        
        private EntityItemBoolType greadField;
        
        private EntityItemBoolType gwriteField;
        
        private EntityItemBoolType gexecField;
        
        private EntityItemBoolType oreadField;
        
        private EntityItemBoolType owriteField;
        
        private EntityItemBoolType oexecField;
        
        private EntityItemBoolType has_extended_aclField;
        
        /// <summary>
        /// The filepath element specifies the absolute path for a file on the machine. A directory cannot be specified as a filepath.
        /// </summary>
        public EntityItemStringType filepath {
            get {
                return this.filepathField;
            }
            set {
                this.filepathField = value;
            }
        }
        
        /// <summary>
        /// The path element specifies the directory component of the absolute path to a file on the machine.
        /// </summary>
        public EntityItemStringType path {
            get {
                return this.pathField;
            }
            set {
                this.pathField = value;
            }
        }
        
        /// <summary>
        /// The name of the file. If the xsi:nil attribute is set to true, then the item being represented is the higher directory represented by the path entity.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public EntityItemStringType filename {
            get {
                return this.filenameField;
            }
            set {
                this.filenameField = value;
            }
        }
        
        /// <summary>
        /// This is the file's type: regular file (regular), directory, named pipe (fifo), symbolic link, socket or block special.
        /// </summary>
        public EntityItemStringType type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <summary>
        /// This is the group owner of the file, by group number.
        /// </summary>
        public EntityItemIntType group_id {
            get {
                return this.group_idField;
            }
            set {
                this.group_idField = value;
            }
        }
        
        /// <summary>
        /// The numeric user id, or uid, is the third column of each user's entry in /etc/passwd. This element represents the owner of the file.
        /// </summary>
        public EntityItemIntType user_id {
            get {
                return this.user_idField;
            }
            set {
                this.user_idField = value;
            }
        }
        
        /// <summary>
        /// This is the time that the file was last accessed, in seconds since the Unix epoch. The Unix epoch is the time 00:00:00 UTC on January 1, 1970.
        /// </summary>
        public EntityItemIntType a_time {
            get {
                return this.a_timeField;
            }
            set {
                this.a_timeField = value;
            }
        }
        
        /// <summary>
        /// This is the time of the last change to the file's inode, in seconds since the Unix epoch. The Unix epoch is the time 00:00:00 UTC on January 1, 1970. An inode is a Unix data structure that stores all of the information about a particular file.
        /// </summary>
        public EntityItemIntType c_time {
            get {
                return this.c_timeField;
            }
            set {
                this.c_timeField = value;
            }
        }
        
        /// <summary>
        /// This is the time of the last change to the file's contents, in seconds since the Unix epoch. The Unix epoch is the time 00:00:00 UTC on January 1, 1970.
        /// </summary>
        public EntityItemIntType m_time {
            get {
                return this.m_timeField;
            }
            set {
                this.m_timeField = value;
            }
        }
        
        /// <summary>
        /// This is the size of the file in bytes.
        /// </summary>
        public EntityItemIntType size {
            get {
                return this.sizeField;
            }
            set {
                this.sizeField = value;
            }
        }
        
        /// <summary>
        /// Does the program run with the uid (thus privileges) of the file's owner, rather than the calling user?
        /// </summary>
        public EntityItemBoolType suid {
            get {
                return this.suidField;
            }
            set {
                this.suidField = value;
            }
        }
        
        /// <summary>
        /// Does the program run with the gid (thus privileges) of the file's group owner, rather than the calling user's group?
        /// </summary>
        public EntityItemBoolType sgid {
            get {
                return this.sgidField;
            }
            set {
                this.sgidField = value;
            }
        }
        
        /// <summary>
        /// Can users delete each other's files in this directory, when said directory is writable by those users?
        /// </summary>
        public EntityItemBoolType sticky {
            get {
                return this.stickyField;
            }
            set {
                this.stickyField = value;
            }
        }
        
        /// <summary>
        /// Can the owner (user owner) of the file read this file or, if a directory, read the directory contents?
        /// </summary>
        public EntityItemBoolType uread {
            get {
                return this.ureadField;
            }
            set {
                this.ureadField = value;
            }
        }
        
        /// <summary>
        /// Can the owner (user owner) of the file write to this file or, if a directory, write to the directory?
        /// </summary>
        public EntityItemBoolType uwrite {
            get {
                return this.uwriteField;
            }
            set {
                this.uwriteField = value;
            }
        }
        
        /// <summary>
        /// Can the owner (user owner) of the file execute it or, if a directory, change into the directory?
        /// </summary>
        public EntityItemBoolType uexec {
            get {
                return this.uexecField;
            }
            set {
                this.uexecField = value;
            }
        }
        
        /// <summary>
        /// Can the group owner of the file read this file or, if a directory, read the directory contents?
        /// </summary>
        public EntityItemBoolType gread {
            get {
                return this.greadField;
            }
            set {
                this.greadField = value;
            }
        }
        
        /// <summary>
        /// Can the group owner of the file write to this file, or if a directory, write to the directory?
        /// </summary>
        public EntityItemBoolType gwrite {
            get {
                return this.gwriteField;
            }
            set {
                this.gwriteField = value;
            }
        }
        
        /// <summary>
        /// Can the group owner of the file execute it or, if a directory, change into the directory?
        /// </summary>
        public EntityItemBoolType gexec {
            get {
                return this.gexecField;
            }
            set {
                this.gexecField = value;
            }
        }
        
        /// <summary>
        /// Can all other users read this file or, if a directory, read the directory contents?
        /// </summary>
        public EntityItemBoolType oread {
            get {
                return this.oreadField;
            }
            set {
                this.oreadField = value;
            }
        }
        
        /// <summary>
        /// Can the other users write to this file, or if a directory, write to the directory?
        /// </summary>
        public EntityItemBoolType owrite {
            get {
                return this.owriteField;
            }
            set {
                this.owriteField = value;
            }
        }
        
        /// <summary>
        /// Can the other users execute this file or, if a directory, change into the directory?
        /// </summary>
        public EntityItemBoolType oexec {
            get {
                return this.oexecField;
            }
            set {
                this.oexecField = value;
            }
        }
        
        /// <summary>
        /// Does the file or directory have ACL permissions applied to it? If the file or directory doesn't have an ACL, or it matches the standard UNIX permissions, the value will be 'false'. Otherwise, if a file or directory has an ACL, the value will be 'true'. If the system does not support ACLs, the status will be 'does not exist' and if the system supports ACLs, the status will be 'exists'.
        /// </summary>
        public EntityItemBoolType has_extended_acl {
            get {
                return this.has_extended_aclField;
            }
            set {
                this.has_extended_aclField = value;
            }
        }
    }
    
    /// <summary>
    /// The file extended attribute item holds information about the individual file extended attributes found on a system. Each file extended attribute item contains path, filename, and attribute name information as well as the attribute's value. It extends the standard ItemType as defined in the oval-system-characteristics schema and one should refer to the ItemType description for more information.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#unix")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#unix", IsNullable=false)]
    public partial class fileextendedattribute_item : ItemType {
        
        private EntityItemStringType filepathField;
        
        private EntityItemStringType pathField;
        
        private EntityItemStringType filenameField;
        
        private EntityItemStringType attribute_nameField;
        
        private EntityItemAnySimpleType valueField;
        
        /// <summary>
        /// The filepath element specifies the absolute path for a file on the machine. A directory cannot be specified as a filepath.
        /// </summary>
        public EntityItemStringType filepath {
            get {
                return this.filepathField;
            }
            set {
                this.filepathField = value;
            }
        }
        
        /// <summary>
        /// The path element specifies the directory component of the absolute path to a file on the machine.
        /// </summary>
        public EntityItemStringType path {
            get {
                return this.pathField;
            }
            set {
                this.pathField = value;
            }
        }
        
        /// <summary>
        /// The name of the file. If the xsi:nil attribute is set to true, then the item being represented is the higher directory represented by the path entity.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public EntityItemStringType filename {
            get {
                return this.filenameField;
            }
            set {
                this.filenameField = value;
            }
        }
        
        /// <summary>
        /// This is the extended attribute's name, identifier or key.
        /// </summary>
        public EntityItemStringType attribute_name {
            get {
                return this.attribute_nameField;
            }
            set {
                this.attribute_nameField = value;
            }
        }
        
        /// <summary>
        /// This is the extended attribute's value or contents.
        /// </summary>
        public EntityItemAnySimpleType value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <summary>
    /// The gconf_item holds information about an individual GConf preference key found on a system. Each gconf_item contains a preference key, source, type, whether it's writable, the user who last modified it, the time it was last modified, whether it's the default value, as well as the preference key's value. It extends the standard ItemType as defined in the oval-system-characteristics schema and one should refer to the ItemType description for more information.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#unix")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#unix", IsNullable=false)]
    public partial class gconf_item : ItemType {
        
        private EntityItemStringType keyField;
        
        private EntityItemStringType sourceField;
        
        private EntityItemGconfTypeType typeField;
        
        private EntityItemBoolType is_writableField;
        
        private EntityItemStringType mod_userField;
        
        private EntityItemIntType mod_timeField;
        
        private EntityItemBoolType is_defaultField;
        
        private EntityItemAnySimpleType[] valueField;
        
        /// <summary>
        /// The preference key to check.
        /// </summary>
        public EntityItemStringType key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
        
        /// <summary>
        /// The source used to look up the preference key.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public EntityItemStringType source {
            get {
                return this.sourceField;
            }
            set {
                this.sourceField = value;
            }
        }
        
        /// <summary>
        /// The type of the preference key.
        /// </summary>
        public EntityItemGconfTypeType type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <summary>
        /// Is the preference key writable? If true, the preference key is writable. If false, the preference key is not writable.
        /// </summary>
        public EntityItemBoolType is_writable {
            get {
                return this.is_writableField;
            }
            set {
                this.is_writableField = value;
            }
        }
        
        /// <summary>
        /// The user who last modified the preference key.
        /// </summary>
        public EntityItemStringType mod_user {
            get {
                return this.mod_userField;
            }
            set {
                this.mod_userField = value;
            }
        }
        
        /// <summary>
        /// The time the preference key was last modified in seconds since the Unix epoch. The Unix epoch is the time 00:00:00 UTC on January 1, 1970.
        /// </summary>
        public EntityItemIntType mod_time {
            get {
                return this.mod_timeField;
            }
            set {
                this.mod_timeField = value;
            }
        }
        
        /// <summary>
        /// Is the preference key value the default value. If true, the preference key value is the default value. If false, the preference key value is not the default value.
        /// </summary>
        public EntityItemBoolType is_default {
            get {
                return this.is_defaultField;
            }
            set {
                this.is_defaultField = value;
            }
        }
        
        /// <summary>
        /// The value of the preference key.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("value")]
        public EntityItemAnySimpleType[] value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <summary>
    /// The inetd item holds information associated with different Internet services. It extends the standard ItemType as defined in the oval-system-characteristics schema and one should refer to the ItemType description for more information.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#unix")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#unix", IsNullable=false)]
    public partial class inetd_item : ItemType {
        
        private EntityItemStringType protocolField;
        
        private EntityItemStringType service_nameField;
        
        private EntityItemStringType server_programField;
        
        private EntityItemStringType server_argumentsField;
        
        private EntityItemEndpointType endpoint_typeField;
        
        private EntityItemStringType exec_as_userField;
        
        private EntityItemWaitStatusType wait_statusField;
        
        /// <summary>
        /// A recognized protocol listed in the file /etc/inet/protocols.
        /// </summary>
        public EntityItemStringType protocol {
            get {
                return this.protocolField;
            }
            set {
                this.protocolField = value;
            }
        }
        
        /// <summary>
        /// The name of a valid service listed in the services file. For RPC services, the value of the service-name field consists of the RPC service name or program number, followed by a '/' (slash) and either a version number or a range of version numbers (for example, rstatd/2-4).
        /// </summary>
        public EntityItemStringType service_name {
            get {
                return this.service_nameField;
            }
            set {
                this.service_nameField = value;
            }
        }
        
        /// <summary>
        /// Either the pathname of a server program to be invoked by inetd to perform the requested service, or the value internal if inetd itself provides the service.
        /// </summary>
        public EntityItemStringType server_program {
            get {
                return this.server_programField;
            }
            set {
                this.server_programField = value;
            }
        }
        
        public EntityItemStringType server_arguments {
            get {
                return this.server_argumentsField;
            }
            set {
                this.server_argumentsField = value;
            }
        }
        
        public EntityItemEndpointType endpoint_type {
            get {
                return this.endpoint_typeField;
            }
            set {
                this.endpoint_typeField = value;
            }
        }
        
        public EntityItemStringType exec_as_user {
            get {
                return this.exec_as_userField;
            }
            set {
                this.exec_as_userField = value;
            }
        }
        
        /// <summary>
        /// This field has values wait or nowait. This entry specifies whether the server that is invoked by inetd will take over the listening socket associated with the service, and whether once launched, inetd will wait for that server to exit, if ever, before it resumes listening for new service requests.
        /// </summary>
        public EntityItemWaitStatusType wait_status {
            get {
                return this.wait_statusField;
            }
            set {
                this.wait_statusField = value;
            }
        }
    }
    
    /// <summary>
    /// The interface item holds information about the interfaces on a system. Each interface item contains name and address information as well as any associated flags. It extends the standard ItemType as defined in the oval-system-characteristics schema and one should refer to the ItemType description for more information.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#unix")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#unix", IsNullable=false)]
    public partial class interface_item : ItemType {
        
        private EntityItemStringType nameField;
        
        private EntityItemInterfaceType typeField;
        
        private EntityItemStringType hardware_addrField;
        
        private EntityItemIPAddressStringType inet_addrField;
        
        private EntityItemIPAddressStringType broadcast_addrField;
        
        private EntityItemIPAddressStringType netmaskField;
        
        private EntityItemStringType[] flagField;
        
        /// <summary>
        /// The name entity is the actual name of the specific interface. Examples might be eth0, eth1, fwo, etc.
        /// </summary>
        public EntityItemStringType name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <summary>
        /// This element specifies the type of interface.
        /// </summary>
        public EntityItemInterfaceType type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <summary>
        /// The hardware_addr entity is the hardware or MAC address of the physical network card. MAC addresses should be formatted according to the IEEE 802-2001 standard which states that a MAC address is a sequence of six octet values, separated by hyphens, where each octet is represented by two hexadecimal digits.  Uppercase letters should also be used to represent the hexadecimal digits A through F.
        /// </summary>
        public EntityItemStringType hardware_addr {
            get {
                return this.hardware_addrField;
            }
            set {
                this.hardware_addrField = value;
            }
        }
        
        /// <summary>
        /// The inet_addr entity is the IP address of the specific interface. Note that the IP address can be IPv4 or IPv6. If the IP address is an IPv6 address, this entity should be expressed as an IPv6 address prefix using CIDR notation and the netmask entity should not be collected.
        /// </summary>
        public EntityItemIPAddressStringType inet_addr {
            get {
                return this.inet_addrField;
            }
            set {
                this.inet_addrField = value;
            }
        }
        
        /// <summary>
        /// The broadcast_addr entity is the broadcast IP address for this interface's network. Note that the IP address can be IPv4 or IPv6.
        /// </summary>
        public EntityItemIPAddressStringType broadcast_addr {
            get {
                return this.broadcast_addrField;
            }
            set {
                this.broadcast_addrField = value;
            }
        }
        
        /// <summary>
        /// This is the bitmask used to calculate the interface's IP network. The network number is calculated by bitwise-ANDing this with the IP address. The host number on that network is calculated by bitwise-XORing this with the IP address. Note that if the inet_addr entity contains an IPv6 address prefix, this entity should not be collected.
        /// </summary>
        public EntityItemIPAddressStringType netmask {
            get {
                return this.netmaskField;
            }
            set {
                this.netmaskField = value;
            }
        }
        
        /// <summary>
        /// This is the interface flag line, which generally contains flags like "UP" to denote an active interface, "PROMISC" to note that the interface is listening for Ethernet frames not specifically addressed to it, and others.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("flag")]
        public EntityItemStringType[] flag {
            get {
                return this.flagField;
            }
            set {
                this.flagField = value;
            }
        }
    }
    
    /// <summary>
    /// /etc/passwd. See passwd(4).
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#unix")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#unix", IsNullable=false)]
    public partial class password_item : ItemType {
        
        private EntityItemStringType usernameField;
        
        private EntityItemStringType passwordField;
        
        private EntityItemIntType user_idField;
        
        private EntityItemIntType group_idField;
        
        private EntityItemStringType gcosField;
        
        private EntityItemStringType home_dirField;
        
        private EntityItemStringType login_shellField;
        
        /// <summary>
        /// This is the name of the user for which data was gathered.
        /// </summary>
        public EntityItemStringType username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
            }
        }
        
        /// <summary>
        /// This is the encrypted version of the user's password.
        /// </summary>
        public EntityItemStringType password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <summary>
        /// The numeric user id, or uid, is the third column of each user's entry in /etc/passwd. This element represents the owner of the file.
        /// </summary>
        public EntityItemIntType user_id {
            get {
                return this.user_idField;
            }
            set {
                this.user_idField = value;
            }
        }
        
        /// <summary>
        /// This is the group owner of the file, by group number.
        /// </summary>
        public EntityItemIntType group_id {
            get {
                return this.group_idField;
            }
            set {
                this.group_idField = value;
            }
        }
        
        public EntityItemStringType gcos {
            get {
                return this.gcosField;
            }
            set {
                this.gcosField = value;
            }
        }
        
        public EntityItemStringType home_dir {
            get {
                return this.home_dirField;
            }
            set {
                this.home_dirField = value;
            }
        }
        
        public EntityItemStringType login_shell {
            get {
                return this.login_shellField;
            }
            set {
                this.login_shellField = value;
            }
        }
    }
    
    /// <summary>
    /// Output of /usr/bin/ps. See ps(1).
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#unix")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#unix", IsNullable=false)]
    public partial class process_item : ItemType {
        
        private EntityItemStringType commandField;
        
        private EntityItemStringType exec_timeField;
        
        private EntityItemIntType pidField;
        
        private EntityItemIntType ppidField;
        
        private EntityItemIntType priorityField;
        
        private EntityItemIntType ruidField;
        
        private EntityItemStringType scheduling_classField;
        
        private EntityItemStringType start_timeField;
        
        private EntityItemStringType ttyField;
        
        private EntityItemIntType user_idField;
        
        /// <summary>
        /// This specifies the command/program name about which data has has been collected.
        /// </summary>
        public EntityItemStringType command {
            get {
                return this.commandField;
            }
            set {
                this.commandField = value;
            }
        }
        
        /// <summary>
        /// This is the cumulative CPU time, formatted in [DD-]HH:MM:SS where DD is the number of days when execution time is 24 hours or more.
        /// </summary>
        public EntityItemStringType exec_time {
            get {
                return this.exec_timeField;
            }
            set {
                this.exec_timeField = value;
            }
        }
        
        /// <summary>
        /// This is the process ID of the process.
        /// </summary>
        public EntityItemIntType pid {
            get {
                return this.pidField;
            }
            set {
                this.pidField = value;
            }
        }
        
        /// <summary>
        /// This is the process ID of the process's parent process.
        /// </summary>
        public EntityItemIntType ppid {
            get {
                return this.ppidField;
            }
            set {
                this.ppidField = value;
            }
        }
        
        /// <summary>
        /// This is the scheduling priority with which the process runs. This can be adjusted with the nice command or nice() system call.
        /// </summary>
        public EntityItemIntType priority {
            get {
                return this.priorityField;
            }
            set {
                this.priorityField = value;
            }
        }
        
        /// <summary>
        /// This is the real user id which represents the user who has created the process.
        /// </summary>
        public EntityItemIntType ruid {
            get {
                return this.ruidField;
            }
            set {
                this.ruidField = value;
            }
        }
        
        /// <summary>
        /// A platform specific characteristic maintained by the scheduler: RT (real-time), TS (timeshare), FF (fifo), SYS (system), etc.
        /// </summary>
        public EntityItemStringType scheduling_class {
            get {
                return this.scheduling_classField;
            }
            set {
                this.scheduling_classField = value;
            }
        }
        
        /// <summary>
        /// This is the time of day the process started formatted in HH:MM:SS if the same day the process started or formatted as MMM_DD (Ex.: Feb_5) if process started the previous day or further in the past.
        /// </summary>
        public EntityItemStringType start_time {
            get {
                return this.start_timeField;
            }
            set {
                this.start_timeField = value;
            }
        }
        
        /// <summary>
        /// This is the TTY on which the process was started, if applicable.
        /// </summary>
        public EntityItemStringType tty {
            get {
                return this.ttyField;
            }
            set {
                this.ttyField = value;
            }
        }
        
        /// <summary>
        /// This is the effective user id which represents the actual privileges of the process.
        /// </summary>
        public EntityItemIntType user_id {
            get {
                return this.user_idField;
            }
            set {
                this.user_idField = value;
            }
        }
    }
    
    /// <summary>
    /// Output of /usr/bin/ps. See ps(1).
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#unix")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#unix", IsNullable=false)]
    public partial class process58_item : ItemType {
        
        private EntityItemStringType command_lineField;
        
        private EntityItemStringType exec_timeField;
        
        private EntityItemIntType pidField;
        
        private EntityItemIntType ppidField;
        
        private EntityItemIntType priorityField;
        
        private EntityItemIntType ruidField;
        
        private EntityItemStringType scheduling_classField;
        
        private EntityItemStringType start_timeField;
        
        private EntityItemStringType ttyField;
        
        private EntityItemIntType user_idField;
        
        private EntityItemBoolType exec_shieldField;
        
        private EntityItemIntType loginuidField;
        
        private EntityItemCapabilityType[] posix_capabilityField;
        
        private EntityItemStringType[] selinux_domain_labelField;
        
        private EntityItemIntType session_idField;
        
        /// <summary>
        /// This is the string used to start the process. This includes any parameters that are part of the command line.
        /// </summary>
        public EntityItemStringType command_line {
            get {
                return this.command_lineField;
            }
            set {
                this.command_lineField = value;
            }
        }
        
        /// <summary>
        /// This is the cumulative CPU time, formatted in [DD-]HH:MM:SS where DD is the number of days when execution time is 24 hours or more.
        /// </summary>
        public EntityItemStringType exec_time {
            get {
                return this.exec_timeField;
            }
            set {
                this.exec_timeField = value;
            }
        }
        
        /// <summary>
        /// This is the process ID of the process.
        /// </summary>
        public EntityItemIntType pid {
            get {
                return this.pidField;
            }
            set {
                this.pidField = value;
            }
        }
        
        /// <summary>
        /// This is the process ID of the process's parent process.
        /// </summary>
        public EntityItemIntType ppid {
            get {
                return this.ppidField;
            }
            set {
                this.ppidField = value;
            }
        }
        
        /// <summary>
        /// This is the scheduling priority with which the process runs. This can be adjusted with the nice command or nice() system call.
        /// </summary>
        public EntityItemIntType priority {
            get {
                return this.priorityField;
            }
            set {
                this.priorityField = value;
            }
        }
        
        /// <summary>
        /// This is the real user id which represents the user who has created the process.
        /// </summary>
        public EntityItemIntType ruid {
            get {
                return this.ruidField;
            }
            set {
                this.ruidField = value;
            }
        }
        
        /// <summary>
        /// A platform specific characteristic maintained by the scheduler: RT (real-time), TS (timeshare), FF (fifo), SYS (system), etc.
        /// </summary>
        public EntityItemStringType scheduling_class {
            get {
                return this.scheduling_classField;
            }
            set {
                this.scheduling_classField = value;
            }
        }
        
        /// <summary>
        /// This is the time of day the process started formatted in HH:MM:SS if the same day the process started or formatted as MMM_DD (Ex.: Feb_5) if process started the previous day or further in the past.
        /// </summary>
        public EntityItemStringType start_time {
            get {
                return this.start_timeField;
            }
            set {
                this.start_timeField = value;
            }
        }
        
        /// <summary>
        /// This is the TTY on which the process was started, if applicable.
        /// </summary>
        public EntityItemStringType tty {
            get {
                return this.ttyField;
            }
            set {
                this.ttyField = value;
            }
        }
        
        /// <summary>
        /// This is the effective user id which represents the actual privileges of the process.
        /// </summary>
        public EntityItemIntType user_id {
            get {
                return this.user_idField;
            }
            set {
                this.user_idField = value;
            }
        }
        
        /// <summary>
        /// A boolean that when true would indicates that ExecShield is enabled for the process.
        /// </summary>
        public EntityItemBoolType exec_shield {
            get {
                return this.exec_shieldField;
            }
            set {
                this.exec_shieldField = value;
            }
        }
        
        /// <summary>
        /// The loginuid shows which account a user gained access to the system with. The /proc/XXXX/loginuid shows this value.
        /// </summary>
        public EntityItemIntType loginuid {
            get {
                return this.loginuidField;
            }
            set {
                this.loginuidField = value;
            }
        }
        
        /// <summary>
        /// An effective capability associated with the process. See linux/include/linux/capability.h for more information.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("posix_capability")]
        public EntityItemCapabilityType[] posix_capability {
            get {
                return this.posix_capabilityField;
            }
            set {
                this.posix_capabilityField = value;
            }
        }
        
        /// <summary>
        /// An selinux domain label associated with the process.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("selinux_domain_label")]
        public EntityItemStringType[] selinux_domain_label {
            get {
                return this.selinux_domain_labelField;
            }
            set {
                this.selinux_domain_labelField = value;
            }
        }
        
        /// <summary>
        /// The session ID of the process.
        /// </summary>
        public EntityItemIntType session_id {
            get {
                return this.session_idField;
            }
            set {
                this.session_idField = value;
            }
        }
    }
    
    /// <summary>
    /// The routingtable_item holds information about an individual routing table entry found in a system's primary routing table. Each routingtable_item contains a destination IP address, gateway, netmask, flags, and the name of the interface associated with it. It is important to note that only numerical addresses will be collected and that their symbolic representations will not be resolved. This equivalent to using the '-n' option with route(8) or netstat(8). It extends the standard ItemType as defined in the oval-system-characteristics schema and one should refer to the ItemType description for more information.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#unix")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#unix", IsNullable=false)]
    public partial class routingtable_item : ItemType {
        
        private EntityItemIPAddressType destinationField;
        
        private EntityItemIPAddressType gatewayField;
        
        private EntityItemRoutingTableFlagsType[] flagsField;
        
        private EntityItemStringType interface_nameField;
        
        /// <summary>
        /// The destination IP address prefix of the routing table entry. This is the destination IP address and netmask/prefix-length expressed using CIDR notation.
        /// </summary>
        public EntityItemIPAddressType destination {
            get {
                return this.destinationField;
            }
            set {
                this.destinationField = value;
            }
        }
        
        /// <summary>
        /// The gateway of the specified routing table entry.
        /// </summary>
        public EntityItemIPAddressType gateway {
            get {
                return this.gatewayField;
            }
            set {
                this.gatewayField = value;
            }
        }
        
        /// <summary>
        /// The flags associated with the specified routing table entry.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("flags")]
        public EntityItemRoutingTableFlagsType[] flags {
            get {
                return this.flagsField;
            }
            set {
                this.flagsField = value;
            }
        }
        
        /// <summary>
        /// The name of the interface associated with the routing table entry.
        /// </summary>
        public EntityItemStringType interface_name {
            get {
                return this.interface_nameField;
            }
            set {
                this.interface_nameField = value;
            }
        }
    }
    
    /// <summary>
    /// The runlevel item holds information about the start or kill state of a specified service at a given runlevel. Each runlevel item contains service_name and runlevel information as well as start and kill information. It extends the standard ItemType as defined in the oval-system-characteristics schema and one should refer to the ItemType description for more information.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#unix")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#unix", IsNullable=false)]
    public partial class runlevel_item : ItemType {
        
        private EntityItemStringType service_nameField;
        
        private EntityItemStringType runlevelField;
        
        private EntityItemBoolType startField;
        
        private EntityItemBoolType killField;
        
        /// <summary>
        /// The service_name entity is the actual name of the specific service.
        /// </summary>
        public EntityItemStringType service_name {
            get {
                return this.service_nameField;
            }
            set {
                this.service_nameField = value;
            }
        }
        
        /// <summary>
        /// The runlevel entity specifies is the runlevel the system is currently at.
        /// </summary>
        public EntityItemStringType runlevel {
            get {
                return this.runlevelField;
            }
            set {
                this.runlevelField = value;
            }
        }
        
        /// <summary>
        /// The start entity specifies whether the service is scheduled to start at the current runlevel.
        /// </summary>
        public EntityItemBoolType start {
            get {
                return this.startField;
            }
            set {
                this.startField = value;
            }
        }
        
        /// <summary>
        /// The kill entity specifies whether the service is scheduled to be killed at the current runlevel.
        /// </summary>
        public EntityItemBoolType kill {
            get {
                return this.killField;
            }
            set {
                this.killField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#unix")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#unix", IsNullable=false)]
    public partial class sccs_item : ItemType {
        
        private EntityItemStringType filepathField;
        
        private EntityItemStringType pathField;
        
        private EntityItemStringType filenameField;
        
        private EntityItemStringType module_nameField;
        
        private EntityItemStringType module_typeField;
        
        private EntityItemStringType releaseField;
        
        private EntityItemStringType levelField;
        
        private EntityItemStringType branchField;
        
        private EntityItemStringType sequenceField;
        
        private EntityItemStringType what_stringField;
        
        /// <summary>
        /// Specifies the absolute path to an SCCS file. A directory cannot be specified as a filepath.
        /// </summary>
        public EntityItemStringType filepath {
            get {
                return this.filepathField;
            }
            set {
                this.filepathField = value;
            }
        }
        
        /// <summary>
        /// The path element specifies the directory component of the absolute path to an SCCS file.
        /// </summary>
        public EntityItemStringType path {
            get {
                return this.pathField;
            }
            set {
                this.pathField = value;
            }
        }
        
        /// <summary>
        /// The name of an SCCS file.
        /// </summary>
        public EntityItemStringType filename {
            get {
                return this.filenameField;
            }
            set {
                this.filenameField = value;
            }
        }
        
        public EntityItemStringType module_name {
            get {
                return this.module_nameField;
            }
            set {
                this.module_nameField = value;
            }
        }
        
        public EntityItemStringType module_type {
            get {
                return this.module_typeField;
            }
            set {
                this.module_typeField = value;
            }
        }
        
        public EntityItemStringType release {
            get {
                return this.releaseField;
            }
            set {
                this.releaseField = value;
            }
        }
        
        public EntityItemStringType level {
            get {
                return this.levelField;
            }
            set {
                this.levelField = value;
            }
        }
        
        public EntityItemStringType branch {
            get {
                return this.branchField;
            }
            set {
                this.branchField = value;
            }
        }
        
        public EntityItemStringType sequence {
            get {
                return this.sequenceField;
            }
            set {
                this.sequenceField = value;
            }
        }
        
        public EntityItemStringType what_string {
            get {
                return this.what_stringField;
            }
            set {
                this.what_stringField = value;
            }
        }
    }
    
    /// <summary>
    /// /etc/shadow. See shadow(4).
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#unix")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#unix", IsNullable=false)]
    public partial class shadow_item : ItemType {
        
        private EntityItemStringType usernameField;
        
        private EntityItemStringType passwordField;
        
        private EntityItemIntType chg_lstField;
        
        private EntityItemIntType chg_allowField;
        
        private EntityItemIntType chg_reqField;
        
        private EntityItemIntType exp_warnField;
        
        private EntityItemIntType exp_inactField;
        
        private EntityItemIntType exp_dateField;
        
        private EntityItemStringType flagField;
        
        private EntityItemEncryptMethodType encrypt_methodField;
        
        /// <summary>
        /// This is the name of the user for which data was gathered.
        /// </summary>
        public EntityItemStringType username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
            }
        }
        
        /// <summary>
        /// This is the encrypted version of the user's password.
        /// </summary>
        public EntityItemStringType password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <summary>
        /// This is the date of the last password change in days since 1/1/1970.
        /// </summary>
        public EntityItemIntType chg_lst {
            get {
                return this.chg_lstField;
            }
            set {
                this.chg_lstField = value;
            }
        }
        
        /// <summary>
        /// This specifies how often in days a user may change their password. It can also be thought of as the minimum age of a password.
        /// </summary>
        public EntityItemIntType chg_allow {
            get {
                return this.chg_allowField;
            }
            set {
                this.chg_allowField = value;
            }
        }
        
        /// <summary>
        /// This describes how long a user can keep a password before the system forces her to change it.
        /// </summary>
        public EntityItemIntType chg_req {
            get {
                return this.chg_reqField;
            }
            set {
                this.chg_reqField = value;
            }
        }
        
        /// <summary>
        /// This describes how long before password expiration the system begins warning the user. The system will warn the user at each login.
        /// </summary>
        public EntityItemIntType exp_warn {
            get {
                return this.exp_warnField;
            }
            set {
                this.exp_warnField = value;
            }
        }
        
        /// <summary>
        /// This describes how many days of account inactivity the system will wait after a password expires before locking the account? This window, usually only set to a few days, gives users who are logging in very seldomly a bit of extra time to receive the password expiration warning and change their password.
        /// </summary>
        public EntityItemIntType exp_inact {
            get {
                return this.exp_inactField;
            }
            set {
                this.exp_inactField = value;
            }
        }
        
        /// <summary>
        /// This specifies when will the account's password expire, in days since 1/1/1970.
        /// </summary>
        public EntityItemIntType exp_date {
            get {
                return this.exp_dateField;
            }
            set {
                this.exp_dateField = value;
            }
        }
        
        /// <summary>
        /// This is a reserved field that the shadow file may use in the future.
        /// </summary>
        public EntityItemStringType flag {
            get {
                return this.flagField;
            }
            set {
                this.flagField = value;
            }
        }
        
        /// <summary>
        /// The encrypt_method entity describes method that is used for hashing passwords.
        /// </summary>
        public EntityItemEncryptMethodType encrypt_method {
            get {
                return this.encrypt_methodField;
            }
            set {
                this.encrypt_methodField = value;
            }
        }
    }
    
    /// <summary>
    /// The sysctl_item stores information retrieved from the local system about a kernel parameter and its respective value(s).
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#unix")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#unix", IsNullable=false)]
    public partial class sysctl_item : ItemType {
        
        private EntityItemStringType nameField;
        
        private EntityItemAnySimpleType valueField;
        
        /// <summary>
        /// The name element contains a string that represents the name of a kernel parameter that was collected from the local system.
        /// </summary>
        public EntityItemStringType name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <summary>
        /// The value element contains a string that represents the current value(s) for the specified kernel parameter on the local system.
        /// </summary>
        public EntityItemAnySimpleType value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <summary>
    /// Information about the hardware the machine is running on. This information is the parsed equivalent of uname -a.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#unix")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#unix", IsNullable=false)]
    public partial class uname_item : ItemType {
        
        private EntityItemStringType machine_classField;
        
        private EntityItemStringType node_nameField;
        
        private EntityItemStringType os_nameField;
        
        private EntityItemStringType os_releaseField;
        
        private EntityItemStringType os_versionField;
        
        private EntityItemStringType processor_typeField;
        
        /// <summary>
        /// This entity specifies the machine hardware name.  This corresponds to the command uname -m.
        /// </summary>
        public EntityItemStringType machine_class {
            get {
                return this.machine_classField;
            }
            set {
                this.machine_classField = value;
            }
        }
        
        /// <summary>
        /// This entity specifies the host name.  This corresponds to the command uname -n.
        /// </summary>
        public EntityItemStringType node_name {
            get {
                return this.node_nameField;
            }
            set {
                this.node_nameField = value;
            }
        }
        
        /// <summary>
        /// This entity specifies the operating system name.  This corresponds to the command uname -s.
        /// </summary>
        public EntityItemStringType os_name {
            get {
                return this.os_nameField;
            }
            set {
                this.os_nameField = value;
            }
        }
        
        /// <summary>
        /// This entity specifies the build version.  This corresponds to the command uname -r.
        /// </summary>
        public EntityItemStringType os_release {
            get {
                return this.os_releaseField;
            }
            set {
                this.os_releaseField = value;
            }
        }
        
        /// <summary>
        /// This entity specifies the operating system version.  This corresponds to the command uname -v.
        /// </summary>
        public EntityItemStringType os_version {
            get {
                return this.os_versionField;
            }
            set {
                this.os_versionField = value;
            }
        }
        
        /// <summary>
        /// This entity specifies the processor type.  This corresponds to the command uname -p.
        /// </summary>
        public EntityItemStringType processor_type {
            get {
                return this.processor_typeField;
            }
            set {
                this.processor_typeField = value;
            }
        }
    }
    
    /// <summary>
    /// The xinetd item holds information associated with different Internet services. It extends the standard ItemType as defined in the oval-system-characteristics schema and one should refer to the ItemType description for more information.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#unix")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#unix", IsNullable=false)]
    public partial class xinetd_item : ItemType {
        
        private EntityItemStringType protocolField;
        
        private EntityItemStringType service_nameField;
        
        private EntityItemStringType[] flagsField;
        
        private EntityItemStringType[] no_accessField;
        
        private EntityItemIPAddressStringType[] only_fromField;
        
        private EntityItemIntType portField;
        
        private EntityItemStringType serverField;
        
        private EntityItemStringType server_argumentsField;
        
        private EntityItemStringType socket_typeField;
        
        private EntityItemXinetdTypeStatusType typeField;
        
        private EntityItemStringType userField;
        
        private EntityItemBoolType waitField;
        
        private EntityItemBoolType disabledField;
        
        /// <summary>
        /// The protocol entity describes the protocol related to the service item.
        /// </summary>
        public EntityItemStringType protocol {
            get {
                return this.protocolField;
            }
            set {
                this.protocolField = value;
            }
        }
        
        /// <summary>
        /// The service_name entity describes the name of the service.
        /// </summary>
        public EntityItemStringType service_name {
            get {
                return this.service_nameField;
            }
            set {
                this.service_nameField = value;
            }
        }
        
        /// <summary>
        /// The flags entity describes miscellaneous settings like TCP keepalives or libwrap deactivation.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("flags")]
        public EntityItemStringType[] flags {
            get {
                return this.flagsField;
            }
            set {
                this.flagsField = value;
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("no_access")]
        public EntityItemStringType[] no_access {
            get {
                return this.no_accessField;
            }
            set {
                this.no_accessField = value;
            }
        }
        
        /// <summary>
        /// The only_from entity describes specifies an exclusive set of IP addresses that may connect to this service
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("only_from")]
        public EntityItemIPAddressStringType[] only_from {
            get {
                return this.only_fromField;
            }
            set {
                this.only_fromField = value;
            }
        }
        
        public EntityItemIntType port {
            get {
                return this.portField;
            }
            set {
                this.portField = value;
            }
        }
        
        /// <summary>
        /// what program listens on this port
        /// </summary>
        public EntityItemStringType server {
            get {
                return this.serverField;
            }
            set {
                this.serverField = value;
            }
        }
        
        public EntityItemStringType server_arguments {
            get {
                return this.server_argumentsField;
            }
            set {
                this.server_argumentsField = value;
            }
        }
        
        public EntityItemStringType socket_type {
            get {
                return this.socket_typeField;
            }
            set {
                this.socket_typeField = value;
            }
        }
        
        public EntityItemXinetdTypeStatusType type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <summary>
        /// The user entity describes user that xinetd should run the service as.
        /// </summary>
        public EntityItemStringType user {
            get {
                return this.userField;
            }
            set {
                this.userField = value;
            }
        }
        
        /// <summary>
        /// The wait entity describes whether the service allows only one connection at a time.
        /// </summary>
        public EntityItemBoolType wait {
            get {
                return this.waitField;
            }
            set {
                this.waitField = value;
            }
        }
        
        /// <summary>
        /// The disabled entity describes whether this service is on or not.
        /// </summary>
        public EntityItemBoolType disabled {
            get {
                return this.disabledField;
            }
            set {
                this.disabledField = value;
            }
        }
    }
}
