// ------------------------------------------------------------------------------
//  <auto-generated>
//    Generated by Xsd2Code. Version 3.5.0.14890
//    <NameSpace>Modulo.Collect.OVAL.SystemCharacteristics</NameSpace><Collection>Array</Collection><codeType>CSharp</codeType><EnableDataBinding>False</EnableDataBinding><EnableLazyLoading>False</EnableLazyLoading><TrackingChangesEnable>False</TrackingChangesEnable><GenTrackingClasses>False</GenTrackingClasses><HidePrivateFieldInIDE>False</HidePrivateFieldInIDE><EnableSummaryComment>True</EnableSummaryComment><VirtualProp>False</VirtualProp><IncludeSerializeMethod>False</IncludeSerializeMethod><UseBaseClass>False</UseBaseClass><GenBaseClass>False</GenBaseClass><GenerateCloneMethod>False</GenerateCloneMethod><GenerateDataContracts>False</GenerateDataContracts><CodeBaseTag>Net20</CodeBaseTag><SerializeMethodName>Serialize</SerializeMethodName><DeserializeMethodName>Deserialize</DeserializeMethodName><SaveToFileMethodName>SaveToFile</SaveToFileMethodName><LoadFromFileMethodName>LoadFromFile</LoadFromFileMethodName><GenerateXMLAttributes>True</GenerateXMLAttributes><OrderXMLAttrib>False</OrderXMLAttrib><EnableEncoding>False</EnableEncoding><AutomaticProperties>False</AutomaticProperties><GenerateShouldSerialize>False</GenerateShouldSerialize><DisableDebug>False</DisableDebug><PropNameSpecified>Default</PropNameSpecified><Encoder>UTF8</Encoder><CustomUsings>Modulo.Collect.OVAL.Common;Modulo.Collect.OVAL.SystemCharacteristics</CustomUsings><ExcludeIncludedTypes>True</ExcludeIncludedTypes><EnableInitializeFields>False</EnableInitializeFields>
//  </auto-generated>
// ------------------------------------------------------------------------------
namespace Modulo.Collect.OVAL.SystemCharacteristics {
    using System;
    using System.Diagnostics;
    using System.Xml.Serialization;
    using System.Collections;
    using System.Xml.Schema;
    using System.ComponentModel;
    using Modulo.Collect.OVAL.Common;
    using Modulo.Collect.OVAL.SystemCharacteristics;
    
    
    /// <summary>
    /// The access token item holds information about the individual privileges and rights associated with a specific access token. It is important to note that these privileges are specific to certain versions of Windows.  As a result, the documentation for that version of Windows should be consulted for more information. Each privilege and right in the data section accepts a boolean value signifying whether the privilege is granted or not. It extends the standard ItemType as defined in the oval-system-characteristics schema and one should refer to the ItemType description for more information.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#windows")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#windows", IsNullable=false)]
    public partial class accesstoken_item : ItemType {
        
        private EntityItemStringType security_principleField;
        
        private EntityItemBoolType seassignprimarytokenprivilegeField;
        
        private EntityItemBoolType seauditprivilegeField;
        
        private EntityItemBoolType sebackupprivilegeField;
        
        private EntityItemBoolType sechangenotifyprivilegeField;
        
        private EntityItemBoolType secreateglobalprivilegeField;
        
        private EntityItemBoolType secreatepagefileprivilegeField;
        
        private EntityItemBoolType secreatepermanentprivilegeField;
        
        private EntityItemBoolType secreatesymboliclinkprivilegeField;
        
        private EntityItemBoolType secreatetokenprivilegeField;
        
        private EntityItemBoolType sedebugprivilegeField;
        
        private EntityItemBoolType seenabledelegationprivilegeField;
        
        private EntityItemBoolType seimpersonateprivilegeField;
        
        private EntityItemBoolType seincreasebasepriorityprivilegeField;
        
        private EntityItemBoolType seincreasequotaprivilegeField;
        
        private EntityItemBoolType seincreaseworkingsetprivilegeField;
        
        private EntityItemBoolType seloaddriverprivilegeField;
        
        private EntityItemBoolType selockmemoryprivilegeField;
        
        private EntityItemBoolType semachineaccountprivilegeField;
        
        private EntityItemBoolType semanagevolumeprivilegeField;
        
        private EntityItemBoolType seprofilesingleprocessprivilegeField;
        
        private EntityItemBoolType serelabelprivilegeField;
        
        private EntityItemBoolType seremoteshutdownprivilegeField;
        
        private EntityItemBoolType serestoreprivilegeField;
        
        private EntityItemBoolType sesecurityprivilegeField;
        
        private EntityItemBoolType seshutdownprivilegeField;
        
        private EntityItemBoolType sesyncagentprivilegeField;
        
        private EntityItemBoolType sesystemenvironmentprivilegeField;
        
        private EntityItemBoolType sesystemprofileprivilegeField;
        
        private EntityItemBoolType sesystemtimeprivilegeField;
        
        private EntityItemBoolType setakeownershipprivilegeField;
        
        private EntityItemBoolType setcbprivilegeField;
        
        private EntityItemBoolType setimezoneprivilegeField;
        
        private EntityItemBoolType seundockprivilegeField;
        
        private EntityItemBoolType seunsolicitedinputprivilegeField;
        
        private EntityItemBoolType sebatchlogonrightField;
        
        private EntityItemBoolType seinteractivelogonrightField;
        
        private EntityItemBoolType senetworklogonrightField;
        
        private EntityItemBoolType seremoteinteractivelogonrightField;
        
        private EntityItemBoolType seservicelogonrightField;
        
        private EntityItemBoolType sedenybatchLogonrightField;
        
        private EntityItemBoolType sedenyinteractivelogonrightField;
        
        private EntityItemBoolType sedenynetworklogonrightField;
        
        private EntityItemBoolType sedenyremoteInteractivelogonrightField;
        
        private EntityItemBoolType sedenyservicelogonrightField;
        
        private EntityItemBoolType setrustedcredmanaccessnamerightField;
        
        /// <summary>
        /// Security principles include users or groups with either local or domain accounts, and computer accounts created when a computer joins a domain. In Windows, security principles are case-insensitive. As a result, it is recommended that the case-insensitive operations are used for this entity. User rights and permissions to access objects such as Active Directory objects, files, and registry settings are assigned to security principles. In a domain environment, security principles should be identified in the form: "domain\trustee name". For local security principles use: "computer name\trustee name". For built-in accounts on the system, use the trustee name without a domain.
        /// </summary>
        public EntityItemStringType security_principle {
            get {
                return this.security_principleField;
            }
            set {
                this.security_principleField = value;
            }
        }
        
        /// <summary>
        /// If this privilege is enabled, it allows a parent process to replace the access token that is associated with a child process.
        /// </summary>
        public EntityItemBoolType seassignprimarytokenprivilege {
            get {
                return this.seassignprimarytokenprivilegeField;
            }
            set {
                this.seassignprimarytokenprivilegeField = value;
            }
        }
        
        /// <summary>
        /// If this privilege is enabled, it allows a process to generate audit records in the security log. The security log can be used to trace unauthorized system access.
        /// </summary>
        public EntityItemBoolType seauditprivilege {
            get {
                return this.seauditprivilegeField;
            }
            set {
                this.seauditprivilegeField = value;
            }
        }
        
        /// <summary>
        /// If this privilege is enabled, it allows the user to circumvent file and directory permissions to back up the system. The privilege is selected only when an application attempts access by using the NTFS backup application programming interface (API). Otherwise, normal file and directory permissions apply.
        /// </summary>
        public EntityItemBoolType sebackupprivilege {
            get {
                return this.sebackupprivilegeField;
            }
            set {
                this.sebackupprivilegeField = value;
            }
        }
        
        /// <summary>
        /// If this privilege is enabled, it allows the user to pass through folders to which the user otherwise has no access while navigating an object path in the NTFS file system or in the registry. This privilege does not allow the user to list the contents of a folder; it allows the user only to traverse its directories.
        /// </summary>
        public EntityItemBoolType sechangenotifyprivilege {
            get {
                return this.sechangenotifyprivilegeField;
            }
            set {
                this.sechangenotifyprivilegeField = value;
            }
        }
        
        /// <summary>
        /// If this privilege is enabled, it allows the user to create named file mapping objects in the global namespace during Terminal Services sessions.
        /// </summary>
        public EntityItemBoolType secreateglobalprivilege {
            get {
                return this.secreateglobalprivilegeField;
            }
            set {
                this.secreateglobalprivilegeField = value;
            }
        }
        
        /// <summary>
        /// If this privilege is enabled, it allows the user to create and change the size of a pagefile.
        /// </summary>
        public EntityItemBoolType secreatepagefileprivilege {
            get {
                return this.secreatepagefileprivilegeField;
            }
            set {
                this.secreatepagefileprivilegeField = value;
            }
        }
        
        /// <summary>
        /// If this privilege is enabled, it allows a process to create a directory object in the object manager. It is useful to kernel-mode components that extend the object namespace. Components that are running in kernel mode have this privilege inherently.
        /// </summary>
        public EntityItemBoolType secreatepermanentprivilege {
            get {
                return this.secreatepermanentprivilegeField;
            }
            set {
                this.secreatepermanentprivilegeField = value;
            }
        }
        
        /// <summary>
        /// If this privilege is enabled, it allows a user create a symbolic link.
        /// </summary>
        public EntityItemBoolType secreatesymboliclinkprivilege {
            get {
                return this.secreatesymboliclinkprivilegeField;
            }
            set {
                this.secreatesymboliclinkprivilegeField = value;
            }
        }
        
        /// <summary>
        /// If this privilege is enabled, it allows a process to create an access token by calling NtCreateToken() or other token-creating APIs.
        /// </summary>
        public EntityItemBoolType secreatetokenprivilege {
            get {
                return this.secreatetokenprivilegeField;
            }
            set {
                this.secreatetokenprivilegeField = value;
            }
        }
        
        /// <summary>
        /// If this privilege is enabled, it allows the user to attach a debugger to any process. It provides access to sensitive and critical operating system components.
        /// </summary>
        public EntityItemBoolType sedebugprivilege {
            get {
                return this.sedebugprivilegeField;
            }
            set {
                this.sedebugprivilegeField = value;
            }
        }
        
        /// <summary>
        /// If this privilege is enabled, it allows the user to change the Trusted for Delegation setting on a user or computer object in Active Directory. The user or computer that is granted this privilege must also have write access to the account control flags on the object.
        /// </summary>
        public EntityItemBoolType seenabledelegationprivilege {
            get {
                return this.seenabledelegationprivilegeField;
            }
            set {
                this.seenabledelegationprivilegeField = value;
            }
        }
        
        /// <summary>
        /// If this privilege is enabled, it allows the user to impersonate a client after authentication.
        /// </summary>
        public EntityItemBoolType seimpersonateprivilege {
            get {
                return this.seimpersonateprivilegeField;
            }
            set {
                this.seimpersonateprivilegeField = value;
            }
        }
        
        /// <summary>
        /// If this privilege is enabled, it allows a user to increase the base priority class of a process.
        /// </summary>
        public EntityItemBoolType seincreasebasepriorityprivilege {
            get {
                return this.seincreasebasepriorityprivilegeField;
            }
            set {
                this.seincreasebasepriorityprivilegeField = value;
            }
        }
        
        /// <summary>
        /// If this privilege is enabled, it allows a process that has access to a second process to increase the processor quota assigned to the second process.
        /// </summary>
        public EntityItemBoolType seincreasequotaprivilege {
            get {
                return this.seincreasequotaprivilegeField;
            }
            set {
                this.seincreasequotaprivilegeField = value;
            }
        }
        
        /// <summary>
        /// If this privilege is enabled, it allows a user to increase a process working set.
        /// </summary>
        public EntityItemBoolType seincreaseworkingsetprivilege {
            get {
                return this.seincreaseworkingsetprivilegeField;
            }
            set {
                this.seincreaseworkingsetprivilegeField = value;
            }
        }
        
        /// <summary>
        /// If this privilege is enabled, it allows a user to install and remove drivers for Plug and Play devices.
        /// </summary>
        public EntityItemBoolType seloaddriverprivilege {
            get {
                return this.seloaddriverprivilegeField;
            }
            set {
                this.seloaddriverprivilegeField = value;
            }
        }
        
        /// <summary>
        /// If this privilege is enabled, it allows a process to keep data in physical memory, which prevents the system from paging the data to virtual memory on disk.
        /// </summary>
        public EntityItemBoolType selockmemoryprivilege {
            get {
                return this.selockmemoryprivilegeField;
            }
            set {
                this.selockmemoryprivilegeField = value;
            }
        }
        
        /// <summary>
        /// If this privilege is enabled, it allows the user to add a computer to a specific domain.
        /// </summary>
        public EntityItemBoolType semachineaccountprivilege {
            get {
                return this.semachineaccountprivilegeField;
            }
            set {
                this.semachineaccountprivilegeField = value;
            }
        }
        
        /// <summary>
        /// If this privilege is enabled, it allows a non-administrative or remote user to manage volumes or disks.
        /// </summary>
        public EntityItemBoolType semanagevolumeprivilege {
            get {
                return this.semanagevolumeprivilegeField;
            }
            set {
                this.semanagevolumeprivilegeField = value;
            }
        }
        
        /// <summary>
        /// If this privilege is enabled, it allows a user to sample the performance of an application process.
        /// </summary>
        public EntityItemBoolType seprofilesingleprocessprivilege {
            get {
                return this.seprofilesingleprocessprivilegeField;
            }
            set {
                this.seprofilesingleprocessprivilegeField = value;
            }
        }
        
        /// <summary>
        /// If this privilege is enabled, it allows a user to modify an object label.
        /// </summary>
        public EntityItemBoolType serelabelprivilege {
            get {
                return this.serelabelprivilegeField;
            }
            set {
                this.serelabelprivilegeField = value;
            }
        }
        
        /// <summary>
        /// If this privilege is enabled, it allows a user to shut down a computer from a remote location on the network.
        /// </summary>
        public EntityItemBoolType seremoteshutdownprivilege {
            get {
                return this.seremoteshutdownprivilegeField;
            }
            set {
                this.seremoteshutdownprivilegeField = value;
            }
        }
        
        /// <summary>
        /// If this privilege is enabled, it allows a user to circumvent file and directory permissions when restoring backed-up files and directories and to set any valid security principle as the owner of an object.
        /// </summary>
        public EntityItemBoolType serestoreprivilege {
            get {
                return this.serestoreprivilegeField;
            }
            set {
                this.serestoreprivilegeField = value;
            }
        }
        
        /// <summary>
        /// If this privilege is enabled, it allows a user to specify object access auditing options for individual resources such as files, Active Directory objects, and registry keys. A user who has this privilege can also view and clear the security log from Event Viewer.
        /// </summary>
        public EntityItemBoolType sesecurityprivilege {
            get {
                return this.sesecurityprivilegeField;
            }
            set {
                this.sesecurityprivilegeField = value;
            }
        }
        
        /// <summary>
        /// If this privilege is enabled, it allows a user to shut down the local computer.
        /// </summary>
        public EntityItemBoolType seshutdownprivilege {
            get {
                return this.seshutdownprivilegeField;
            }
            set {
                this.seshutdownprivilegeField = value;
            }
        }
        
        /// <summary>
        /// If this privilege is enabled, it allows a process to read all objects and properties in the directory, regardless of the protection on the objects and properties. It is required in order to use Lightweight Directory Access Protocol (LDAP) directory synchronization (Dirsync) services.
        /// </summary>
        public EntityItemBoolType sesyncagentprivilege {
            get {
                return this.sesyncagentprivilegeField;
            }
            set {
                this.sesyncagentprivilegeField = value;
            }
        }
        
        /// <summary>
        /// If this privilege is enabled, it allows modification of system environment variables either by a process through an API or by a user through System Properties.
        /// </summary>
        public EntityItemBoolType sesystemenvironmentprivilege {
            get {
                return this.sesystemenvironmentprivilegeField;
            }
            set {
                this.sesystemenvironmentprivilegeField = value;
            }
        }
        
        /// <summary>
        /// If this privilege is enabled, it allows a user to sample the performance of system processes.
        /// </summary>
        public EntityItemBoolType sesystemprofileprivilege {
            get {
                return this.sesystemprofileprivilegeField;
            }
            set {
                this.sesystemprofileprivilegeField = value;
            }
        }
        
        /// <summary>
        /// If this privilege is enabled, it allows the user to adjust the time on the computer's internal clock. It is not required to change the time zone or other display characteristics of the system time.
        /// </summary>
        public EntityItemBoolType sesystemtimeprivilege {
            get {
                return this.sesystemtimeprivilegeField;
            }
            set {
                this.sesystemtimeprivilegeField = value;
            }
        }
        
        /// <summary>
        /// If this privilege is enabled, it allows a user to take ownership of any securable object in the system, including Active Directory objects, NTFS files and folders, printers, registry keys, services, processes, and threads.
        /// </summary>
        public EntityItemBoolType setakeownershipprivilege {
            get {
                return this.setakeownershipprivilegeField;
            }
            set {
                this.setakeownershipprivilegeField = value;
            }
        }
        
        /// <summary>
        /// If this privilege is enabled, it allows a process to assume the identity of any user and thus gain access to the resources that the user is authorized to access.
        /// </summary>
        public EntityItemBoolType setcbprivilege {
            get {
                return this.setcbprivilegeField;
            }
            set {
                this.setcbprivilegeField = value;
            }
        }
        
        /// <summary>
        /// If this privilege is enabled, it allows a user to change the time zone.
        /// </summary>
        public EntityItemBoolType setimezoneprivilege {
            get {
                return this.setimezoneprivilegeField;
            }
            set {
                this.setimezoneprivilegeField = value;
            }
        }
        
        /// <summary>
        /// If this privilege is enabled, it allows the user of a portable computer to undock the computer by clicking Eject PC on the Start menu.
        /// </summary>
        public EntityItemBoolType seundockprivilege {
            get {
                return this.seundockprivilegeField;
            }
            set {
                this.seundockprivilegeField = value;
            }
        }
        
        /// <summary>
        /// If this privilege is enabled, it allows the user to read unsolicited data from a terminal device.
        /// </summary>
        public EntityItemBoolType seunsolicitedinputprivilege {
            get {
                return this.seunsolicitedinputprivilegeField;
            }
            set {
                this.seunsolicitedinputprivilegeField = value;
            }
        }
        
        /// <summary>
        /// If an account is assigned this right, it can log on using the batch logon type.
        /// </summary>
        public EntityItemBoolType sebatchlogonright {
            get {
                return this.sebatchlogonrightField;
            }
            set {
                this.sebatchlogonrightField = value;
            }
        }
        
        /// <summary>
        /// If an account is assigned this right, it can log on using the interactive logon type.
        /// </summary>
        public EntityItemBoolType seinteractivelogonright {
            get {
                return this.seinteractivelogonrightField;
            }
            set {
                this.seinteractivelogonrightField = value;
            }
        }
        
        /// <summary>
        /// If an account is assigned this right, it can log on using the network logon type.
        /// </summary>
        public EntityItemBoolType senetworklogonright {
            get {
                return this.senetworklogonrightField;
            }
            set {
                this.senetworklogonrightField = value;
            }
        }
        
        /// <summary>
        /// If an account is assigned this right, it can log on to the computer by using a Remote Desktop connection.
        /// </summary>
        public EntityItemBoolType seremoteinteractivelogonright {
            get {
                return this.seremoteinteractivelogonrightField;
            }
            set {
                this.seremoteinteractivelogonrightField = value;
            }
        }
        
        /// <summary>
        /// If an account is assigned this right, it can log on using the service logon type.
        /// </summary>
        public EntityItemBoolType seservicelogonright {
            get {
                return this.seservicelogonrightField;
            }
            set {
                this.seservicelogonrightField = value;
            }
        }
        
        /// <summary>
        /// If an account is assigned this right, it is explicitly denied the ability to log on using the batch logon type.
        /// </summary>
        public EntityItemBoolType sedenybatchLogonright {
            get {
                return this.sedenybatchLogonrightField;
            }
            set {
                this.sedenybatchLogonrightField = value;
            }
        }
        
        /// <summary>
        /// If an account is assigned this right, it is explicitly denied the ability to log on using the interactive logon type.
        /// </summary>
        public EntityItemBoolType sedenyinteractivelogonright {
            get {
                return this.sedenyinteractivelogonrightField;
            }
            set {
                this.sedenyinteractivelogonrightField = value;
            }
        }
        
        /// <summary>
        /// If an account is assigned this right, it is explicitly denied the ability to log on using the network logon type.
        /// </summary>
        public EntityItemBoolType sedenynetworklogonright {
            get {
                return this.sedenynetworklogonrightField;
            }
            set {
                this.sedenynetworklogonrightField = value;
            }
        }
        
        /// <summary>
        /// If an account is assigned this right, it is explicitly denied the ability to log on through Terminal Services.
        /// </summary>
        public EntityItemBoolType sedenyremoteInteractivelogonright {
            get {
                return this.sedenyremoteInteractivelogonrightField;
            }
            set {
                this.sedenyremoteInteractivelogonrightField = value;
            }
        }
        
        /// <summary>
        /// If an account is assigned this right, it is explicitly denied the ability to log on using the service logon type.
        /// </summary>
        public EntityItemBoolType sedenyservicelogonright {
            get {
                return this.sedenyservicelogonrightField;
            }
            set {
                this.sedenyservicelogonrightField = value;
            }
        }
        
        /// <summary>
        /// If an account is assigned this right, it can access the Credential Manager as a trusted caller.
        /// </summary>
        public EntityItemBoolType setrustedcredmanaccessnameright {
            get {
                return this.setrustedcredmanaccessnamerightField;
            }
            set {
                this.setrustedcredmanaccessnamerightField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#windows")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#windows", IsNullable=true)]
    public partial class EntityItemSharedResourceTypeType : EntityItemStringType {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#windows")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#windows", IsNullable=true)]
    public partial class EntityItemServiceTypeType : EntityItemStringType {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#windows")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#windows", IsNullable=true)]
    public partial class EntityItemServiceStartTypeType : EntityItemStringType {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#windows")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#windows", IsNullable=true)]
    public partial class EntityItemServiceCurrentStateType : EntityItemStringType {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#windows")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#windows", IsNullable=true)]
    public partial class EntityItemServiceControlsAcceptedType : EntityItemStringType {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#windows")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#windows", IsNullable=true)]
    public partial class EntityItemRegistryTypeType : EntityItemStringType {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#windows")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#windows", IsNullable=true)]
    public partial class EntityItemRegistryHiveType : EntityItemStringType {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#windows")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#windows", IsNullable=true)]
    public partial class EntityItemProtocolType : EntityItemStringType {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#windows")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#windows", IsNullable=true)]
    public partial class EntityItemNamingContextType : EntityItemStringType {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#windows")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#windows", IsNullable=true)]
    public partial class EntityItemInterfaceTypeType : EntityItemStringType {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#windows")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#windows", IsNullable=true)]
    public partial class EntityItemFileTypeType : EntityItemStringType {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#windows")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#windows", IsNullable=true)]
    public partial class EntityItemDriveTypeType : EntityItemStringType {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#windows")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#windows", IsNullable=true)]
    public partial class EntityItemAuditType : EntityItemStringType {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#windows")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#windows", IsNullable=true)]
    public partial class EntityItemAdstypeType : EntityItemStringType {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#windows")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#windows", IsNullable=true)]
    public partial class EntityItemAddrTypeType : EntityItemStringType {
    }
    
    /// <summary>
    /// The active directory item holds information about specific entries in the Windows Active Directory. It extends the standard ItemType as defined in the oval-system-characteristics schema and one should refer to the ItemType description for more information.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#windows")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#windows", IsNullable=false)]
    public partial class activedirectory_item : ItemType {
        
        private EntityItemNamingContextType naming_contextField;
        
        private EntityItemStringType relative_dnField;
        
        private EntityItemStringType attributeField;
        
        private EntityItemStringType object_classField;
        
        private EntityItemAdstypeType adstypeField;
        
        private EntityItemAnySimpleType[] valueField;
        
        /// <summary>
        /// Each object in active directory exists under a certain naming context (also known as a partition). A naming context is defined as a single object in the Directory Information Tree (DIT) along with every object in the tree subordinate to it. There are three default naming contexts in Active Directory: domain, configuration, and schema.
        /// </summary>
        public EntityItemNamingContextType naming_context {
            get {
                return this.naming_contextField;
            }
            set {
                this.naming_contextField = value;
            }
        }
        
        /// <summary>
        /// The relative_dn field is used to uniquely identify an object inside the specified naming context. It contains all the parts of the objects distinguished name except those outlined by the naming context. If the xsi:nil attribute is set to true, then the item being represented is the higher level naming context.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public EntityItemStringType relative_dn {
            get {
                return this.relative_dnField;
            }
            set {
                this.relative_dnField = value;
            }
        }
        
        /// <summary>
        /// Specifies a named value contained by the object.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public EntityItemStringType attribute {
            get {
                return this.attributeField;
            }
            set {
                this.attributeField = value;
            }
        }
        
        /// <summary>
        /// The name of the class of which the object is an instance.
        /// </summary>
        public EntityItemStringType object_class {
            get {
                return this.object_classField;
            }
            set {
                this.object_classField = value;
            }
        }
        
        /// <summary>
        /// Specifies the type of information that the specified attribute represents.
        /// </summary>
        public EntityItemAdstypeType adstype {
            get {
                return this.adstypeField;
            }
            set {
                this.adstypeField = value;
            }
        }
        
        /// <summary>
        /// The actual value of the specified active directory attribute.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("value")]
        public EntityItemAnySimpleType[] value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <summary>
    /// The activedirectory57_item holds information about specific entries in the Windows Active Directory. It extends the standard ItemType as defined in the oval-system-characteristics schema and one should refer to the ItemType description for more information.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#windows")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#windows", IsNullable=false)]
    public partial class activedirectory57_item : ItemType {
        
        private EntityItemNamingContextType naming_contextField;
        
        private EntityItemStringType relative_dnField;
        
        private EntityItemStringType attributeField;
        
        private EntityItemStringType object_classField;
        
        private EntityItemAdstypeType adstypeField;
        
        private EntityItemRecordType[] valueField;
        
        /// <summary>
        /// Each object in active directory exists under a certain naming context (also known as a partition). A naming context is defined as a single object in the Directory Information Tree (DIT) along with every object in the tree subordinate to it. There are three default naming contexts in Active Directory: domain, configuration, and schema.
        /// </summary>
        public EntityItemNamingContextType naming_context {
            get {
                return this.naming_contextField;
            }
            set {
                this.naming_contextField = value;
            }
        }
        
        /// <summary>
        /// The relative_dn field is used to uniquely identify an object inside the specified naming context. It contains all the parts of the objects distinguished name except those outlined by the naming context. If the xsi:nil attribute is set to true, then the item being represented is the higher level naming context.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public EntityItemStringType relative_dn {
            get {
                return this.relative_dnField;
            }
            set {
                this.relative_dnField = value;
            }
        }
        
        /// <summary>
        /// Specifies a named value contained by the object.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public EntityItemStringType attribute {
            get {
                return this.attributeField;
            }
            set {
                this.attributeField = value;
            }
        }
        
        /// <summary>
        /// The name of the class of which the object is an instance.
        /// </summary>
        public EntityItemStringType object_class {
            get {
                return this.object_classField;
            }
            set {
                this.object_classField = value;
            }
        }
        
        /// <summary>
        /// Specifies the type of information that the specified attribute represents.
        /// </summary>
        public EntityItemAdstypeType adstype {
            get {
                return this.adstypeField;
            }
            set {
                this.adstypeField = value;
            }
        }
        
        /// <summary>
        /// The actual value of the specified Active Directory attribute. Note that while an Active Directory attribute can contain structured data where it is necessary to collect multiple related fields that can be described by the 'record' datatype, it is not always the case.  It also is possible that an Active Directory attribute can contain only a single value or an array of values. In these cases, there is not a name to uniquely identify the corresponding field(s) which is a requirement for fields in the 'record' datatype.  As a result, the name of the Active Directory attribute will be used to uniquely identify the field(s) and satisfy this requirement. If the Active Directory attribute contains a single value, the 'record' will have a single field identified by the name of the Active Directory attribute. If the Active Directory attribute contains an array of values, the 'record' will have multiple fields all identified by the name of the Active Directory attribute
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("value")]
        public EntityItemRecordType[] value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <summary>
    /// Note that when audinting is disabled each of the entities listed below should be set to 'AUDIT_NONE'.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#windows")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#windows", IsNullable=false)]
    public partial class auditeventpolicy_item : ItemType {
        
        private EntityItemAuditType account_logonField;
        
        private EntityItemAuditType account_managementField;
        
        private EntityItemAuditType detailed_trackingField;
        
        private EntityItemAuditType directory_service_accessField;
        
        private EntityItemAuditType logonField;
        
        private EntityItemAuditType object_accessField;
        
        private EntityItemAuditType policy_changeField;
        
        private EntityItemAuditType privilege_useField;
        
        private EntityItemAuditType systemField;
        
        /// <summary>
        /// Audit attempts to log on to or log off of the system. Also, audit attempts to make a network connection.
        /// </summary>
        public EntityItemAuditType account_logon {
            get {
                return this.account_logonField;
            }
            set {
                this.account_logonField = value;
            }
        }
        
        /// <summary>
        /// Audit attempts to create, delete, or change user or group accounts. Also, audit password changes.
        /// </summary>
        public EntityItemAuditType account_management {
            get {
                return this.account_managementField;
            }
            set {
                this.account_managementField = value;
            }
        }
        
        /// <summary>
        /// Audit specific events, such as program activation, some forms of handle duplication, indirect access to an object, and process exit.
        /// </summary>
        public EntityItemAuditType detailed_tracking {
            get {
                return this.detailed_trackingField;
            }
            set {
                this.detailed_trackingField = value;
            }
        }
        
        /// <summary>
        /// Audit attempts to access the directory service.
        /// </summary>
        public EntityItemAuditType directory_service_access {
            get {
                return this.directory_service_accessField;
            }
            set {
                this.directory_service_accessField = value;
            }
        }
        
        /// <summary>
        /// Audit attempts to log on to or log off of the system. Also, audit attempts to make a network connection.
        /// </summary>
        public EntityItemAuditType logon {
            get {
                return this.logonField;
            }
            set {
                this.logonField = value;
            }
        }
        
        /// <summary>
        /// Audit attempts to access securable objects, such as files.
        /// </summary>
        public EntityItemAuditType object_access {
            get {
                return this.object_accessField;
            }
            set {
                this.object_accessField = value;
            }
        }
        
        /// <summary>
        /// Audit attempts to change Policy object rules.
        /// </summary>
        public EntityItemAuditType policy_change {
            get {
                return this.policy_changeField;
            }
            set {
                this.policy_changeField = value;
            }
        }
        
        /// <summary>
        /// Audit attempts to use privileges.
        /// </summary>
        public EntityItemAuditType privilege_use {
            get {
                return this.privilege_useField;
            }
            set {
                this.privilege_useField = value;
            }
        }
        
        /// <summary>
        /// Audit attempts to shut down or restart the computer. Also, audit events that affect system security or the security log.
        /// </summary>
        public EntityItemAuditType system {
            get {
                return this.systemField;
            }
            set {
                this.systemField = value;
            }
        }
    }
    
    /// <summary>
    /// Note that when audinting is disabled each of the entities listed below should be set to 'AUDIT_NONE'.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#windows")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#windows", IsNullable=false)]
    public partial class auditeventpolicysubcategories_item : ItemType {
        
        private EntityItemAuditType credential_validationField;
        
        private EntityItemAuditType kerberos_authentication_serviceField;
        
        private EntityItemAuditType kerberos_service_ticket_operationsField;
        
        private EntityItemAuditType kerberos_ticket_eventsField;
        
        private EntityItemAuditType other_account_logon_eventsField;
        
        private EntityItemAuditType application_group_managementField;
        
        private EntityItemAuditType computer_account_managementField;
        
        private EntityItemAuditType distribution_group_managementField;
        
        private EntityItemAuditType other_account_management_eventsField;
        
        private EntityItemAuditType security_group_managementField;
        
        private EntityItemAuditType user_account_managementField;
        
        private EntityItemAuditType dpapi_activityField;
        
        private EntityItemAuditType process_creationField;
        
        private EntityItemAuditType process_terminationField;
        
        private EntityItemAuditType rpc_eventsField;
        
        private EntityItemAuditType directory_service_accessField;
        
        private EntityItemAuditType directory_service_changesField;
        
        private EntityItemAuditType directory_service_replicationField;
        
        private EntityItemAuditType detailed_directory_service_replicationField;
        
        private EntityItemAuditType account_lockoutField;
        
        private EntityItemAuditType ipsec_extended_modeField;
        
        private EntityItemAuditType ipsec_main_modeField;
        
        private EntityItemAuditType ipsec_quick_modeField;
        
        private EntityItemAuditType logoffField;
        
        private EntityItemAuditType logonField;
        
        private EntityItemAuditType network_policy_serverField;
        
        private EntityItemAuditType other_logon_logoff_eventsField;
        
        private EntityItemAuditType special_logonField;
        
        private EntityItemAuditType application_generatedField;
        
        private EntityItemAuditType certification_servicesField;
        
        private EntityItemAuditType detailed_file_shareField;
        
        private EntityItemAuditType file_shareField;
        
        private EntityItemAuditType file_systemField;
        
        private EntityItemAuditType filtering_platform_connectionField;
        
        private EntityItemAuditType filtering_platform_packet_dropField;
        
        private EntityItemAuditType handle_manipulationField;
        
        private EntityItemAuditType kernel_objectField;
        
        private EntityItemAuditType other_object_access_eventsField;
        
        private EntityItemAuditType registryField;
        
        private EntityItemAuditType samField;
        
        private EntityItemAuditType audit_policy_changeField;
        
        private EntityItemAuditType authentication_policy_changeField;
        
        private EntityItemAuditType authorization_policy_changeField;
        
        private EntityItemAuditType filtering_platform_policy_changeField;
        
        private EntityItemAuditType mpssvc_rule_level_policy_changeField;
        
        private EntityItemAuditType other_policy_change_eventsField;
        
        private EntityItemAuditType non_sensitive_privilege_useField;
        
        private EntityItemAuditType other_privilege_use_eventsField;
        
        private EntityItemAuditType sensitive_privilege_useField;
        
        private EntityItemAuditType ipsec_driverField;
        
        private EntityItemAuditType other_system_eventsField;
        
        private EntityItemAuditType security_state_changeField;
        
        private EntityItemAuditType security_system_extensionField;
        
        private EntityItemAuditType system_integrityField;
        
        /// <summary>
        /// Audit the events produced during the validation of a user's logon credentials.
        /// </summary>
        public EntityItemAuditType credential_validation {
            get {
                return this.credential_validationField;
            }
            set {
                this.credential_validationField = value;
            }
        }
        
        /// <summary>
        /// Audit the events produced by Kerberos authentication ticket-granting requests.
        /// </summary>
        public EntityItemAuditType kerberos_authentication_service {
            get {
                return this.kerberos_authentication_serviceField;
            }
            set {
                this.kerberos_authentication_serviceField = value;
            }
        }
        
        /// <summary>
        /// Audit the events produced by Kerberos service ticket requests.
        /// </summary>
        public EntityItemAuditType kerberos_service_ticket_operations {
            get {
                return this.kerberos_service_ticket_operationsField;
            }
            set {
                this.kerberos_service_ticket_operationsField = value;
            }
        }
        
        /// <summary>
        /// Audit the events produced during the validation of Kerberos tickets provided for a user account logon request.
        /// </summary>
        public EntityItemAuditType kerberos_ticket_events {
            get {
                return this.kerberos_ticket_eventsField;
            }
            set {
                this.kerberos_ticket_eventsField = value;
            }
        }
        
        /// <summary>
        /// Audit the events produced by changes to user accounts that are not covered by other events in the Account Logon category.
        /// </summary>
        public EntityItemAuditType other_account_logon_events {
            get {
                return this.other_account_logon_eventsField;
            }
            set {
                this.other_account_logon_eventsField = value;
            }
        }
        
        /// <summary>
        /// Audit the events produced by changes to application groups.
        /// </summary>
        public EntityItemAuditType application_group_management {
            get {
                return this.application_group_managementField;
            }
            set {
                this.application_group_managementField = value;
            }
        }
        
        /// <summary>
        /// Audit the events produced by changes to computer accounts.
        /// </summary>
        public EntityItemAuditType computer_account_management {
            get {
                return this.computer_account_managementField;
            }
            set {
                this.computer_account_managementField = value;
            }
        }
        
        /// <summary>
        /// Audit the events produced by changes to distribution groups.
        /// </summary>
        public EntityItemAuditType distribution_group_management {
            get {
                return this.distribution_group_managementField;
            }
            set {
                this.distribution_group_managementField = value;
            }
        }
        
        /// <summary>
        /// Audit the events produced by other user account changes that are not covered by other events in the Account Management category.
        /// </summary>
        public EntityItemAuditType other_account_management_events {
            get {
                return this.other_account_management_eventsField;
            }
            set {
                this.other_account_management_eventsField = value;
            }
        }
        
        /// <summary>
        /// Audit the events produced by changes to security groups.
        /// </summary>
        public EntityItemAuditType security_group_management {
            get {
                return this.security_group_managementField;
            }
            set {
                this.security_group_managementField = value;
            }
        }
        
        /// <summary>
        /// Audit the events produced by changes to user accounts.
        /// </summary>
        public EntityItemAuditType user_account_management {
            get {
                return this.user_account_managementField;
            }
            set {
                this.user_account_managementField = value;
            }
        }
        
        /// <summary>
        /// Audit the events produced when requests are made to the Data Protection application interface.
        /// </summary>
        public EntityItemAuditType dpapi_activity {
            get {
                return this.dpapi_activityField;
            }
            set {
                this.dpapi_activityField = value;
            }
        }
        
        /// <summary>
        /// Audit the events produced when a process is created or starts.
        /// </summary>
        public EntityItemAuditType process_creation {
            get {
                return this.process_creationField;
            }
            set {
                this.process_creationField = value;
            }
        }
        
        /// <summary>
        /// Audit the events produced when a process ends.
        /// </summary>
        public EntityItemAuditType process_termination {
            get {
                return this.process_terminationField;
            }
            set {
                this.process_terminationField = value;
            }
        }
        
        /// <summary>
        /// Audit the events produced by inbound remote procedure call connections.
        /// </summary>
        public EntityItemAuditType rpc_events {
            get {
                return this.rpc_eventsField;
            }
            set {
                this.rpc_eventsField = value;
            }
        }
        
        /// <summary>
        /// Audit the events produced when a Active Directory Domain Services object is accessed.
        /// </summary>
        public EntityItemAuditType directory_service_access {
            get {
                return this.directory_service_accessField;
            }
            set {
                this.directory_service_accessField = value;
            }
        }
        
        /// <summary>
        /// Audit the events produced when changes are made to Active Directory Domain Services objects.
        /// </summary>
        public EntityItemAuditType directory_service_changes {
            get {
                return this.directory_service_changesField;
            }
            set {
                this.directory_service_changesField = value;
            }
        }
        
        /// <summary>
        /// Audit the events produced when two Active Directory Domain Services domain controllers are replicated.
        /// </summary>
        public EntityItemAuditType directory_service_replication {
            get {
                return this.directory_service_replicationField;
            }
            set {
                this.directory_service_replicationField = value;
            }
        }
        
        /// <summary>
        /// Audit the events produced by detailed Active Directory Domain Services replication between domain controllers.
        /// </summary>
        public EntityItemAuditType detailed_directory_service_replication {
            get {
                return this.detailed_directory_service_replicationField;
            }
            set {
                this.detailed_directory_service_replicationField = value;
            }
        }
        
        /// <summary>
        /// Audit the events produced by a failed attempt to log onto a locked out account.
        /// </summary>
        public EntityItemAuditType account_lockout {
            get {
                return this.account_lockoutField;
            }
            set {
                this.account_lockoutField = value;
            }
        }
        
        /// <summary>
        /// Audit the events produced by Internet Key Exchange and Authenticated Internet protocol during Extended Mode negotiations.
        /// </summary>
        public EntityItemAuditType ipsec_extended_mode {
            get {
                return this.ipsec_extended_modeField;
            }
            set {
                this.ipsec_extended_modeField = value;
            }
        }
        
        /// <summary>
        /// Audit the events produced by Internet Key Exchange and Authenticated Internet protocol during Main Mode negotiations.
        /// </summary>
        public EntityItemAuditType ipsec_main_mode {
            get {
                return this.ipsec_main_modeField;
            }
            set {
                this.ipsec_main_modeField = value;
            }
        }
        
        /// <summary>
        /// Audit the events produced by Internet Key Exchange and Authenticated Internet protocol during Quick Mode negotiations.
        /// </summary>
        public EntityItemAuditType ipsec_quick_mode {
            get {
                return this.ipsec_quick_modeField;
            }
            set {
                this.ipsec_quick_modeField = value;
            }
        }
        
        /// <summary>
        /// Audit the events produced by closing a logon session.
        /// </summary>
        public EntityItemAuditType logoff {
            get {
                return this.logoffField;
            }
            set {
                this.logoffField = value;
            }
        }
        
        /// <summary>
        /// Audit the events produced by attempts to log onto a user account.
        /// </summary>
        public EntityItemAuditType logon {
            get {
                return this.logonField;
            }
            set {
                this.logonField = value;
            }
        }
        
        /// <summary>
        /// Audit the events produced by RADIUS and Network Access Protection user access requests.
        /// </summary>
        public EntityItemAuditType network_policy_server {
            get {
                return this.network_policy_serverField;
            }
            set {
                this.network_policy_serverField = value;
            }
        }
        
        /// <summary>
        /// Audit the events produced by other logon/logoff based events that are not covered in the Logon/Logoff category.
        /// </summary>
        public EntityItemAuditType other_logon_logoff_events {
            get {
                return this.other_logon_logoff_eventsField;
            }
            set {
                this.other_logon_logoff_eventsField = value;
            }
        }
        
        /// <summary>
        /// Audit the events produced by special logons.
        /// </summary>
        public EntityItemAuditType special_logon {
            get {
                return this.special_logonField;
            }
            set {
                this.special_logonField = value;
            }
        }
        
        /// <summary>
        /// Audit the events produced by applications that use the Windows Auditing API.
        /// </summary>
        public EntityItemAuditType application_generated {
            get {
                return this.application_generatedField;
            }
            set {
                this.application_generatedField = value;
            }
        }
        
        /// <summary>
        /// Audit the events produced by operations on Active Directory Certificate Services.
        /// </summary>
        public EntityItemAuditType certification_services {
            get {
                return this.certification_servicesField;
            }
            set {
                this.certification_servicesField = value;
            }
        }
        
        /// <summary>
        /// Audit the events produced by attempts to access files and folders on a shared folder.
        /// </summary>
        public EntityItemAuditType detailed_file_share {
            get {
                return this.detailed_file_shareField;
            }
            set {
                this.detailed_file_shareField = value;
            }
        }
        
        /// <summary>
        /// Audit the events produced by attempts to access a shared folder.
        /// </summary>
        public EntityItemAuditType file_share {
            get {
                return this.file_shareField;
            }
            set {
                this.file_shareField = value;
            }
        }
        
        /// <summary>
        /// Audit the events produced user attempts to access file system objects.
        /// </summary>
        public EntityItemAuditType file_system {
            get {
                return this.file_systemField;
            }
            set {
                this.file_systemField = value;
            }
        }
        
        /// <summary>
        /// Audit the events produced by connections that are allowed or blocked by Windows Filtering Platform.
        /// </summary>
        public EntityItemAuditType filtering_platform_connection {
            get {
                return this.filtering_platform_connectionField;
            }
            set {
                this.filtering_platform_connectionField = value;
            }
        }
        
        /// <summary>
        /// Audit the events produced by packets that are dropped by Windows Filtering Platform.
        /// </summary>
        public EntityItemAuditType filtering_platform_packet_drop {
            get {
                return this.filtering_platform_packet_dropField;
            }
            set {
                this.filtering_platform_packet_dropField = value;
            }
        }
        
        /// <summary>
        /// Audit the events produced when a handle is opened or closed.
        /// </summary>
        public EntityItemAuditType handle_manipulation {
            get {
                return this.handle_manipulationField;
            }
            set {
                this.handle_manipulationField = value;
            }
        }
        
        /// <summary>
        /// Audit the events produced by attempts to access the system kernel.
        /// </summary>
        public EntityItemAuditType kernel_object {
            get {
                return this.kernel_objectField;
            }
            set {
                this.kernel_objectField = value;
            }
        }
        
        /// <summary>
        /// Audit the events produced by the management of Task Scheduler jobs or COM+ objects.
        /// </summary>
        public EntityItemAuditType other_object_access_events {
            get {
                return this.other_object_access_eventsField;
            }
            set {
                this.other_object_access_eventsField = value;
            }
        }
        
        /// <summary>
        /// Audit the events produced by attempts to access registry objects.
        /// </summary>
        public EntityItemAuditType registry {
            get {
                return this.registryField;
            }
            set {
                this.registryField = value;
            }
        }
        
        /// <summary>
        /// Audit the events produced by attempts to access Security Accounts Manager objects.
        /// </summary>
        public EntityItemAuditType sam {
            get {
                return this.samField;
            }
            set {
                this.samField = value;
            }
        }
        
        /// <summary>
        /// Audit the events produced by changes in security audit policy settings.
        /// </summary>
        public EntityItemAuditType audit_policy_change {
            get {
                return this.audit_policy_changeField;
            }
            set {
                this.audit_policy_changeField = value;
            }
        }
        
        /// <summary>
        /// Audit the events produced by changes to the authentication policy.
        /// </summary>
        public EntityItemAuditType authentication_policy_change {
            get {
                return this.authentication_policy_changeField;
            }
            set {
                this.authentication_policy_changeField = value;
            }
        }
        
        /// <summary>
        /// Audit the events produced by changes to the authorization policy.
        /// </summary>
        public EntityItemAuditType authorization_policy_change {
            get {
                return this.authorization_policy_changeField;
            }
            set {
                this.authorization_policy_changeField = value;
            }
        }
        
        /// <summary>
        /// Audit the events produced by changes to the Windows Filtering Platform.
        /// </summary>
        public EntityItemAuditType filtering_platform_policy_change {
            get {
                return this.filtering_platform_policy_changeField;
            }
            set {
                this.filtering_platform_policy_changeField = value;
            }
        }
        
        /// <summary>
        /// Audit the events produced by changes to policy rules used by the Windows Firewall.
        /// </summary>
        public EntityItemAuditType mpssvc_rule_level_policy_change {
            get {
                return this.mpssvc_rule_level_policy_changeField;
            }
            set {
                this.mpssvc_rule_level_policy_changeField = value;
            }
        }
        
        /// <summary>
        /// Audit the events produced by other security policy changes that are not covered other events in the Policy Change category.
        /// </summary>
        public EntityItemAuditType other_policy_change_events {
            get {
                return this.other_policy_change_eventsField;
            }
            set {
                this.other_policy_change_eventsField = value;
            }
        }
        
        /// <summary>
        /// Audit the events produced by the use of non-sensitive privileges.
        /// </summary>
        public EntityItemAuditType non_sensitive_privilege_use {
            get {
                return this.non_sensitive_privilege_useField;
            }
            set {
                this.non_sensitive_privilege_useField = value;
            }
        }
        
        /// <summary>
        /// This is currently not used and has been reserved by Microsoft for use in the future.
        /// </summary>
        public EntityItemAuditType other_privilege_use_events {
            get {
                return this.other_privilege_use_eventsField;
            }
            set {
                this.other_privilege_use_eventsField = value;
            }
        }
        
        /// <summary>
        /// Audit the events produced by the use of sensitive privileges.
        /// </summary>
        public EntityItemAuditType sensitive_privilege_use {
            get {
                return this.sensitive_privilege_useField;
            }
            set {
                this.sensitive_privilege_useField = value;
            }
        }
        
        /// <summary>
        /// Audit the events produced by the IPsec filter driver.
        /// </summary>
        public EntityItemAuditType ipsec_driver {
            get {
                return this.ipsec_driverField;
            }
            set {
                this.ipsec_driverField = value;
            }
        }
        
        /// <summary>
        /// Audit the events produced by the startup and shutdown, security policy processing, and cryptography key file and migration operations of the Windows Firewall.
        /// </summary>
        public EntityItemAuditType other_system_events {
            get {
                return this.other_system_eventsField;
            }
            set {
                this.other_system_eventsField = value;
            }
        }
        
        /// <summary>
        /// Audit the events produced by changes in the security state.
        /// </summary>
        public EntityItemAuditType security_state_change {
            get {
                return this.security_state_changeField;
            }
            set {
                this.security_state_changeField = value;
            }
        }
        
        /// <summary>
        /// Audit the events produced by the security system extensions or services.
        /// </summary>
        public EntityItemAuditType security_system_extension {
            get {
                return this.security_system_extensionField;
            }
            set {
                this.security_system_extensionField = value;
            }
        }
        
        /// <summary>
        /// Audit the events that indicate that the integrity security subsystem has been violated.
        /// </summary>
        public EntityItemAuditType system_integrity {
            get {
                return this.system_integrityField;
            }
            set {
                this.system_integrityField = value;
            }
        }
    }
    
    /// <summary>
    /// The dnscache_item stores information retrieved from the DNS cache about a domain name, its time to live, and its corresponding IP addresses.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#windows")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#windows", IsNullable=false)]
    public partial class dnscache_item : ItemType {
        
        private EntityItemStringType domain_nameField;
        
        private EntityItemIntType ttlField;
        
        private EntityItemIPAddressStringType[] ip_addressField;
        
        /// <summary>
        /// The domain_name element contains a string that represents a domain name that was collected from the DNS cache on the local system.
        /// </summary>
        public EntityItemStringType domain_name {
            get {
                return this.domain_nameField;
            }
            set {
                this.domain_nameField = value;
            }
        }
        
        /// <summary>
        /// The ttl element contains an integer that represents the time to live in seconds of the DNS cache entry.
        /// </summary>
        public EntityItemIntType ttl {
            get {
                return this.ttlField;
            }
            set {
                this.ttlField = value;
            }
        }
        
        /// <summary>
        /// The ip_address element contains a string that represents an IP address associated with the specified domain name. Note that the IP address can be IPv4 or IPv6.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("ip_address")]
        public EntityItemIPAddressStringType[] ip_address {
            get {
                return this.ip_addressField;
            }
            set {
                this.ip_addressField = value;
            }
        }
    }
    
    /// <summary>
    /// This element describes file metadata. The time information can be retrieved by the _stst function. Development_class and other version information (company, internal name, language, original_filename, product_name, product_version) can be retrieved using the VerQueryValue function.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#windows")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#windows", IsNullable=false)]
    public partial class file_item : ItemType {
        
        private EntityItemStringType filepathField;
        
        private EntityItemStringType pathField;
        
        private EntityItemStringType filenameField;
        
        private EntityItemStringType ownerField;
        
        private EntityItemIntType sizeField;
        
        private EntityItemIntType a_timeField;
        
        private EntityItemIntType c_timeField;
        
        private EntityItemIntType m_timeField;
        
        private EntityItemStringType ms_checksumField;
        
        private EntityItemVersionType versionField;
        
        private EntityItemFileTypeType typeField;
        
        private EntityItemStringType development_classField;
        
        private EntityItemStringType companyField;
        
        private EntityItemStringType internal_nameField;
        
        private EntityItemStringType languageField;
        
        private EntityItemStringType original_filenameField;
        
        private EntityItemStringType product_nameField;
        
        private EntityItemVersionType product_versionField;
        
        /// <summary>
        /// The filepath element specifies the absolute path for a file on the machine. A directory cannot be specified as a filepath.
        /// </summary>
        public EntityItemStringType filepath {
            get {
                return this.filepathField;
            }
            set {
                this.filepathField = value;
            }
        }
        
        /// <summary>
        /// Specifies the directory component of the absolute path to a file on the machine.
        /// </summary>
        public EntityItemStringType path {
            get {
                return this.pathField;
            }
            set {
                this.pathField = value;
            }
        }
        
        /// <summary>
        /// The name of the file. If the xsi:nil attribute is set to true, then the item being represented is the higher directory represented by the path entity. The other items associated with this item would then reflect the values associated with the directory.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public EntityItemStringType filename {
            get {
                return this.filenameField;
            }
            set {
                this.filenameField = value;
            }
        }
        
        /// <summary>
        /// A string that contains the name of the owner. The name should be specified in the DOMAIN\username format.
        /// </summary>
        public EntityItemStringType owner {
            get {
                return this.ownerField;
            }
            set {
                this.ownerField = value;
            }
        }
        
        /// <summary>
        /// Size of the file in bytes.
        /// </summary>
        public EntityItemIntType size {
            get {
                return this.sizeField;
            }
            set {
                this.sizeField = value;
            }
        }
        
        /// <summary>
        /// Time of last access of file. Valid on NTFS but not on FAT formatted disk drives. The string should represent the FILETIME structure which is a 64-bit value representing the number of 100-nanosecond intervals since January 1, 1601 (UTC).
        /// </summary>
        public EntityItemIntType a_time {
            get {
                return this.a_timeField;
            }
            set {
                this.a_timeField = value;
            }
        }
        
        /// <summary>
        /// Time of creation of file. Valid on NTFS but not on FAT formatted disk drives. The string should represent the FILETIME structure which is a 64-bit value representing the number of 100-nanosecond intervals since January 1, 1601 (UTC).
        /// </summary>
        public EntityItemIntType c_time {
            get {
                return this.c_timeField;
            }
            set {
                this.c_timeField = value;
            }
        }
        
        /// <summary>
        /// Time of last modification of file. The string should represent the FILETIME structure which is a 64-bit value representing the number of 100-nanosecond intervals since January 1, 1601 (UTC).
        /// </summary>
        public EntityItemIntType m_time {
            get {
                return this.m_timeField;
            }
            set {
                this.m_timeField = value;
            }
        }
        
        /// <summary>
        /// The checksum of the file as supplied by Microsoft's MapFileAndCheckSum function.
        /// </summary>
        public EntityItemStringType ms_checksum {
            get {
                return this.ms_checksumField;
            }
            set {
                this.ms_checksumField = value;
            }
        }
        
        /// <summary>
        /// The version of the file.
        /// </summary>
        public EntityItemVersionType version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
        
        /// <summary>
        /// The type child element marks wether the file item describes a directory, named pipe, standard file, etc. These types are the return values for GetFileType, with the exception of FILE_ATTRIBUTE_DIRECTORY which is obtained by looking at GetFileAttributesEx.
        /// </summary>
        public EntityItemFileTypeType type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <summary>
        /// The development_class element allows the distinction to be made between the GDR development environment and the QFE development environment. This field holds the text found in front of the mmmmmm-nnnn version, for example srv03_gdr.
        /// </summary>
        public EntityItemStringType development_class {
            get {
                return this.development_classField;
            }
            set {
                this.development_classField = value;
            }
        }
        
        /// <summary>
        /// This entity defines the company name held within the version-information structure.
        /// </summary>
        public EntityItemStringType company {
            get {
                return this.companyField;
            }
            set {
                this.companyField = value;
            }
        }
        
        /// <summary>
        /// This entity defines the internal name held within the version-information structure.
        /// </summary>
        public EntityItemStringType internal_name {
            get {
                return this.internal_nameField;
            }
            set {
                this.internal_nameField = value;
            }
        }
        
        /// <summary>
        /// This entity defines the language held within the version-information structure.
        /// </summary>
        public EntityItemStringType language {
            get {
                return this.languageField;
            }
            set {
                this.languageField = value;
            }
        }
        
        /// <summary>
        /// This entity defines the original filename held within the version-information structure.
        /// </summary>
        public EntityItemStringType original_filename {
            get {
                return this.original_filenameField;
            }
            set {
                this.original_filenameField = value;
            }
        }
        
        /// <summary>
        /// This entity defines the product name held within the version-information structure.
        /// </summary>
        public EntityItemStringType product_name {
            get {
                return this.product_nameField;
            }
            set {
                this.product_nameField = value;
            }
        }
        
        /// <summary>
        /// This entity defines the product version held within the version-information structure.
        /// </summary>
        public EntityItemVersionType product_version {
            get {
                return this.product_versionField;
            }
            set {
                this.product_versionField = value;
            }
        }
    }
    
    /// <summary>
    /// This item stores the audited access rights of a file that a system access control list (SACL) structure grants to a specified trustee. The trustee's audited access rights are determined checking all access control entries (ACEs) in the SACL. For help with this test see the GetAuditedPermissionsFromAcl() api.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#windows")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#windows", IsNullable=false)]
    public partial class fileauditedpermissions_item : ItemType {
        
        private EntityItemStringType filepathField;
        
        private EntityItemStringType pathField;
        
        private EntityItemStringType filenameField;
        
        private EntityItemStringType trustee_sidField;
        
        private EntityItemStringType trustee_nameField;
        
        private EntityItemAuditType standard_deleteField;
        
        private EntityItemAuditType standard_read_controlField;
        
        private EntityItemAuditType standard_write_dacField;
        
        private EntityItemAuditType standard_write_ownerField;
        
        private EntityItemAuditType standard_synchronizeField;
        
        private EntityItemAuditType access_system_securityField;
        
        private EntityItemAuditType generic_readField;
        
        private EntityItemAuditType generic_writeField;
        
        private EntityItemAuditType generic_executeField;
        
        private EntityItemAuditType generic_allField;
        
        private EntityItemAuditType file_read_dataField;
        
        private EntityItemAuditType file_write_dataField;
        
        private EntityItemAuditType file_append_dataField;
        
        private EntityItemAuditType file_read_eaField;
        
        private EntityItemAuditType file_write_eaField;
        
        private EntityItemAuditType file_executeField;
        
        private EntityItemAuditType file_delete_childField;
        
        private EntityItemAuditType file_read_attributesField;
        
        private EntityItemAuditType file_write_attributesField;
        
        /// <summary>
        /// Specifies the absolute path to a file on the machine from which the DACL was retrieved. A directory cannot be specified as a filepath.
        /// </summary>
        public EntityItemStringType filepath {
            get {
                return this.filepathField;
            }
            set {
                this.filepathField = value;
            }
        }
        
        /// <summary>
        /// This element specifies the directory component of the absolute path to a file on the machine from which the DACL was retrieved.
        /// </summary>
        public EntityItemStringType path {
            get {
                return this.pathField;
            }
            set {
                this.pathField = value;
            }
        }
        
        /// <summary>
        /// The name of the file. If the xsi:nil attribute is set to true, then the item being represented is the higher directory represented by the path entity. The other items associated with this item would then reflect the values associated with the directory.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public EntityItemStringType filename {
            get {
                return this.filenameField;
            }
            set {
                this.filenameField = value;
            }
        }
        
        /// <summary>
        /// The trustee_sid entity specifies the SID that associated a user, group, system, or program (such as a Windows service).
        /// </summary>
        public EntityItemStringType trustee_sid {
            get {
                return this.trustee_sidField;
            }
            set {
                this.trustee_sidField = value;
            }
        }
        
        /// <summary>
        /// This element specifies the trustee name associated with this particular SACL.  A trustee can be a user, group, or program (such as a Windows service). In Windows, trustee names are case-insensitive. As a result, it is recommended that the case-insensitive operations are used for this entity. In a domain environment, trustee names should be identified in the form:  "domain\trustee name". For local trustee names use: "computer name\trustee name". For built-in accounts on the system, use the trustee name without a domain.
        /// </summary>
        public EntityItemStringType trustee_name {
            get {
                return this.trustee_nameField;
            }
            set {
                this.trustee_nameField = value;
            }
        }
        
        /// <summary>
        /// The right to delete the object.
        /// </summary>
        public EntityItemAuditType standard_delete {
            get {
                return this.standard_deleteField;
            }
            set {
                this.standard_deleteField = value;
            }
        }
        
        /// <summary>
        /// The right to read the information in the object's security descriptor, not including the information in the SACL.
        /// </summary>
        public EntityItemAuditType standard_read_control {
            get {
                return this.standard_read_controlField;
            }
            set {
                this.standard_read_controlField = value;
            }
        }
        
        /// <summary>
        /// The right to modify the DACL in the object's security descriptor.
        /// </summary>
        public EntityItemAuditType standard_write_dac {
            get {
                return this.standard_write_dacField;
            }
            set {
                this.standard_write_dacField = value;
            }
        }
        
        /// <summary>
        /// The right to change the owner in the object's security descriptor.
        /// </summary>
        public EntityItemAuditType standard_write_owner {
            get {
                return this.standard_write_ownerField;
            }
            set {
                this.standard_write_ownerField = value;
            }
        }
        
        /// <summary>
        /// The right to use the object for synchronization. This enables a thread to wait until the object is in the signaled state. Some object types do not support this access right.
        /// </summary>
        public EntityItemAuditType standard_synchronize {
            get {
                return this.standard_synchronizeField;
            }
            set {
                this.standard_synchronizeField = value;
            }
        }
        
        /// <summary>
        /// Indicates access to a system access control list (SACL).
        /// </summary>
        public EntityItemAuditType access_system_security {
            get {
                return this.access_system_securityField;
            }
            set {
                this.access_system_securityField = value;
            }
        }
        
        /// <summary>
        /// Read access.
        /// </summary>
        public EntityItemAuditType generic_read {
            get {
                return this.generic_readField;
            }
            set {
                this.generic_readField = value;
            }
        }
        
        /// <summary>
        /// Write access.
        /// </summary>
        public EntityItemAuditType generic_write {
            get {
                return this.generic_writeField;
            }
            set {
                this.generic_writeField = value;
            }
        }
        
        /// <summary>
        /// Execute access.
        /// </summary>
        public EntityItemAuditType generic_execute {
            get {
                return this.generic_executeField;
            }
            set {
                this.generic_executeField = value;
            }
        }
        
        /// <summary>
        /// Read, write, and execute access.
        /// </summary>
        public EntityItemAuditType generic_all {
            get {
                return this.generic_allField;
            }
            set {
                this.generic_allField = value;
            }
        }
        
        /// <summary>
        /// Grants the right to read data from the file.
        /// </summary>
        public EntityItemAuditType file_read_data {
            get {
                return this.file_read_dataField;
            }
            set {
                this.file_read_dataField = value;
            }
        }
        
        /// <summary>
        /// Grants the right to write data to the file.
        /// </summary>
        public EntityItemAuditType file_write_data {
            get {
                return this.file_write_dataField;
            }
            set {
                this.file_write_dataField = value;
            }
        }
        
        /// <summary>
        /// Grants the right to append data to the file.
        /// </summary>
        public EntityItemAuditType file_append_data {
            get {
                return this.file_append_dataField;
            }
            set {
                this.file_append_dataField = value;
            }
        }
        
        /// <summary>
        /// Grants the right to read extended attributes.
        /// </summary>
        public EntityItemAuditType file_read_ea {
            get {
                return this.file_read_eaField;
            }
            set {
                this.file_read_eaField = value;
            }
        }
        
        /// <summary>
        /// Grants the right to write extended attributes.
        /// </summary>
        public EntityItemAuditType file_write_ea {
            get {
                return this.file_write_eaField;
            }
            set {
                this.file_write_eaField = value;
            }
        }
        
        /// <summary>
        /// Grants the right to execute a file.
        /// </summary>
        public EntityItemAuditType file_execute {
            get {
                return this.file_executeField;
            }
            set {
                this.file_executeField = value;
            }
        }
        
        /// <summary>
        /// Right to delete a directory and all the files it contains (its children), even if the files are read-only.
        /// </summary>
        public EntityItemAuditType file_delete_child {
            get {
                return this.file_delete_childField;
            }
            set {
                this.file_delete_childField = value;
            }
        }
        
        /// <summary>
        /// Grants the right to read file attributes.
        /// </summary>
        public EntityItemAuditType file_read_attributes {
            get {
                return this.file_read_attributesField;
            }
            set {
                this.file_read_attributesField = value;
            }
        }
        
        /// <summary>
        /// Grants the right to change file attributes.
        /// </summary>
        public EntityItemAuditType file_write_attributes {
            get {
                return this.file_write_attributesField;
            }
            set {
                this.file_write_attributesField = value;
            }
        }
    }
    
    /// <summary>
    /// This item stores the effective rights of a file that a discretionary access control list (DACL) structure grants to a specified trustee. The trustee's effective rights are determined checking all access-allowed and access-denied access control entries (ACEs) in the DACL. For help with this test see the GetEffectiveRightsFromAcl() api.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#windows")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#windows", IsNullable=false)]
    public partial class fileeffectiverights_item : ItemType {
        
        private EntityItemStringType filepathField;
        
        private EntityItemStringType pathField;
        
        private EntityItemStringType filenameField;
        
        private EntityItemStringType trustee_sidField;
        
        private EntityItemStringType trustee_nameField;
        
        private EntityItemBoolType standard_deleteField;
        
        private EntityItemBoolType standard_read_controlField;
        
        private EntityItemBoolType standard_write_dacField;
        
        private EntityItemBoolType standard_write_ownerField;
        
        private EntityItemBoolType standard_synchronizeField;
        
        private EntityItemBoolType access_system_securityField;
        
        private EntityItemBoolType generic_readField;
        
        private EntityItemBoolType generic_writeField;
        
        private EntityItemBoolType generic_executeField;
        
        private EntityItemBoolType generic_allField;
        
        private EntityItemBoolType file_read_dataField;
        
        private EntityItemBoolType file_write_dataField;
        
        private EntityItemBoolType file_append_dataField;
        
        private EntityItemBoolType file_read_eaField;
        
        private EntityItemBoolType file_write_eaField;
        
        private EntityItemBoolType file_executeField;
        
        private EntityItemBoolType file_delete_childField;
        
        private EntityItemBoolType file_read_attributesField;
        
        private EntityItemBoolType file_write_attributesField;
        
        /// <summary>
        /// Specifies the absolute path to a file on the machine from which the DACL was retrieved. A directory cannot be specified as a filepath.
        /// </summary>
        public EntityItemStringType filepath {
            get {
                return this.filepathField;
            }
            set {
                this.filepathField = value;
            }
        }
        
        /// <summary>
        /// This element specifies the absolute path to a file on the machine from which the DACL was retrieved.
        /// </summary>
        public EntityItemStringType path {
            get {
                return this.pathField;
            }
            set {
                this.pathField = value;
            }
        }
        
        /// <summary>
        /// The name of the file. If the xsi:nil attribute is set to true, then the item being represented is the higher directory represented by the path entity. The other items associated with this item would then reflect the values associated with the directory.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public EntityItemStringType filename {
            get {
                return this.filenameField;
            }
            set {
                this.filenameField = value;
            }
        }
        
        /// <summary>
        /// The trustee_sid entity specifies the SID that associated a user, group, system, or program (such as a Windows service).
        /// </summary>
        public EntityItemStringType trustee_sid {
            get {
                return this.trustee_sidField;
            }
            set {
                this.trustee_sidField = value;
            }
        }
        
        /// <summary>
        /// This element specifies the trustee name associated with this particular DACL.  A trustee can be a user, group, or program (such as a Windows service). In Windows, trustee names are case-insensitive. As a result, it is recommended that the case-insensitive operations are used for this entity. In a domain environment, trustee names should be identified in the form: "domain\trustee name". For local trustee names use: "computer name\trustee name". For built-in accounts on the system, use the trustee name without a domain.
        /// </summary>
        public EntityItemStringType trustee_name {
            get {
                return this.trustee_nameField;
            }
            set {
                this.trustee_nameField = value;
            }
        }
        
        /// <summary>
        /// The right to delete the object.
        /// </summary>
        public EntityItemBoolType standard_delete {
            get {
                return this.standard_deleteField;
            }
            set {
                this.standard_deleteField = value;
            }
        }
        
        /// <summary>
        /// The right to read the information in the object's security descriptor, not including the information in the SACL.
        /// </summary>
        public EntityItemBoolType standard_read_control {
            get {
                return this.standard_read_controlField;
            }
            set {
                this.standard_read_controlField = value;
            }
        }
        
        /// <summary>
        /// The right to modify the DACL in the object's security descriptor.
        /// </summary>
        public EntityItemBoolType standard_write_dac {
            get {
                return this.standard_write_dacField;
            }
            set {
                this.standard_write_dacField = value;
            }
        }
        
        /// <summary>
        /// The right to change the owner in the object's security descriptor.
        /// </summary>
        public EntityItemBoolType standard_write_owner {
            get {
                return this.standard_write_ownerField;
            }
            set {
                this.standard_write_ownerField = value;
            }
        }
        
        /// <summary>
        /// The right to use the object for synchronization. This enables a thread to wait until the object is in the signaled state. Some object types do not support this access right.
        /// </summary>
        public EntityItemBoolType standard_synchronize {
            get {
                return this.standard_synchronizeField;
            }
            set {
                this.standard_synchronizeField = value;
            }
        }
        
        /// <summary>
        /// Indicates access to a system access control list (SACL).
        /// </summary>
        public EntityItemBoolType access_system_security {
            get {
                return this.access_system_securityField;
            }
            set {
                this.access_system_securityField = value;
            }
        }
        
        /// <summary>
        /// Read access.
        /// </summary>
        public EntityItemBoolType generic_read {
            get {
                return this.generic_readField;
            }
            set {
                this.generic_readField = value;
            }
        }
        
        /// <summary>
        /// Write access.
        /// </summary>
        public EntityItemBoolType generic_write {
            get {
                return this.generic_writeField;
            }
            set {
                this.generic_writeField = value;
            }
        }
        
        /// <summary>
        /// Execute access.
        /// </summary>
        public EntityItemBoolType generic_execute {
            get {
                return this.generic_executeField;
            }
            set {
                this.generic_executeField = value;
            }
        }
        
        /// <summary>
        /// Read, write, and execute access.
        /// </summary>
        public EntityItemBoolType generic_all {
            get {
                return this.generic_allField;
            }
            set {
                this.generic_allField = value;
            }
        }
        
        /// <summary>
        /// Grants the right to read data from the file
        /// </summary>
        public EntityItemBoolType file_read_data {
            get {
                return this.file_read_dataField;
            }
            set {
                this.file_read_dataField = value;
            }
        }
        
        /// <summary>
        /// Grants the right to write data to the file.
        /// </summary>
        public EntityItemBoolType file_write_data {
            get {
                return this.file_write_dataField;
            }
            set {
                this.file_write_dataField = value;
            }
        }
        
        /// <summary>
        /// Grants the right to append data to the file.
        /// </summary>
        public EntityItemBoolType file_append_data {
            get {
                return this.file_append_dataField;
            }
            set {
                this.file_append_dataField = value;
            }
        }
        
        /// <summary>
        /// Grants the right to read extended attributes.
        /// </summary>
        public EntityItemBoolType file_read_ea {
            get {
                return this.file_read_eaField;
            }
            set {
                this.file_read_eaField = value;
            }
        }
        
        /// <summary>
        /// Grants the right to write extended attributes.
        /// </summary>
        public EntityItemBoolType file_write_ea {
            get {
                return this.file_write_eaField;
            }
            set {
                this.file_write_eaField = value;
            }
        }
        
        /// <summary>
        /// Grants the right to execute a file.
        /// </summary>
        public EntityItemBoolType file_execute {
            get {
                return this.file_executeField;
            }
            set {
                this.file_executeField = value;
            }
        }
        
        /// <summary>
        /// Right to delete a directory and all the files it contains (its children), even if the files are read-only.
        /// </summary>
        public EntityItemBoolType file_delete_child {
            get {
                return this.file_delete_childField;
            }
            set {
                this.file_delete_childField = value;
            }
        }
        
        /// <summary>
        /// Grants the right to read file attributes.
        /// </summary>
        public EntityItemBoolType file_read_attributes {
            get {
                return this.file_read_attributesField;
            }
            set {
                this.file_read_attributesField = value;
            }
        }
        
        /// <summary>
        /// Grants the right to change file attributes.
        /// </summary>
        public EntityItemBoolType file_write_attributes {
            get {
                return this.file_write_attributesField;
            }
            set {
                this.file_write_attributesField = value;
            }
        }
    }
    
    /// <summary>
    /// The Windows group_item allows the different users and subgroups, that directly belong to specific groups (identified by name), to be collected. The collected subgroups will not be resolved to find indirect user or subgroup members. If the subgroups need to be resolved, it should be done using the sid_object. Note that the user and subgroup elements can appear an unlimited number of times. If a user is not found in the specified group, a single user element should exist with a status of 'does not exist'. If there is an error determining the users of a group, a single user element should exist with a status of 'error'. If a subgroup is not found in the specified group, a single subgroup element should exist with a status of 'does not exist'. If there is an error determining the subgroups of a group, a single subgroup element should exist with a status of 'error'.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#windows")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#windows", IsNullable=false)]
    public partial class group_item : ItemType {
        
        private EntityItemStringType groupField;
        
        private EntityItemStringType[] userField;
        
        private EntityItemStringType[] subgroupField;
        
        /// <summary>
        /// A string the represents the name of a particular group. In Windows, group names are case-insensitive. As a result, it is recommended that the case-insensitive operations are used for this entity. In a domain environment, groups should be identified in the form: "domain\group name". For local groups use: "computer name\group name". For built-in accounts on the system, use the group name without a domain.
        /// </summary>
        public EntityItemStringType group {
            get {
                return this.groupField;
            }
            set {
                this.groupField = value;
            }
        }
        
        /// <summary>
        /// If the specified group has more than one user as a member, then multiple user elements should exist. If the specified group does not contain a single user, then a single user element should exist with a status of 'does not exist'. If there is an error determining the users that are members of the group, then a single user element should be included with a status of 'error'.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("user")]
        public EntityItemStringType[] user {
            get {
                return this.userField;
            }
            set {
                this.userField = value;
            }
        }
        
        /// <summary>
        /// If the specified group has more than one subgroup as a member, then multiple subgroup elements should exist. If the specified group does not contain a single subgroup, then a single subgroup element should exist with a status of 'does not exist'. If there is an error determining the subgroups that are members of the group, then a single subgroup element should be included with a status of 'error'.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("subgroup")]
        public EntityItemStringType[] subgroup {
            get {
                return this.subgroupField;
            }
            set {
                this.subgroupField = value;
            }
        }
    }
    
    /// <summary>
    /// The Windows group_sid_item allows the different users and subgroups, that directly belong to specific groups (identified by SID), to be collected. The collected subgroups will not be resolved to find indirect user or subgroup members. If the subgroups need to be resolved, it should be done using the sid_sid_object. Note that the user and subgroup elements can appear an unlimited number of times. If a user is not found in the specified group, a single user element should exist with a status of 'does not exist'. If there is an error determining the users of a group, a single user element should exist with a status of 'error'. If a subgroup is not found in the specified group, a single subgroup element should exist with a status of 'does not exist'. If there is an error determining the subgroups of a group, a single subgroup element should exist with a status of 'error'.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#windows")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#windows", IsNullable=false)]
    public partial class group_sid_item : ItemType {
        
        private EntityItemStringType group_sidField;
        
        private EntityItemStringType[] user_sidField;
        
        private EntityItemStringType[] subgroup_sidField;
        
        /// <summary>
        /// A string the represents the SID of a particular group.
        /// </summary>
        public EntityItemStringType group_sid {
            get {
                return this.group_sidField;
            }
            set {
                this.group_sidField = value;
            }
        }
        
        /// <summary>
        /// A string that represents the SID of a particular user.  If the specified group has more than one user as a member, then multiple user_sid entities should exist. If the specified group does not contain a single user, then a single user_sid entity should exist with a status of 'does not exist'. If there is an error determining the userss that are members of the group, then a single user_sid entity should be included with a status of 'error'.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("user_sid")]
        public EntityItemStringType[] user_sid {
            get {
                return this.user_sidField;
            }
            set {
                this.user_sidField = value;
            }
        }
        
        /// <summary>
        /// A string that represents the SID of a particular subgroup. If the specified group has more than one subgroup as a member, then multiple subgroup_sid entities should exist. If the specified group does not contain a single subgroup, a single subgroup_sid entity should exist with a status of 'does not exist'. If there is an error determining the subgroups that are members of the group, then a single subgroup_sid entity should be included with a status of 'error'.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("subgroup_sid")]
        public EntityItemStringType[] subgroup_sid {
            get {
                return this.subgroup_sidField;
            }
            set {
                this.subgroup_sidField = value;
            }
        }
    }
    
    /// <summary>
    /// Enumerate various attributes about the interfaces on a system.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#windows")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#windows", IsNullable=false)]
    public partial class interface_item : ItemType {
        
        private EntityItemStringType nameField;
        
        private EntityItemIntType indexField;
        
        private EntityItemInterfaceTypeType typeField;
        
        private EntityItemStringType hardware_addrField;
        
        private EntityItemIPAddressStringType inet_addrField;
        
        private EntityItemIPAddressStringType broadcast_addrField;
        
        private EntityItemIPAddressStringType netmaskField;
        
        private EntityItemAddrTypeType[] addr_typeField;
        
        /// <summary>
        /// This element specifies the name of an interface.
        /// </summary>
        public EntityItemStringType name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <summary>
        /// This element specifies index that identifies the interface.
        /// </summary>
        public EntityItemIntType index {
            get {
                return this.indexField;
            }
            set {
                this.indexField = value;
            }
        }
        
        /// <summary>
        /// This element specifies the type of interface which is limited to certain set of values.
        /// </summary>
        public EntityItemInterfaceTypeType type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <summary>
        /// This element specifies the hardware or MAC address of the physical network card. MAC addresses should be formatted according to the IEEE 802-2001 standard which states that a MAC address is a sequence of six octet values, separated by hyphens, where each octet is represented by two hexadecimal digits.  Uppercase letters should also be used to represent the hexadecimal digits A through F.
        /// </summary>
        public EntityItemStringType hardware_addr {
            get {
                return this.hardware_addrField;
            }
            set {
                this.hardware_addrField = value;
            }
        }
        
        /// <summary>
        /// This element specifies the IP address of the specific interface. Note that the IP address can be IPv4 or IPv6. If the IP address is an IPv6 address, this entity should be expressed as an IPv6 address prefix using CIDR notation and the netmask entity should not be collected.
        /// </summary>
        public EntityItemIPAddressStringType inet_addr {
            get {
                return this.inet_addrField;
            }
            set {
                this.inet_addrField = value;
            }
        }
        
        /// <summary>
        /// This element specifies the broadcast address. A broadcast address is typically the IP address with the host portion set to either all zeros or all ones. Note that the IP address can be IPv4 or IPv6.
        /// </summary>
        public EntityItemIPAddressStringType broadcast_addr {
            get {
                return this.broadcast_addrField;
            }
            set {
                this.broadcast_addrField = value;
            }
        }
        
        /// <summary>
        /// This element specifies the subnet mask for the IP address. Note that if the inet_addr entity contains an IPv6 address prefix, this entity should not be collected.
        /// </summary>
        public EntityItemIPAddressStringType netmask {
            get {
                return this.netmaskField;
            }
            set {
                this.netmaskField = value;
            }
        }
        
        /// <summary>
        /// This element specifies the address type or state of a specific interface. Each interface can be associated with more than one value meaning the addr_type element can occur multiple times.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("addr_type")]
        public EntityItemAddrTypeType[] addr_type {
            get {
                return this.addr_typeField;
            }
            set {
                this.addr_typeField = value;
            }
        }
    }
    
    /// <summary>
    /// The lockoutpolicy item enumerates various attributes associated with lockout information for users and global groups in the security database.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#windows")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#windows", IsNullable=false)]
    public partial class lockoutpolicy_item : ItemType {
        
        private EntityItemIntType force_logoffField;
        
        private EntityItemIntType lockout_durationField;
        
        private EntityItemIntType lockout_observation_windowField;
        
        private EntityItemIntType lockout_thresholdField;
        
        /// <summary>
        /// Specifies, in seconds, the amount of time between the end of the valid logon time and the time when the user is forced to log off the network. A value of TIMEQ_FOREVER indicates that the user is never forced to log off. A value of zero indicates that the user will be forced to log off immediately when the valid logon time expires. See the USER_MODALS_INFO_0 structure returned by a call to NetUserModalsGet().
        /// </summary>
        public EntityItemIntType force_logoff {
            get {
                return this.force_logoffField;
            }
            set {
                this.force_logoffField = value;
            }
        }
        
        /// <summary>
        /// Specifies, in seconds, how long a locked account remains locked before it is automatically unlocked. See the USER_MODALS_INFO_3 structure returned by a call to NetUserModalsGet().
        /// </summary>
        public EntityItemIntType lockout_duration {
            get {
                return this.lockout_durationField;
            }
            set {
                this.lockout_durationField = value;
            }
        }
        
        /// <summary>
        /// Specifies the maximum time, in seconds, that can elapse between any two failed logon attempts before lockout occurs. See the USER_MODALS_INFO_3 structure returned by a call to NetUserModalsGet().
        /// </summary>
        public EntityItemIntType lockout_observation_window {
            get {
                return this.lockout_observation_windowField;
            }
            set {
                this.lockout_observation_windowField = value;
            }
        }
        
        /// <summary>
        /// Specifies the number of invalid password authentications that can occur before an account is marked "locked out." See the USER_MODALS_INFO_3 structure returned by a call to NetUserModalsGet().
        /// </summary>
        public EntityItemIntType lockout_threshold {
            get {
                return this.lockout_thresholdField;
            }
            set {
                this.lockout_thresholdField = value;
            }
        }
    }
    
    /// <summary>
    /// This item gathers information from the specified metabase keys.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#windows")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#windows", IsNullable=false)]
    public partial class metabase_item : ItemType {
        
        private EntityItemStringType keyField;
        
        private EntityItemIntType id1Field;
        
        private EntityItemStringType nameField;
        
        private EntityItemStringType user_typeField;
        
        private EntityItemStringType data_typeField;
        
        private EntityItemAnySimpleType[] dataField;
        
        /// <summary>
        /// This element describes a metabase key to be gathered.
        /// </summary>
        public EntityItemStringType key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("id", IsNullable=true)]
        public EntityItemIntType id1 {
            get {
                return this.id1Field;
            }
            set {
                this.id1Field = value;
            }
        }
        
        /// <summary>
        /// This element describes the name of the specified metabase object.
        /// </summary>
        public EntityItemStringType name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <summary>
        /// The user_type element is a DWORD that specifies the user type of the data. See the METADATA_RECORD structure.
        /// </summary>
        public EntityItemStringType user_type {
            get {
                return this.user_typeField;
            }
            set {
                this.user_typeField = value;
            }
        }
        
        /// <summary>
        /// The data_type element identifies the type of data in the metabase entry. See the METADATA_RECORD structure.
        /// </summary>
        public EntityItemStringType data_type {
            get {
                return this.data_typeField;
            }
            set {
                this.data_typeField = value;
            }
        }
        
        /// <summary>
        /// The actual data of the named item under the specified metabase key. If the specified metabase key is of type multi string, then multiple value elements should exist to describe the array of strings.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("data")]
        public EntityItemAnySimpleType[] data {
            get {
                return this.dataField;
            }
            set {
                this.dataField = value;
            }
        }
    }
    
    /// <summary>
    /// Specific policy items associated with passwords. It is important to note that these policies are specific to certain versions of Windows.  As a result, the documentation for that version of Windows should be consulted for more information. Information is stored in the SAM or Active Directory but is encrypted or hidden so the registry_item and activedirectory_item are of no use. If this can be figured out, then the password_policy item is not needed.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#windows")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#windows", IsNullable=false)]
    public partial class passwordpolicy_item : ItemType {
        
        private EntityItemIntType max_passwd_ageField;
        
        private EntityItemIntType min_passwd_ageField;
        
        private EntityItemIntType min_passwd_lenField;
        
        private EntityItemIntType password_hist_lenField;
        
        private EntityItemBoolType password_complexityField;
        
        private EntityItemBoolType reversible_encryptionField;
        
        /// <summary>
        /// Specifies, in seconds, the maximum allowable password age. A value of TIMEQ_FOREVER (-1) indicates that the password never expires. The minimum valid value for this element is ONE_DAY (86400).
        /// </summary>
        public EntityItemIntType max_passwd_age {
            get {
                return this.max_passwd_ageField;
            }
            set {
                this.max_passwd_ageField = value;
            }
        }
        
        /// <summary>
        /// Specifies the minimum number of seconds that can elapse between the time a password changes and when it can be changed again. A value of zero indicates that no delay is required between password updates.
        /// </summary>
        public EntityItemIntType min_passwd_age {
            get {
                return this.min_passwd_ageField;
            }
            set {
                this.min_passwd_ageField = value;
            }
        }
        
        /// <summary>
        /// Specifies the minimum allowable password length. Valid values for this element are zero through PWLEN.
        /// </summary>
        public EntityItemIntType min_passwd_len {
            get {
                return this.min_passwd_lenField;
            }
            set {
                this.min_passwd_lenField = value;
            }
        }
        
        /// <summary>
        /// Specifies the length of password history maintained. A new password cannot match any of the previous usrmod0_password_hist_len passwords. Valid values for this element are zero through DEF_MAX_PWHIST.
        /// </summary>
        public EntityItemIntType password_hist_len {
            get {
                return this.password_hist_lenField;
            }
            set {
                this.password_hist_lenField = value;
            }
        }
        
        /// <summary>
        /// A boolean value that signifies whether passwords must meet the complexity requirements put forth by the operating system.
        /// </summary>
        public EntityItemBoolType password_complexity {
            get {
                return this.password_complexityField;
            }
            set {
                this.password_complexityField = value;
            }
        }
        
        /// <summary>
        /// Determines whether or not passwords are stored using reversible encryption.
        /// </summary>
        public EntityItemBoolType reversible_encryption {
            get {
                return this.reversible_encryptionField;
            }
            set {
                this.reversible_encryptionField = value;
            }
        }
    }
    
    /// <summary>
    /// Information about open listening ports.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#windows")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#windows", IsNullable=false)]
    public partial class port_item : ItemType {
        
        private EntityItemIPAddressStringType local_addressField;
        
        private EntityItemIntType local_portField;
        
        private EntityItemProtocolType protocolField;
        
        private EntityItemIntType pidField;
        
        private EntityItemIPAddressStringType foreign_addressField;
        
        private EntityItemStringType foreign_portField;
        
        /// <summary>
        /// This element specifies the local IP address the listening port is bound to. Note that the IP address can be IPv4 or IPv6.
        /// </summary>
        public EntityItemIPAddressStringType local_address {
            get {
                return this.local_addressField;
            }
            set {
                this.local_addressField = value;
            }
        }
        
        /// <summary>
        /// This element specifies the number assigned to the local listening port.
        /// </summary>
        public EntityItemIntType local_port {
            get {
                return this.local_portField;
            }
            set {
                this.local_portField = value;
            }
        }
        
        /// <summary>
        /// This element specifies the type of listening port. It is restricted to either TCP or UDP.
        /// </summary>
        public EntityItemProtocolType protocol {
            get {
                return this.protocolField;
            }
            set {
                this.protocolField = value;
            }
        }
        
        /// <summary>
        /// The id given to the process that is associated with the specified listening port.
        /// </summary>
        public EntityItemIntType pid {
            get {
                return this.pidField;
            }
            set {
                this.pidField = value;
            }
        }
        
        /// <summary>
        /// This is the IP address with which the program is communicating, or with which it will communicate, in the case of a listening server. Note that the IP address can be IPv4 or IPv6.
        /// </summary>
        public EntityItemIPAddressStringType foreign_address {
            get {
                return this.foreign_addressField;
            }
            set {
                this.foreign_addressField = value;
            }
        }
        
        /// <summary>
        /// This is the TCP or UDP port to which the program communicates.
        /// </summary>
        public EntityItemStringType foreign_port {
            get {
                return this.foreign_portField;
            }
            set {
                this.foreign_portField = value;
            }
        }
    }
    
    /// <summary>
    /// This item stores the effective rights of a printer that a discretionary access control list (DACL) structure grants to a specified trustee. The trustee's effective rights are determined checking all access-allowed and access-denied access control entries (ACEs) in the DACL. For help with this test see the GetEffectiveRightsFromAcl() api.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#windows")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#windows", IsNullable=false)]
    public partial class printereffectiverights_item : ItemType {
        
        private EntityItemStringType printer_nameField;
        
        private EntityItemStringType trustee_sidField;
        
        private EntityItemBoolType standard_deleteField;
        
        private EntityItemBoolType standard_read_controlField;
        
        private EntityItemBoolType standard_write_dacField;
        
        private EntityItemBoolType standard_write_ownerField;
        
        private EntityItemBoolType standard_synchronizeField;
        
        private EntityItemBoolType access_system_securityField;
        
        private EntityItemBoolType generic_readField;
        
        private EntityItemBoolType generic_writeField;
        
        private EntityItemBoolType generic_executeField;
        
        private EntityItemBoolType generic_allField;
        
        private EntityItemBoolType printer_access_administerField;
        
        private EntityItemBoolType printer_access_useField;
        
        private EntityItemBoolType job_access_administerField;
        
        private EntityItemBoolType job_access_readField;
        
        /// <summary>
        /// The printer_name enitity specifies the name of the printer.
        /// </summary>
        public EntityItemStringType printer_name {
            get {
                return this.printer_nameField;
            }
            set {
                this.printer_nameField = value;
            }
        }
        
        /// <summary>
        /// The trustee_sid entity specifies the SID that associated a user, group, system, or program (such as a Windows service).
        /// </summary>
        public EntityItemStringType trustee_sid {
            get {
                return this.trustee_sidField;
            }
            set {
                this.trustee_sidField = value;
            }
        }
        
        /// <summary>
        /// The right to delete the object.
        /// </summary>
        public EntityItemBoolType standard_delete {
            get {
                return this.standard_deleteField;
            }
            set {
                this.standard_deleteField = value;
            }
        }
        
        /// <summary>
        /// The right to read the information in the object's security descriptor, not including the information in the SACL.
        /// </summary>
        public EntityItemBoolType standard_read_control {
            get {
                return this.standard_read_controlField;
            }
            set {
                this.standard_read_controlField = value;
            }
        }
        
        /// <summary>
        /// The right to modify the DACL in the object's security descriptor.
        /// </summary>
        public EntityItemBoolType standard_write_dac {
            get {
                return this.standard_write_dacField;
            }
            set {
                this.standard_write_dacField = value;
            }
        }
        
        /// <summary>
        /// The right to change the owner in the object's security descriptor.
        /// </summary>
        public EntityItemBoolType standard_write_owner {
            get {
                return this.standard_write_ownerField;
            }
            set {
                this.standard_write_ownerField = value;
            }
        }
        
        /// <summary>
        /// The right to use the object for synchronization. This enables a thread to wait until the object is in the signaled state. Some object types do not support this access right.
        /// </summary>
        public EntityItemBoolType standard_synchronize {
            get {
                return this.standard_synchronizeField;
            }
            set {
                this.standard_synchronizeField = value;
            }
        }
        
        /// <summary>
        /// Indicates access to a system access control list (SACL).
        /// </summary>
        public EntityItemBoolType access_system_security {
            get {
                return this.access_system_securityField;
            }
            set {
                this.access_system_securityField = value;
            }
        }
        
        /// <summary>
        /// Read access.
        /// </summary>
        public EntityItemBoolType generic_read {
            get {
                return this.generic_readField;
            }
            set {
                this.generic_readField = value;
            }
        }
        
        /// <summary>
        /// Write access.
        /// </summary>
        public EntityItemBoolType generic_write {
            get {
                return this.generic_writeField;
            }
            set {
                this.generic_writeField = value;
            }
        }
        
        /// <summary>
        /// Execute access.
        /// </summary>
        public EntityItemBoolType generic_execute {
            get {
                return this.generic_executeField;
            }
            set {
                this.generic_executeField = value;
            }
        }
        
        /// <summary>
        /// Read, write, and execute access.
        /// </summary>
        public EntityItemBoolType generic_all {
            get {
                return this.generic_allField;
            }
            set {
                this.generic_allField = value;
            }
        }
        
        public EntityItemBoolType printer_access_administer {
            get {
                return this.printer_access_administerField;
            }
            set {
                this.printer_access_administerField = value;
            }
        }
        
        public EntityItemBoolType printer_access_use {
            get {
                return this.printer_access_useField;
            }
            set {
                this.printer_access_useField = value;
            }
        }
        
        public EntityItemBoolType job_access_administer {
            get {
                return this.job_access_administerField;
            }
            set {
                this.job_access_administerField = value;
            }
        }
        
        public EntityItemBoolType job_access_read {
            get {
                return this.job_access_readField;
            }
            set {
                this.job_access_readField = value;
            }
        }
    }
    
    /// <summary>
    /// Information about running processes.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#windows")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#windows", IsNullable=false)]
    public partial class process_item : ItemType {
        
        private EntityItemStringType command_lineField;
        
        private EntityItemIntType pidField;
        
        private EntityItemIntType ppidField;
        
        private EntityItemStringType priorityField;
        
        private EntityItemStringType image_pathField;
        
        private EntityItemStringType current_dirField;
        
        /// <summary>
        /// The command_line entity is the string used to start the process.  This includes any parameters that are part of the command line.
        /// </summary>
        public EntityItemStringType command_line {
            get {
                return this.command_lineField;
            }
            set {
                this.command_lineField = value;
            }
        }
        
        /// <summary>
        /// The id given to the process that is created for a specified command line.
        /// </summary>
        public EntityItemIntType pid {
            get {
                return this.pidField;
            }
            set {
                this.pidField = value;
            }
        }
        
        /// <summary>
        /// The id given to the parent of the process that is created for the specified command line
        /// </summary>
        public EntityItemIntType ppid {
            get {
                return this.ppidField;
            }
            set {
                this.ppidField = value;
            }
        }
        
        /// <summary>
        /// The base priority of the process.
        /// </summary>
        public EntityItemStringType priority {
            get {
                return this.priorityField;
            }
            set {
                this.priorityField = value;
            }
        }
        
        /// <summary>
        /// The image_path entity contains the name of the executable file in question.
        /// </summary>
        public EntityItemStringType image_path {
            get {
                return this.image_pathField;
            }
            set {
                this.image_pathField = value;
            }
        }
        
        /// <summary>
        /// The current_directory entity represents the current path to the executable.
        /// </summary>
        public EntityItemStringType current_dir {
            get {
                return this.current_dirField;
            }
            set {
                this.current_dirField = value;
            }
        }
    }
    
    /// <summary>
    /// The windows registry item specifies information that can be collected about a particular registry key.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#windows")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#windows", IsNullable=false)]
    public partial class registry_item : ItemType {
        
        private EntityItemRegistryHiveType hiveField;
        
        private EntityItemStringType keyField;
        
        private EntityItemStringType nameField;
        
        private EntityItemRegistryTypeType typeField;
        
        private EntityItemAnySimpleType[] valueField;
        
        /// <summary>
        /// The hive that the registry key belongs to.
        /// </summary>
        public EntityItemRegistryHiveType hive {
            get {
                return this.hiveField;
            }
            set {
                this.hiveField = value;
            }
        }
        
        /// <summary>
        /// This element describes a registry key to be gathered. Note that the hive portion of the string should not be inclueded, as this data can be found under the hive element. If the xsi:nil attribute is set to true, then the item being represented is the higher level hive. Using xsi:nil here will result in a status of 'does not exist' for the type, and value entities since these entities are not associated with a hive by itself. Note that when xsi:nil is used for the key element, the name element should also be nilled.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public EntityItemStringType key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
        
        /// <summary>
        /// This element describes the name of a registry key. If the xsi:nil attribute is set to true, then the item being represented is the higher level key. Using xsi:nil here will result in a status of 'does not exist' for the type, and value entities since these entities are not associated with a key by itself.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public EntityItemStringType name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <summary>
        /// Specifies the type of data stored by the registry key. Please refer to the EntityItemRegistryTypeType for more information about the different possible types.
        /// </summary>
        public EntityItemRegistryTypeType type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <summary>
        /// The value entity holds the actual value of the specified registry key. The representation of the value as well as the associated datatype attribute depends on type of data stored in the registry key. If the specified registry key is of type REG_BINARY, then the datatype attribute should be set to 'binary' and the data represented by the value entity should follow the xsd:hexBinary form. (each binary octet is encoded as two hex digits) If the registry key is of type REG_DWORD or REG_QWORD, then the datatype attribute should be set to 'int' and the value entity should represent the data as an integer. If the specified registry key is of type REG_EXPAND_SZ, then the datatype attribute should be set to 'string' and the pre-expanded string should be represented by the value entity. If the specified registry key is of type REG_MULTI_SZ, then multiple value entities should exist to describe the array of strings, with each value element holds a single string. In the end, there should be the same number of value entities as there are strings in the reg_multi_sz array. If the specified registry key is of type REG_SZ, then the datatype should be 'string' and the value entity should be a copy of the string.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("value")]
        public EntityItemAnySimpleType[] value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <summary>
    /// This item stores the audited access rights of a registry key that a system access control list (SACL) structure grants to a specified trustee. The trustee's audited access rights are determined checking all access control entries (ACEs) in the SACL. For help with this test see the GetAuditedPermissionsFromAcl() api.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#windows")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#windows", IsNullable=false)]
    public partial class regkeyauditedpermissions_item : ItemType {
        
        private EntityItemRegistryHiveType hiveField;
        
        private EntityItemStringType keyField;
        
        private EntityItemStringType trustee_sidField;
        
        private EntityItemStringType trustee_nameField;
        
        private EntityItemAuditType standard_deleteField;
        
        private EntityItemAuditType standard_read_controlField;
        
        private EntityItemAuditType standard_write_dacField;
        
        private EntityItemAuditType standard_write_ownerField;
        
        private EntityItemAuditType standard_synchronizeField;
        
        private EntityItemAuditType access_system_securityField;
        
        private EntityItemAuditType generic_readField;
        
        private EntityItemAuditType generic_writeField;
        
        private EntityItemAuditType generic_executeField;
        
        private EntityItemAuditType generic_allField;
        
        private EntityItemAuditType key_query_valueField;
        
        private EntityItemAuditType key_set_valueField;
        
        private EntityItemAuditType key_create_sub_keyField;
        
        private EntityItemAuditType key_enumerate_sub_keysField;
        
        private EntityItemAuditType key_notifyField;
        
        private EntityItemAuditType key_create_linkField;
        
        private EntityItemAuditType key_wow64_64keyField;
        
        private EntityItemAuditType key_wow64_32keyField;
        
        private EntityItemAuditType key_wow64_resField;
        
        /// <summary>
        /// This element specifies the hive of a registry key on the machine from which the SACL was retrieved.
        /// </summary>
        public EntityItemRegistryHiveType hive {
            get {
                return this.hiveField;
            }
            set {
                this.hiveField = value;
            }
        }
        
        /// <summary>
        /// This element specifies a registry key on the machine from which the SACL was retrieved. Note that the hive portion of the string should not be inclueded, as this data should be found under the hive element.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public EntityItemStringType key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
        
        /// <summary>
        /// The security identifier (SID) of the specified trustee name.
        /// </summary>
        public EntityItemStringType trustee_sid {
            get {
                return this.trustee_sidField;
            }
            set {
                this.trustee_sidField = value;
            }
        }
        
        /// <summary>
        /// This element specifies the trustee name associated with this particular DACL.  A trustee can be a user, group, or program (such as a Windows service). In Windows, trustee names are case-insensitive. As a result, it is recommended that the case-insensitive operations are used for this entity. In a domain environment, trustee names should be identified in the form: "domain\trustee name". For local trustee names use: "computer name\trustee name". For built-in accounts on the system, use the trustee name without a domain.
        /// </summary>
        public EntityItemStringType trustee_name {
            get {
                return this.trustee_nameField;
            }
            set {
                this.trustee_nameField = value;
            }
        }
        
        /// <summary>
        /// The right to delete the object.
        /// </summary>
        public EntityItemAuditType standard_delete {
            get {
                return this.standard_deleteField;
            }
            set {
                this.standard_deleteField = value;
            }
        }
        
        /// <summary>
        /// The right to read the information in the object's security descriptor, not including the information in the SACL.
        /// </summary>
        public EntityItemAuditType standard_read_control {
            get {
                return this.standard_read_controlField;
            }
            set {
                this.standard_read_controlField = value;
            }
        }
        
        /// <summary>
        /// The right to modify the DACL in the object's security descriptor.
        /// </summary>
        public EntityItemAuditType standard_write_dac {
            get {
                return this.standard_write_dacField;
            }
            set {
                this.standard_write_dacField = value;
            }
        }
        
        /// <summary>
        /// The right to change the owner in the object's security descriptor.
        /// </summary>
        public EntityItemAuditType standard_write_owner {
            get {
                return this.standard_write_ownerField;
            }
            set {
                this.standard_write_ownerField = value;
            }
        }
        
        /// <summary>
        /// The right to use the object for synchronization. This enables a thread to wait until the object is in the signaled state. Some object types do not support this access right.
        /// </summary>
        public EntityItemAuditType standard_synchronize {
            get {
                return this.standard_synchronizeField;
            }
            set {
                this.standard_synchronizeField = value;
            }
        }
        
        /// <summary>
        /// Indicates access to a system access control list (SACL).
        /// </summary>
        public EntityItemAuditType access_system_security {
            get {
                return this.access_system_securityField;
            }
            set {
                this.access_system_securityField = value;
            }
        }
        
        /// <summary>
        /// Read access.
        /// </summary>
        public EntityItemAuditType generic_read {
            get {
                return this.generic_readField;
            }
            set {
                this.generic_readField = value;
            }
        }
        
        /// <summary>
        /// Write access.
        /// </summary>
        public EntityItemAuditType generic_write {
            get {
                return this.generic_writeField;
            }
            set {
                this.generic_writeField = value;
            }
        }
        
        /// <summary>
        /// Execute access.
        /// </summary>
        public EntityItemAuditType generic_execute {
            get {
                return this.generic_executeField;
            }
            set {
                this.generic_executeField = value;
            }
        }
        
        /// <summary>
        /// Read, write, and execute access.
        /// </summary>
        public EntityItemAuditType generic_all {
            get {
                return this.generic_allField;
            }
            set {
                this.generic_allField = value;
            }
        }
        
        public EntityItemAuditType key_query_value {
            get {
                return this.key_query_valueField;
            }
            set {
                this.key_query_valueField = value;
            }
        }
        
        public EntityItemAuditType key_set_value {
            get {
                return this.key_set_valueField;
            }
            set {
                this.key_set_valueField = value;
            }
        }
        
        public EntityItemAuditType key_create_sub_key {
            get {
                return this.key_create_sub_keyField;
            }
            set {
                this.key_create_sub_keyField = value;
            }
        }
        
        public EntityItemAuditType key_enumerate_sub_keys {
            get {
                return this.key_enumerate_sub_keysField;
            }
            set {
                this.key_enumerate_sub_keysField = value;
            }
        }
        
        public EntityItemAuditType key_notify {
            get {
                return this.key_notifyField;
            }
            set {
                this.key_notifyField = value;
            }
        }
        
        public EntityItemAuditType key_create_link {
            get {
                return this.key_create_linkField;
            }
            set {
                this.key_create_linkField = value;
            }
        }
        
        public EntityItemAuditType key_wow64_64key {
            get {
                return this.key_wow64_64keyField;
            }
            set {
                this.key_wow64_64keyField = value;
            }
        }
        
        public EntityItemAuditType key_wow64_32key {
            get {
                return this.key_wow64_32keyField;
            }
            set {
                this.key_wow64_32keyField = value;
            }
        }
        
        public EntityItemAuditType key_wow64_res {
            get {
                return this.key_wow64_resField;
            }
            set {
                this.key_wow64_resField = value;
            }
        }
    }
    
    /// <summary>
    /// This item stores the effective rights of a registry key that a discretionary access control list (DACL) structure grants to a specified trustee. The trustee's effective rights are determined checking all access-allowed and access-denied access control entries (ACEs) in the DACL. For help with this test see the GetEffectiveRightsFromAcl() api.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#windows")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#windows", IsNullable=false)]
    public partial class regkeyeffectiverights_item : ItemType {
        
        private EntityItemRegistryHiveType hiveField;
        
        private EntityItemStringType keyField;
        
        private EntityItemStringType trustee_sidField;
        
        private EntityItemStringType trustee_nameField;
        
        private EntityItemBoolType standard_deleteField;
        
        private EntityItemBoolType standard_read_controlField;
        
        private EntityItemBoolType standard_write_dacField;
        
        private EntityItemBoolType standard_write_ownerField;
        
        private EntityItemBoolType standard_synchronizeField;
        
        private EntityItemBoolType access_system_securityField;
        
        private EntityItemBoolType generic_readField;
        
        private EntityItemBoolType generic_writeField;
        
        private EntityItemBoolType generic_executeField;
        
        private EntityItemBoolType generic_allField;
        
        private EntityItemBoolType key_query_valueField;
        
        private EntityItemBoolType key_set_valueField;
        
        private EntityItemBoolType key_create_sub_keyField;
        
        private EntityItemBoolType key_enumerate_sub_keysField;
        
        private EntityItemBoolType key_notifyField;
        
        private EntityItemBoolType key_create_linkField;
        
        private EntityItemBoolType key_wow64_64keyField;
        
        private EntityItemBoolType key_wow64_32keyField;
        
        private EntityItemBoolType key_wow64_resField;
        
        /// <summary>
        /// The hive that the registry key belongs to.
        /// </summary>
        public EntityItemRegistryHiveType hive {
            get {
                return this.hiveField;
            }
            set {
                this.hiveField = value;
            }
        }
        
        /// <summary>
        /// This element describes a registry key to be gathered. Note that the hive portion of the string should not be inclueded, as this data can be found under the hive element. If the xsi:nil attribute is set to true, then the item being represented is the higher level hive.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public EntityItemStringType key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
        
        /// <summary>
        /// The trustee_sid entity specifies the SID that associated a user, group, system, or program (such as a Windows service).
        /// </summary>
        public EntityItemStringType trustee_sid {
            get {
                return this.trustee_sidField;
            }
            set {
                this.trustee_sidField = value;
            }
        }
        
        /// <summary>
        /// This element specifies the trustee name associated with this particular DACL.  A trustee can be a user, group, or program (such as a Windows service). In Windows, trustee names are case-insensitive. As a result, it is recommended that the case-insensitive operations are used for this entity. In a domain environment, trustee names should be identified in the form: "domain\trustee name". For local trustee names use: "computer name\trustee name". For built-in accounts on the system, use the trustee name without a domain.
        /// </summary>
        public EntityItemStringType trustee_name {
            get {
                return this.trustee_nameField;
            }
            set {
                this.trustee_nameField = value;
            }
        }
        
        /// <summary>
        /// The right to delete the object.
        /// </summary>
        public EntityItemBoolType standard_delete {
            get {
                return this.standard_deleteField;
            }
            set {
                this.standard_deleteField = value;
            }
        }
        
        /// <summary>
        /// The right to read the information in the object's security descriptor, not including the information in the SACL.
        /// </summary>
        public EntityItemBoolType standard_read_control {
            get {
                return this.standard_read_controlField;
            }
            set {
                this.standard_read_controlField = value;
            }
        }
        
        /// <summary>
        /// The right to modify the DACL in the object's security descriptor.
        /// </summary>
        public EntityItemBoolType standard_write_dac {
            get {
                return this.standard_write_dacField;
            }
            set {
                this.standard_write_dacField = value;
            }
        }
        
        /// <summary>
        /// The right to change the owner in the object's security descriptor.
        /// </summary>
        public EntityItemBoolType standard_write_owner {
            get {
                return this.standard_write_ownerField;
            }
            set {
                this.standard_write_ownerField = value;
            }
        }
        
        /// <summary>
        /// The right to use the object for synchronization. This enables a thread to wait until the object is in the signaled state. Some object types do not support this access right.
        /// </summary>
        public EntityItemBoolType standard_synchronize {
            get {
                return this.standard_synchronizeField;
            }
            set {
                this.standard_synchronizeField = value;
            }
        }
        
        /// <summary>
        /// Indicates access to a system access control list (SACL).
        /// </summary>
        public EntityItemBoolType access_system_security {
            get {
                return this.access_system_securityField;
            }
            set {
                this.access_system_securityField = value;
            }
        }
        
        /// <summary>
        /// Read access.
        /// </summary>
        public EntityItemBoolType generic_read {
            get {
                return this.generic_readField;
            }
            set {
                this.generic_readField = value;
            }
        }
        
        /// <summary>
        /// Write access.
        /// </summary>
        public EntityItemBoolType generic_write {
            get {
                return this.generic_writeField;
            }
            set {
                this.generic_writeField = value;
            }
        }
        
        /// <summary>
        /// Execute access.
        /// </summary>
        public EntityItemBoolType generic_execute {
            get {
                return this.generic_executeField;
            }
            set {
                this.generic_executeField = value;
            }
        }
        
        /// <summary>
        /// Read, write, and execute access.
        /// </summary>
        public EntityItemBoolType generic_all {
            get {
                return this.generic_allField;
            }
            set {
                this.generic_allField = value;
            }
        }
        
        public EntityItemBoolType key_query_value {
            get {
                return this.key_query_valueField;
            }
            set {
                this.key_query_valueField = value;
            }
        }
        
        public EntityItemBoolType key_set_value {
            get {
                return this.key_set_valueField;
            }
            set {
                this.key_set_valueField = value;
            }
        }
        
        public EntityItemBoolType key_create_sub_key {
            get {
                return this.key_create_sub_keyField;
            }
            set {
                this.key_create_sub_keyField = value;
            }
        }
        
        public EntityItemBoolType key_enumerate_sub_keys {
            get {
                return this.key_enumerate_sub_keysField;
            }
            set {
                this.key_enumerate_sub_keysField = value;
            }
        }
        
        public EntityItemBoolType key_notify {
            get {
                return this.key_notifyField;
            }
            set {
                this.key_notifyField = value;
            }
        }
        
        public EntityItemBoolType key_create_link {
            get {
                return this.key_create_linkField;
            }
            set {
                this.key_create_linkField = value;
            }
        }
        
        public EntityItemBoolType key_wow64_64key {
            get {
                return this.key_wow64_64keyField;
            }
            set {
                this.key_wow64_64keyField = value;
            }
        }
        
        public EntityItemBoolType key_wow64_32key {
            get {
                return this.key_wow64_32keyField;
            }
            set {
                this.key_wow64_32keyField = value;
            }
        }
        
        public EntityItemBoolType key_wow64_res {
            get {
                return this.key_wow64_resField;
            }
            set {
                this.key_wow64_resField = value;
            }
        }
    }
    
    /// <summary>
    /// This item stores information about Windows services that are present on the system.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#windows")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#windows", IsNullable=false)]
    public partial class service_item : ItemType {
        
        private EntityItemStringType service_nameField;
        
        private EntityItemStringType display_nameField;
        
        private EntityItemStringType descriptionField;
        
        private EntityItemServiceTypeType[] service_typeField;
        
        private EntityItemServiceStartTypeType start_typeField;
        
        private EntityItemServiceCurrentStateType current_stateField;
        
        private EntityItemServiceControlsAcceptedType[] controls_acceptedField;
        
        private EntityItemStringType start_nameField;
        
        private EntityItemStringType pathField;
        
        private EntityItemIntType pidField;
        
        private EntityItemBoolType service_flagField;
        
        private EntityItemStringType[] dependenciesField;
        
        /// <summary>
        /// The service_name element specifies the name of the service as specified in the Service Control Manager (SCM) database.
        /// </summary>
        public EntityItemStringType service_name {
            get {
                return this.service_nameField;
            }
            set {
                this.service_nameField = value;
            }
        }
        
        /// <summary>
        /// The display_name element specifies the name of the service as specified in tools such as Control Panel->Administrative Tools->Services.
        /// </summary>
        public EntityItemStringType display_name {
            get {
                return this.display_nameField;
            }
            set {
                this.display_nameField = value;
            }
        }
        
        /// <summary>
        /// The description element specifies the description of the service.
        /// </summary>
        public EntityItemStringType description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <summary>
        /// The service_type element specifies the type of the service.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("service_type")]
        public EntityItemServiceTypeType[] service_type {
            get {
                return this.service_typeField;
            }
            set {
                this.service_typeField = value;
            }
        }
        
        /// <summary>
        /// The start_type element specifies when the service should be started.
        /// </summary>
        public EntityItemServiceStartTypeType start_type {
            get {
                return this.start_typeField;
            }
            set {
                this.start_typeField = value;
            }
        }
        
        /// <summary>
        /// The current_state element specifies the current state of the service.
        /// </summary>
        public EntityItemServiceCurrentStateType current_state {
            get {
                return this.current_stateField;
            }
            set {
                this.current_stateField = value;
            }
        }
        
        /// <summary>
        /// The controls_accepted element specifies the control codes that a service will accept and process.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("controls_accepted")]
        public EntityItemServiceControlsAcceptedType[] controls_accepted {
            get {
                return this.controls_acceptedField;
            }
            set {
                this.controls_acceptedField = value;
            }
        }
        
        /// <summary>
        /// The start_name element specifies the account under which the process should run.
        /// </summary>
        public EntityItemStringType start_name {
            get {
                return this.start_nameField;
            }
            set {
                this.start_nameField = value;
            }
        }
        
        /// <summary>
        /// The path element specifies the path to the binary of the service.
        /// </summary>
        public EntityItemStringType path {
            get {
                return this.pathField;
            }
            set {
                this.pathField = value;
            }
        }
        
        /// <summary>
        /// The pid element specifies the process ID of the service.
        /// </summary>
        public EntityItemIntType pid {
            get {
                return this.pidField;
            }
            set {
                this.pidField = value;
            }
        }
        
        /// <summary>
        /// The service_flag element specifies if the service is in a system process that must always run (1) or if the service is in a non-system process or is not running (0). If the service is not running, the pid will be 0. Otherwise, the pid will be non-zero.
        /// </summary>
        public EntityItemBoolType service_flag {
            get {
                return this.service_flagField;
            }
            set {
                this.service_flagField = value;
            }
        }
        
        /// <summary>
        /// The dependencies element specifies the dependencies of this service on other services.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("dependencies")]
        public EntityItemStringType[] dependencies {
            get {
                return this.dependenciesField;
            }
            set {
                this.dependenciesField = value;
            }
        }
    }
    
    /// <summary>
    /// This item stores the effective rights of a service that a discretionary access control list (DACL) structure grants to a specified trustee.  The trustee's effective rights are determined by checking all access-allowed and access-denied access control entries (ACEs) in the DACL.  For help with this test see the GetEffectiveRightsFromAcl() api.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#windows")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#windows", IsNullable=false)]
    public partial class serviceeffectiverights_item : ItemType {
        
        private EntityItemStringType service_nameField;
        
        private EntityItemStringType trustee_sidField;
        
        private EntityItemBoolType standard_deleteField;
        
        private EntityItemBoolType standard_read_controlField;
        
        private EntityItemBoolType standard_write_dacField;
        
        private EntityItemBoolType standard_write_ownerField;
        
        private EntityItemBoolType generic_readField;
        
        private EntityItemBoolType generic_writeField;
        
        private EntityItemBoolType generic_executeField;
        
        private EntityItemBoolType service_query_confField;
        
        private EntityItemBoolType service_change_confField;
        
        private EntityItemBoolType service_query_statField;
        
        private EntityItemBoolType service_enum_dependentsField;
        
        private EntityItemBoolType service_startField;
        
        private EntityItemBoolType service_stopField;
        
        private EntityItemBoolType service_pauseField;
        
        private EntityItemBoolType service_interrogateField;
        
        private EntityItemBoolType service_user_definedField;
        
        /// <summary>
        /// The service_name element specifies a service on the machine from which to retrieve the DACL. Note that the service_name element should contain the actual name of the service and not its display name that is found in Control Panel->Administrative Tools->Services.  For example, if you wanted to check the effective rights of the Automatic Updates service you would specify 'wuauserv' for the service_name element not 'Automatic Updates'.
        /// </summary>
        public EntityItemStringType service_name {
            get {
                return this.service_nameField;
            }
            set {
                this.service_nameField = value;
            }
        }
        
        /// <summary>
        /// The trustee_sid element specifies the SID that is associated with a user, group, system, or program (such as a Windows service).
        /// </summary>
        public EntityItemStringType trustee_sid {
            get {
                return this.trustee_sidField;
            }
            set {
                this.trustee_sidField = value;
            }
        }
        
        /// <summary>
        /// This permission is required to call the DeleteService function to delete the service.
        /// </summary>
        public EntityItemBoolType standard_delete {
            get {
                return this.standard_deleteField;
            }
            set {
                this.standard_deleteField = value;
            }
        }
        
        /// <summary>
        /// This permission is required to call the QueryServiceObjectSecurity function to query the security descriptor of the service object.
        /// </summary>
        public EntityItemBoolType standard_read_control {
            get {
                return this.standard_read_controlField;
            }
            set {
                this.standard_read_controlField = value;
            }
        }
        
        /// <summary>
        /// This permission is required to call the SetServiceObjectSecurity function to modify the Dacl member of the service object's security descriptor.
        /// </summary>
        public EntityItemBoolType standard_write_dac {
            get {
                return this.standard_write_dacField;
            }
            set {
                this.standard_write_dacField = value;
            }
        }
        
        /// <summary>
        /// This permission is required to call the SetServiceObjectSecurity function to modify the Owner and Group members of the service object's security descriptor.
        /// </summary>
        public EntityItemBoolType standard_write_owner {
            get {
                return this.standard_write_ownerField;
            }
            set {
                this.standard_write_ownerField = value;
            }
        }
        
        /// <summary>
        /// Read access (STANDARD_RIGHTS_READ, SERVICE_QUERY_CONFIG, SERVICE_QUERY_STATUS, SERVICE_INTERROGATE, SERVICE_ENUMERATE_DEPENDENTS).
        /// </summary>
        public EntityItemBoolType generic_read {
            get {
                return this.generic_readField;
            }
            set {
                this.generic_readField = value;
            }
        }
        
        /// <summary>
        /// Write access (STANDARD_RIGHTS_WRITE, SERVICE_CHANGE_CONFIG).
        /// </summary>
        public EntityItemBoolType generic_write {
            get {
                return this.generic_writeField;
            }
            set {
                this.generic_writeField = value;
            }
        }
        
        /// <summary>
        /// Execute access (STANDARD_RIGHTS_EXECUTE, SERVICE_START, SERVICE_STOP, SERVICE_PAUSE_CONTINUE, SERVICE_USER_DEFINED_CONTROL).
        /// </summary>
        public EntityItemBoolType generic_execute {
            get {
                return this.generic_executeField;
            }
            set {
                this.generic_executeField = value;
            }
        }
        
        /// <summary>
        /// This permission is required to call the QueryServiceConfig and QueryServiceConfig2 functions to query the service configuration.
        /// </summary>
        public EntityItemBoolType service_query_conf {
            get {
                return this.service_query_confField;
            }
            set {
                this.service_query_confField = value;
            }
        }
        
        /// <summary>
        /// This permission is required to call the ChangeServiceConfig or ChangeServiceConfig2 function to change the service configuration.
        /// </summary>
        public EntityItemBoolType service_change_conf {
            get {
                return this.service_change_confField;
            }
            set {
                this.service_change_confField = value;
            }
        }
        
        /// <summary>
        /// This permission is required to call the QueryServiceStatusEx function to ask the service control manager about the status of the service.
        /// </summary>
        public EntityItemBoolType service_query_stat {
            get {
                return this.service_query_statField;
            }
            set {
                this.service_query_statField = value;
            }
        }
        
        /// <summary>
        /// This permission is required to call the EnumDependentServices function to enumerate all the services dependent on the service.
        /// </summary>
        public EntityItemBoolType service_enum_dependents {
            get {
                return this.service_enum_dependentsField;
            }
            set {
                this.service_enum_dependentsField = value;
            }
        }
        
        /// <summary>
        /// This permission is required to call the StartService function to start the service.
        /// </summary>
        public EntityItemBoolType service_start {
            get {
                return this.service_startField;
            }
            set {
                this.service_startField = value;
            }
        }
        
        /// <summary>
        /// This permission is required to call the ControlService function to stop the service.
        /// </summary>
        public EntityItemBoolType service_stop {
            get {
                return this.service_stopField;
            }
            set {
                this.service_stopField = value;
            }
        }
        
        /// <summary>
        /// This permission is required to call the ControlService function to pause or continue the service.
        /// </summary>
        public EntityItemBoolType service_pause {
            get {
                return this.service_pauseField;
            }
            set {
                this.service_pauseField = value;
            }
        }
        
        /// <summary>
        /// This permission is required to call the ControlService function to ask the service to report its status immediately.
        /// </summary>
        public EntityItemBoolType service_interrogate {
            get {
                return this.service_interrogateField;
            }
            set {
                this.service_interrogateField = value;
            }
        }
        
        /// <summary>
        /// This permission is required to call the ControlService function to specify a user-defined control code.
        /// </summary>
        public EntityItemBoolType service_user_defined {
            get {
                return this.service_user_definedField;
            }
            set {
                this.service_user_definedField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#windows")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#windows", IsNullable=false)]
    public partial class sharedresource_item : ItemType {
        
        private EntityItemStringType netnameField;
        
        private EntityItemSharedResourceTypeType shared_typeField;
        
        private EntityItemIntType max_usesField;
        
        private EntityItemIntType current_usesField;
        
        private EntityItemStringType local_pathField;
        
        private EntityItemBoolType access_read_permissionField;
        
        private EntityItemBoolType access_write_permissionField;
        
        private EntityItemBoolType access_create_permissionField;
        
        private EntityItemBoolType access_exec_permissionField;
        
        private EntityItemBoolType access_delete_permissionField;
        
        private EntityItemBoolType access_atrib_permissionField;
        
        private EntityItemBoolType access_perm_permissionField;
        
        private EntityItemBoolType access_all_permissionField;
        
        /// <summary>
        /// The share name of the resource.
        /// </summary>
        public EntityItemStringType netname {
            get {
                return this.netnameField;
            }
            set {
                this.netnameField = value;
            }
        }
        
        /// <summary>
        /// The type of the shared resource.
        /// </summary>
        public EntityItemSharedResourceTypeType shared_type {
            get {
                return this.shared_typeField;
            }
            set {
                this.shared_typeField = value;
            }
        }
        
        /// <summary>
        /// The maximum number of concurrent connections that the shared resource can accommodate.
        /// </summary>
        public EntityItemIntType max_uses {
            get {
                return this.max_usesField;
            }
            set {
                this.max_usesField = value;
            }
        }
        
        /// <summary>
        /// The number of current connections to the shared resource.
        /// </summary>
        public EntityItemIntType current_uses {
            get {
                return this.current_usesField;
            }
            set {
                this.current_usesField = value;
            }
        }
        
        /// <summary>
        /// The local path for the shared resource.
        /// </summary>
        public EntityItemStringType local_path {
            get {
                return this.local_pathField;
            }
            set {
                this.local_pathField = value;
            }
        }
        
        /// <summary>
        /// Permission to read data from a resource and, by default, to execute the resource.
        /// </summary>
        public EntityItemBoolType access_read_permission {
            get {
                return this.access_read_permissionField;
            }
            set {
                this.access_read_permissionField = value;
            }
        }
        
        /// <summary>
        /// Permission to write data to the resource.
        /// </summary>
        public EntityItemBoolType access_write_permission {
            get {
                return this.access_write_permissionField;
            }
            set {
                this.access_write_permissionField = value;
            }
        }
        
        /// <summary>
        /// Permission to create an instance of the resource (such as a file); data can be written to the resource as the resource is created.
        /// </summary>
        public EntityItemBoolType access_create_permission {
            get {
                return this.access_create_permissionField;
            }
            set {
                this.access_create_permissionField = value;
            }
        }
        
        /// <summary>
        /// Permission to execute the resource.
        /// </summary>
        public EntityItemBoolType access_exec_permission {
            get {
                return this.access_exec_permissionField;
            }
            set {
                this.access_exec_permissionField = value;
            }
        }
        
        /// <summary>
        /// Permission to delete the resource.
        /// </summary>
        public EntityItemBoolType access_delete_permission {
            get {
                return this.access_delete_permissionField;
            }
            set {
                this.access_delete_permissionField = value;
            }
        }
        
        /// <summary>
        /// Permission to modify the resource's attributes (such as the date and time when a file was last modified).
        /// </summary>
        public EntityItemBoolType access_atrib_permission {
            get {
                return this.access_atrib_permissionField;
            }
            set {
                this.access_atrib_permissionField = value;
            }
        }
        
        /// <summary>
        /// Permission to modify the permissions (read, write, create, execute, and delete) assigned to a resource for a user or application.
        /// </summary>
        public EntityItemBoolType access_perm_permission {
            get {
                return this.access_perm_permissionField;
            }
            set {
                this.access_perm_permissionField = value;
            }
        }
        
        /// <summary>
        /// Permission to read, write, create, execute, and delete resources, and to modify their attributes and permissions.
        /// </summary>
        public EntityItemBoolType access_all_permission {
            get {
                return this.access_all_permissionField;
            }
            set {
                this.access_all_permissionField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#windows")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#windows", IsNullable=false)]
    public partial class sid_item : ItemType {
        
        private EntityItemStringType trustee_nameField;
        
        private EntityItemStringType trustee_sidField;
        
        private EntityItemStringType trustee_domainField;
        
        /// <summary>
        /// This element specifies the trustee name associated with a particular SID. In Windows, trustee names are case-insensitive. As a result, it is recommended that the case-insensitive operations are used for this entity. In a domain environment, trustee names should be identified in the form: "domain\trustee name". For local trustee names use: "computer name\trustee name". For built-in accounts on the system, use the trustee name without a domain.
        /// </summary>
        public EntityItemStringType trustee_name {
            get {
                return this.trustee_nameField;
            }
            set {
                this.trustee_nameField = value;
            }
        }
        
        /// <summary>
        /// The security identifier (SID) of the specified trustee name.
        /// </summary>
        public EntityItemStringType trustee_sid {
            get {
                return this.trustee_sidField;
            }
            set {
                this.trustee_sidField = value;
            }
        }
        
        /// <summary>
        /// The domain of the specified trustee name.
        /// </summary>
        public EntityItemStringType trustee_domain {
            get {
                return this.trustee_domainField;
            }
            set {
                this.trustee_domainField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#windows")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#windows", IsNullable=false)]
    public partial class sid_sid_item : ItemType {
        
        private EntityItemStringType trustee_sidField;
        
        private EntityItemStringType trustee_nameField;
        
        private EntityItemStringType trustee_domainField;
        
        /// <summary>
        /// The security identifier (SID) of the specified trustee name.
        /// </summary>
        public EntityItemStringType trustee_sid {
            get {
                return this.trustee_sidField;
            }
            set {
                this.trustee_sidField = value;
            }
        }
        
        /// <summary>
        /// This element specifies the trustee name associated with a particular SID. In Windows, trustee names are case-insensitive. As a result, it is recommended that the case-insensitive operations are used for this entity. In a domain environment, trustee names should be identified in the form: "domain\trustee name". For local trustee names use: "computer name\trustee name". For built-in accounts on the system, use the trustee name without a domain.
        /// </summary>
        public EntityItemStringType trustee_name {
            get {
                return this.trustee_nameField;
            }
            set {
                this.trustee_nameField = value;
            }
        }
        
        /// <summary>
        /// The domain of the specified trustee name.
        /// </summary>
        public EntityItemStringType trustee_domain {
            get {
                return this.trustee_domainField;
            }
            set {
                this.trustee_domainField = value;
            }
        }
    }
    
    /// <summary>
    /// The uac_item is used to hold information about settings related to User Access Control within Windows.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#windows")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#windows", IsNullable=false)]
    public partial class uac_item : ItemType {
        
        private EntityItemBoolType admin_approval_modeField;
        
        private EntityItemStringType elevation_prompt_adminField;
        
        private EntityItemStringType elevation_prompt_standardField;
        
        private EntityItemBoolType detect_installationsField;
        
        private EntityItemBoolType elevate_signed_executablesField;
        
        private EntityItemBoolType elevate_uiaccessField;
        
        private EntityItemBoolType run_admins_aamField;
        
        private EntityItemBoolType secure_desktopField;
        
        private EntityItemBoolType virtualize_write_failuresField;
        
        /// <summary>
        /// Admin Approval Mode for the Built-in Administrator account.
        /// </summary>
        public EntityItemBoolType admin_approval_mode {
            get {
                return this.admin_approval_modeField;
            }
            set {
                this.admin_approval_modeField = value;
            }
        }
        
        /// <summary>
        /// Behavior of the elevation prompt for administrators in Admin Approval Mode.
        /// </summary>
        public EntityItemStringType elevation_prompt_admin {
            get {
                return this.elevation_prompt_adminField;
            }
            set {
                this.elevation_prompt_adminField = value;
            }
        }
        
        /// <summary>
        /// Behavior of the elevation prompt for standard users.
        /// </summary>
        public EntityItemStringType elevation_prompt_standard {
            get {
                return this.elevation_prompt_standardField;
            }
            set {
                this.elevation_prompt_standardField = value;
            }
        }
        
        /// <summary>
        /// Detect application installations and prompt for elevation.
        /// </summary>
        public EntityItemBoolType detect_installations {
            get {
                return this.detect_installationsField;
            }
            set {
                this.detect_installationsField = value;
            }
        }
        
        /// <summary>
        /// Only elevate executables that are signed and validated.
        /// </summary>
        public EntityItemBoolType elevate_signed_executables {
            get {
                return this.elevate_signed_executablesField;
            }
            set {
                this.elevate_signed_executablesField = value;
            }
        }
        
        /// <summary>
        /// Only elevate UIAccess applications that are installed in secure locations.
        /// </summary>
        public EntityItemBoolType elevate_uiaccess {
            get {
                return this.elevate_uiaccessField;
            }
            set {
                this.elevate_uiaccessField = value;
            }
        }
        
        /// <summary>
        /// Run all administrators in Admin Approval Mode.
        /// </summary>
        public EntityItemBoolType run_admins_aam {
            get {
                return this.run_admins_aamField;
            }
            set {
                this.run_admins_aamField = value;
            }
        }
        
        /// <summary>
        /// Switch to the secure desktop when prompting for elevation.
        /// </summary>
        public EntityItemBoolType secure_desktop {
            get {
                return this.secure_desktopField;
            }
            set {
                this.secure_desktopField = value;
            }
        }
        
        /// <summary>
        /// Virtualize file and registry write failures to per-user locations.
        /// </summary>
        public EntityItemBoolType virtualize_write_failures {
            get {
                return this.virtualize_write_failuresField;
            }
            set {
                this.virtualize_write_failuresField = value;
            }
        }
    }
    
    /// <summary>
    /// The windows user_item allows the different groups (identified by name) that a user belongs to be collected.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#windows")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#windows", IsNullable=false)]
    public partial class user_item : ItemType {
        
        private EntityItemStringType userField;
        
        private EntityItemBoolType enabledField;
        
        private EntityItemStringType[] groupField;
        
        /// <summary>
        /// A string the represents the name of a particular user. In Windows, user names are case-insensitive. As a result, it is recommended that the case-insensitive operations are used for this entity. In a domain environment, users should be identified in the form: "domain\user name". For local users use: "computer_name\user_name". For built-in accounts on the system, use the user name without a domain.
        /// </summary>
        public EntityItemStringType user {
            get {
                return this.userField;
            }
            set {
                this.userField = value;
            }
        }
        
        /// <summary>
        /// A boolean that represents whether the particular user is enabled or not.
        /// </summary>
        public EntityItemBoolType enabled {
            get {
                return this.enabledField;
            }
            set {
                this.enabledField = value;
            }
        }
        
        /// <summary>
        /// If the specified user belongs to more than one group, then multiple group elements should exist. If the specified user is not a member of a single group, then a single group element should exist with a status of 'does not exist'. If there is an error determining the groups that the user belongs to, then a single group element should be included with a status of 'error'.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("group")]
        public EntityItemStringType[] group {
            get {
                return this.groupField;
            }
            set {
                this.groupField = value;
            }
        }
    }
    
    /// <summary>
    /// The windows user_sid_item allows the different groups (identified by SID) that a user belongs to be collected.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#windows")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#windows", IsNullable=false)]
    public partial class user_sid_item : ItemType {
        
        private EntityItemStringType user_sidField;
        
        private EntityItemBoolType enabledField;
        
        private EntityItemStringType[] group_sidField;
        
        /// <summary>
        /// A string the represents the SID of a particular user.
        /// </summary>
        public EntityItemStringType user_sid {
            get {
                return this.user_sidField;
            }
            set {
                this.user_sidField = value;
            }
        }
        
        /// <summary>
        /// A boolean that represents whether the particular user is enabled or not.
        /// </summary>
        public EntityItemBoolType enabled {
            get {
                return this.enabledField;
            }
            set {
                this.enabledField = value;
            }
        }
        
        /// <summary>
        /// A string that represents the SID of a particular group.  If the specified user belongs to more than one group, then multiple group_sid elements should exist. If the specified user is not a member of a single group, then a single group_sid element should exist with a status of 'does not exist'. If there is an error determining the groups that the user belongs to, then a single group_sid element should be included with a status of 'error'.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("group_sid")]
        public EntityItemStringType[] group_sid {
            get {
                return this.group_sidField;
            }
            set {
                this.group_sidField = value;
            }
        }
    }
    
    /// <summary>
    /// The volume item enumerates various attributes about a particular volume mounted to a machine. This includes the various system flags returned by GetVolumeInformation(). It is important to note that these system flags are specific to certain versions of Windows.  As a result, the documentation for that version of Windows should be consulted for more information.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#windows")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#windows", IsNullable=false)]
    public partial class volume_item : ItemType {
        
        private EntityItemStringType rootpathField;
        
        private EntityItemStringType file_systemField;
        
        private EntityItemStringType nameField;
        
        private EntityItemDriveTypeType drive_typeField;
        
        private EntityItemIntType volume_max_component_lengthField;
        
        private EntityItemIntType serial_numberField;
        
        private EntityItemBoolType file_case_sensitive_searchField;
        
        private EntityItemBoolType file_case_preserved_namesField;
        
        private EntityItemBoolType file_unicode_on_diskField;
        
        private EntityItemBoolType file_persistent_aclsField;
        
        private EntityItemBoolType file_file_compressionField;
        
        private EntityItemBoolType file_volume_quotasField;
        
        private EntityItemBoolType file_supports_sparse_filesField;
        
        private EntityItemBoolType file_supports_reparse_pointsField;
        
        private EntityItemBoolType file_supports_remote_storageField;
        
        private EntityItemBoolType file_volume_is_compressedField;
        
        private EntityItemBoolType file_supports_object_idsField;
        
        private EntityItemBoolType file_supports_encryptionField;
        
        private EntityItemBoolType file_named_streamsField;
        
        private EntityItemBoolType file_read_only_volumeField;
        
        /// <summary>
        /// A string that contains the root directory of the volume to be described. A trailing backslash is required. For example, you would specify \\MyServer\MyShare as "\\MyServer\MyShare\", or the C drive as "C:\".
        /// </summary>
        public EntityItemStringType rootpath {
            get {
                return this.rootpathField;
            }
            set {
                this.rootpathField = value;
            }
        }
        
        /// <summary>
        /// The type of filesystem. For example FAT or NTFS.
        /// </summary>
        public EntityItemStringType file_system {
            get {
                return this.file_systemField;
            }
            set {
                this.file_systemField = value;
            }
        }
        
        /// <summary>
        /// The name of the volume.
        /// </summary>
        public EntityItemStringType name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <summary>
        /// The drive type of the volume.
        /// </summary>
        public EntityItemDriveTypeType drive_type {
            get {
                return this.drive_typeField;
            }
            set {
                this.drive_typeField = value;
            }
        }
        
        /// <summary>
        /// The volume_max_component_length element specifies the maximum length, in TCHARs, of a file name component that a specified file system supports. A file name component is the portion of a file name between backslashes. The value that is stored in the variable that *lpMaximumComponentLength points to is used to indicate that a specified file system supports long names. For example, for a FAT file system that supports long names, the function stores the value 255, rather than the previous 8.3 indicator. Long names can also be supported on systems that use the NTFS file system.
        /// </summary>
        public EntityItemIntType volume_max_component_length {
            get {
                return this.volume_max_component_lengthField;
            }
            set {
                this.volume_max_component_lengthField = value;
            }
        }
        
        /// <summary>
        /// The volume serial number.
        /// </summary>
        public EntityItemIntType serial_number {
            get {
                return this.serial_numberField;
            }
            set {
                this.serial_numberField = value;
            }
        }
        
        /// <summary>
        /// The file system supports case-sensitive file names.
        /// </summary>
        public EntityItemBoolType file_case_sensitive_search {
            get {
                return this.file_case_sensitive_searchField;
            }
            set {
                this.file_case_sensitive_searchField = value;
            }
        }
        
        /// <summary>
        /// The file system preserves the case of file names when it places a name on disk.
        /// </summary>
        public EntityItemBoolType file_case_preserved_names {
            get {
                return this.file_case_preserved_namesField;
            }
            set {
                this.file_case_preserved_namesField = value;
            }
        }
        
        /// <summary>
        /// The file system supports Unicode in file names as they appear on disk.
        /// </summary>
        public EntityItemBoolType file_unicode_on_disk {
            get {
                return this.file_unicode_on_diskField;
            }
            set {
                this.file_unicode_on_diskField = value;
            }
        }
        
        /// <summary>
        /// The file system preserves and enforces ACLs. For example, NTFS preserves and enforces ACLs, and FAT does not.
        /// </summary>
        public EntityItemBoolType file_persistent_acls {
            get {
                return this.file_persistent_aclsField;
            }
            set {
                this.file_persistent_aclsField = value;
            }
        }
        
        /// <summary>
        /// The file system supports file-based compression.
        /// </summary>
        public EntityItemBoolType file_file_compression {
            get {
                return this.file_file_compressionField;
            }
            set {
                this.file_file_compressionField = value;
            }
        }
        
        /// <summary>
        /// The file system supports disk quotas.
        /// </summary>
        public EntityItemBoolType file_volume_quotas {
            get {
                return this.file_volume_quotasField;
            }
            set {
                this.file_volume_quotasField = value;
            }
        }
        
        /// <summary>
        /// The file system supports sparse files.
        /// </summary>
        public EntityItemBoolType file_supports_sparse_files {
            get {
                return this.file_supports_sparse_filesField;
            }
            set {
                this.file_supports_sparse_filesField = value;
            }
        }
        
        /// <summary>
        /// The file system supports reparse points.
        /// </summary>
        public EntityItemBoolType file_supports_reparse_points {
            get {
                return this.file_supports_reparse_pointsField;
            }
            set {
                this.file_supports_reparse_pointsField = value;
            }
        }
        
        /// <summary>
        /// The specified volume is a compressed volume; for example, a DoubleSpace volume.
        /// </summary>
        public EntityItemBoolType file_supports_remote_storage {
            get {
                return this.file_supports_remote_storageField;
            }
            set {
                this.file_supports_remote_storageField = value;
            }
        }
        
        /// <summary>
        /// The specified volume is a compressed volume; for example, a DoubleSpace volume.
        /// </summary>
        public EntityItemBoolType file_volume_is_compressed {
            get {
                return this.file_volume_is_compressedField;
            }
            set {
                this.file_volume_is_compressedField = value;
            }
        }
        
        /// <summary>
        /// The file system supports object identifiers.
        /// </summary>
        public EntityItemBoolType file_supports_object_ids {
            get {
                return this.file_supports_object_idsField;
            }
            set {
                this.file_supports_object_idsField = value;
            }
        }
        
        /// <summary>
        /// The file system supports the Encrypted File System (EFS).
        /// </summary>
        public EntityItemBoolType file_supports_encryption {
            get {
                return this.file_supports_encryptionField;
            }
            set {
                this.file_supports_encryptionField = value;
            }
        }
        
        /// <summary>
        /// The file system supports named streams.
        /// </summary>
        public EntityItemBoolType file_named_streams {
            get {
                return this.file_named_streamsField;
            }
            set {
                this.file_named_streamsField = value;
            }
        }
        
        /// <summary>
        /// The specified volume is read-only.
        /// </summary>
        public EntityItemBoolType file_read_only_volume {
            get {
                return this.file_read_only_volumeField;
            }
            set {
                this.file_read_only_volumeField = value;
            }
        }
    }
    
    /// <summary>
    /// The wmi_item outlines information to be checked through Microsoft's WMI interface.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#windows")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#windows", IsNullable=false)]
    public partial class wmi_item : ItemType {
        
        private EntityItemStringType namespaceField;
        
        private EntityItemStringType wqlField;
        
        private EntityItemAnySimpleType[] resultField;
        
        /// <summary>
        /// The WMI namespaces of the specific object.
        /// </summary>
        public EntityItemStringType @namespace {
            get {
                return this.namespaceField;
            }
            set {
                this.namespaceField = value;
            }
        }
        
        /// <summary>
        /// A WQL query used to identify the object(s) specified. Any valid WQL query is allowed with one exception, at most one field is allowed in the SELECT portion of the query. For example SELECT name FROM ... is valid, as is SELECT 'true' FROM ..., but SELECT name, number FROM ... is not valid. This is because the result element in the data section is only designed to work against a single field.
        /// </summary>
        public EntityItemStringType wql {
            get {
                return this.wqlField;
            }
            set {
                this.wqlField = value;
            }
        }
        
        /// <summary>
        /// The result element specifies how to test objects in the result set of the specified WQL statement. Only one comparable field is allowed. So if the WQL statement look like 'SELECT name FROM ...', then a result element with a value of 'Fred' would test that value against the names returned by the WQL statement. If the WQL statement returns more than one instance of the specified field, then multiple result elements should exist to describe each instance.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("result")]
        public EntityItemAnySimpleType[] result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
    }
    
    /// <summary>
    /// The wmi57_item outlines information to be checked through Microsoft's WMI interface.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#windows")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#windows", IsNullable=false)]
    public partial class wmi57_item : ItemType {
        
        private EntityItemStringType namespaceField;
        
        private EntityItemStringType wqlField;
        
        private EntityItemRecordType[] resultField;
        
        /// <summary>
        /// The WMI namespaces of the specific object.
        /// </summary>
        public EntityItemStringType @namespace {
            get {
                return this.namespaceField;
            }
            set {
                this.namespaceField = value;
            }
        }
        
        /// <summary>
        /// A WQL query used to identify the object(s) specified. Any valid WQL query is allowed with one exception, all fields must be named. For example SELECT name, age FROM ... is valid, but SELECT * FROM ... is not valid. This is because the record entity supports only named fields.
        /// </summary>
        public EntityItemStringType wql {
            get {
                return this.wqlField;
            }
            set {
                this.wqlField = value;
            }
        }
        
        /// <summary>
        /// The result entity holds the results of the specified WQL statement.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("result")]
        public EntityItemRecordType[] result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
    }
    
    /// <summary>
    /// The wuaupdatesearcher_item outlines information defined through the Search method of the IUpdateSearcher interface as part of Microsoft's WUA (Windows Update Agent) API.  This information is related to the current patch level in a Windows environment.  The test extends the standard ItemType as defined in the oval-system-characteristics schema and one should refer to the ItemType description for more information.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#windows")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#windows", IsNullable=false)]
    public partial class wuaupdatesearcher_item : ItemType {
        
        private EntityItemStringType search_criteriaField;
        
        private EntityItemStringType[] update_idField;
        
        public EntityItemStringType search_criteria {
            get {
                return this.search_criteriaField;
            }
            set {
                this.search_criteriaField = value;
            }
        }
        
        /// <summary>
        /// The update_id entity specifies a string that represents a revision-independent identifier of an update.  This information is part of the IUpdateIdentity interface that is part of the result of the IUpdateSearcher interface's Search method.  Note that multiple update identifiers can be associated with a give search criteria and thus multiple entities can exist for this item.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("update_id")]
        public EntityItemStringType[] update_id {
            get {
                return this.update_idField;
            }
            set {
                this.update_idField = value;
            }
        }
    }
}
