// ------------------------------------------------------------------------------
//  <auto-generated>
//    Generated by Xsd2Code. Version 3.5.0.14890
//    <NameSpace>Modulo.Collect.OVAL.Definitions.Linux</NameSpace><Collection>Array</Collection><codeType>CSharp</codeType><EnableDataBinding>False</EnableDataBinding><EnableLazyLoading>False</EnableLazyLoading><TrackingChangesEnable>False</TrackingChangesEnable><GenTrackingClasses>False</GenTrackingClasses><HidePrivateFieldInIDE>False</HidePrivateFieldInIDE><EnableSummaryComment>True</EnableSummaryComment><VirtualProp>False</VirtualProp><IncludeSerializeMethod>False</IncludeSerializeMethod><UseBaseClass>False</UseBaseClass><GenBaseClass>False</GenBaseClass><GenerateCloneMethod>False</GenerateCloneMethod><GenerateDataContracts>False</GenerateDataContracts><CodeBaseTag>Net20</CodeBaseTag><SerializeMethodName>Serialize</SerializeMethodName><DeserializeMethodName>Deserialize</DeserializeMethodName><SaveToFileMethodName>SaveToFile</SaveToFileMethodName><LoadFromFileMethodName>LoadFromFile</LoadFromFileMethodName><GenerateXMLAttributes>True</GenerateXMLAttributes><OrderXMLAttrib>False</OrderXMLAttrib><EnableEncoding>False</EnableEncoding><AutomaticProperties>False</AutomaticProperties><GenerateShouldSerialize>False</GenerateShouldSerialize><DisableDebug>False</DisableDebug><PropNameSpecified>Default</PropNameSpecified><Encoder>UTF8</Encoder><CustomUsings>Modulo.Collect.OVAL.Common;Modulo.Collect.OVAL.Definitions</CustomUsings><ExcludeIncludedTypes>True</ExcludeIncludedTypes><EnableInitializeFields>False</EnableInitializeFields>
//  </auto-generated>
// ------------------------------------------------------------------------------
namespace Modulo.Collect.OVAL.Definitions.Linux {
    using System;
    using System.Diagnostics;
    using System.Xml.Serialization;
    using System.Collections;
    using System.Xml.Schema;
    using System.ComponentModel;
    using Modulo.Collect.OVAL.Common;
    using Modulo.Collect.OVAL.Definitions;
    
    
    /// <summary>
    /// The dpkginfo test is used to check information for a given DPKG package. It extends the standard TestType as defined in the oval-definitions-schema and one should refer to the TestType description for more information. The required object element references a dpkginfo_object and the optional state element specifies the data to check.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5#linux")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5#linux", IsNullable=false)]
    public partial class dpkginfo_test : TestType {
        
        private ObjectRefType objectField;
        
        private StateRefType[] stateField;
        
        public ObjectRefType @object {
            get {
                return this.objectField;
            }
            set {
                this.objectField = value;
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("state")]
        public StateRefType[] state {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
    }
    
    /// <summary>
    /// A dpkginfo object consists of a single name entity that identifies the package being checked.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5#linux")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5#linux", IsNullable=false)]
    public partial class dpkginfo_object : ObjectType {
        
        private object[] itemsField;
        
        [System.Xml.Serialization.XmlElementAttribute("name", typeof(EntityObjectStringType))]
        [System.Xml.Serialization.XmlElementAttribute("filter", typeof(filter), Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5")]
        [System.Xml.Serialization.XmlElementAttribute("set", typeof(set), Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5#linux")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5#linux", IsNullable=true)]
    public partial class EntityStateProtocolType : EntityStateStringType {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5#linux")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5#linux", IsNullable=true)]
    public partial class EntityStateRpmVerifyResultType : EntityStateStringType {
    }
    
    /// <summary>
    /// The dpkginfo_state element defines the different information that can be used to evaluate the specified DPKG package. This includes the architecture, epoch number, release, and version numbers. Please refer to the individual elements in the schema for more details about what each represents.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5#linux")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5#linux", IsNullable=false)]
    public partial class dpkginfo_state : StateType {
        
        private EntityStateStringType nameField;
        
        private EntityStateStringType archField;
        
        private dpkginfo_stateEpoch epochField;
        
        private dpkginfo_stateRelease releaseField;
        
        private dpkginfo_stateVersion version1Field;
        
        private EntityStateEVRStringType evrField;
        
        /// <summary>
        /// This is the DPKG package name to check.
        /// </summary>
        public EntityStateStringType name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <summary>
        /// This is the architecture for which the package was built, like : i386, ppc, sparc, noarch.
        /// </summary>
        public EntityStateStringType arch {
            get {
                return this.archField;
            }
            set {
                this.archField = value;
            }
        }
        
        /// <summary>
        /// This is the epoch number of the DPKG. For a null epoch (or '(none)' as returned by dpkg) the string '(none)' should be used.
        /// </summary>
        public dpkginfo_stateEpoch epoch {
            get {
                return this.epochField;
            }
            set {
                this.epochField = value;
            }
        }
        
        /// <summary>
        /// This is the release number of the build, changed by the vendor/builder.
        /// </summary>
        public dpkginfo_stateRelease release {
            get {
                return this.releaseField;
            }
            set {
                this.releaseField = value;
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("version")]
        public dpkginfo_stateVersion version1 {
            get {
                return this.version1Field;
            }
            set {
                this.version1Field = value;
            }
        }
        
        /// <summary>
        /// This represents the epoch, version, and release fields as a single version string. It has the form "EPOCH:VERSION-RELEASE".
        /// </summary>
        public EntityStateEVRStringType evr {
            get {
                return this.evrField;
            }
            set {
                this.evrField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5#linux")]
    public partial class dpkginfo_stateEpoch : EntityStateAnySimpleType {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5#linux")]
    public partial class dpkginfo_stateRelease : EntityStateAnySimpleType {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5#linux")]
    public partial class dpkginfo_stateVersion : EntityStateAnySimpleType {
    }
    
    /// <summary>
    /// The iflisteners_test is used to check what applications such as packet sniffers that are bound to an interface on the system. This is limited to applications that are listening on AF_PACKET sockets. Furthermore, only applications bound to an ethernet interface should be collected. It extends the standard TestType as defined in the oval-definitions-schema and one should refer to the TestType description for more information. The required object element references an iflisteners_object and the optional iflisteners_state element specifies the data to check.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5#linux")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5#linux", IsNullable=false)]
    public partial class iflisteners_test : TestType {
        
        private ObjectRefType objectField;
        
        private StateRefType[] stateField;
        
        public ObjectRefType @object {
            get {
                return this.objectField;
            }
            set {
                this.objectField = value;
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("state")]
        public StateRefType[] state {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
    }
    
    /// <summary>
    /// The iflisteners_object element is used by an iflisteners_test to define the specific interface to be evaluated. Each object extends the standard ObjectType as defined in the oval-definitions-schema and one should refer to the ObjectType description for more information. The common set element allows complex objects to be created using filters and set logic. Again, please refer to the description of the set element in the oval-definitions-schema.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5#linux")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5#linux", IsNullable=false)]
    public partial class iflisteners_object : ObjectType {
        
        private object[] itemsField;
        
        [System.Xml.Serialization.XmlElementAttribute("interface_name", typeof(EntityObjectStringType))]
        [System.Xml.Serialization.XmlElementAttribute("filter", typeof(filter), Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5")]
        [System.Xml.Serialization.XmlElementAttribute("set", typeof(set), Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
    }
    
    /// <summary>
    /// The iflisteners_state element defines the different information that can be used to evaluate the specified applications that are listening on interfaces on the system. This includes the interface name, protocol, hardware address, program name, pid, and user id. Please refer to the individual elements in the schema for more details about what each represents.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5#linux")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5#linux", IsNullable=false)]
    public partial class iflisteners_state : StateType {
        
        private EntityStateStringType interface_nameField;
        
        private EntityStateProtocolType protocolField;
        
        private EntityStateStringType hw_addressField;
        
        private EntityStateStringType program_nameField;
        
        private EntityStateIntType pidField;
        
        private EntityStateIntType user_idField;
        
        /// <summary>
        /// This is the name of the interface (eth0, eth1, fw0, etc.).
        /// </summary>
        public EntityStateStringType interface_name {
            get {
                return this.interface_nameField;
            }
            set {
                this.interface_nameField = value;
            }
        }
        
        /// <summary>
        /// This is the physical layer protocol used by the AF_PACKET socket.
        /// </summary>
        public EntityStateProtocolType protocol {
            get {
                return this.protocolField;
            }
            set {
                this.protocolField = value;
            }
        }
        
        /// <summary>
        /// This is the hardware address associated with the interface.
        /// </summary>
        public EntityStateStringType hw_address {
            get {
                return this.hw_addressField;
            }
            set {
                this.hw_addressField = value;
            }
        }
        
        /// <summary>
        /// This is the name of the communicating program.
        /// </summary>
        public EntityStateStringType program_name {
            get {
                return this.program_nameField;
            }
            set {
                this.program_nameField = value;
            }
        }
        
        /// <summary>
        /// The pid is the process ID of a specific process.
        /// </summary>
        public EntityStateIntType pid {
            get {
                return this.pidField;
            }
            set {
                this.pidField = value;
            }
        }
        
        /// <summary>
        /// The numeric user id, or uid, is the third column of each user's entry in /etc/passwd. It represents the owner, and thus privilege level, of the specified program.
        /// </summary>
        public EntityStateIntType user_id {
            get {
                return this.user_idField;
            }
            set {
                this.user_idField = value;
            }
        }
    }
    
    /// <summary>
    /// The inet listening servers test is used to check what applications are listening on the network.  This is limited to applications that are listening for connections that use the TCP or UDP protocols and have addresses represented as IPv4 or IPv6 addresses (AF_INET or AF_INET6). It is generally using the parsed output of running the command netstat -tuwlnpe with root privilege. It extends the standard TestType as defined in the oval-definitions-schema and one should refer to the TestType description for more information. The required object element references an inetlisteningservers_object and the optional state element specifies the data to check.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5#linux")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5#linux", IsNullable=false)]
    public partial class inetlisteningservers_test : TestType {
        
        private ObjectRefType objectField;
        
        private StateRefType[] stateField;
        
        public ObjectRefType @object {
            get {
                return this.objectField;
            }
            set {
                this.objectField = value;
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("state")]
        public StateRefType[] state {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
    }
    
    /// <summary>
    /// An inet listening servers object consists of three entities. The first identifies a specific IP address. The second entity represents a certain port number. While the third identifies the protocol.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5#linux")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5#linux", IsNullable=false)]
    public partial class inetlisteningservers_object : ObjectType {
        
        private object[] itemsField;
        
        [System.Xml.Serialization.XmlElementAttribute("local_address", typeof(EntityObjectIPAddressStringType))]
        [System.Xml.Serialization.XmlElementAttribute("local_port", typeof(EntityObjectIntType))]
        [System.Xml.Serialization.XmlElementAttribute("protocol", typeof(EntityObjectStringType))]
        [System.Xml.Serialization.XmlElementAttribute("filter", typeof(filter), Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5")]
        [System.Xml.Serialization.XmlElementAttribute("set", typeof(set), Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
    }
    
    /// <summary>
    /// The inetlisteningservers_state element defines the different information that can be used to evaluate the specified inet listening server. This includes the local address, foreign address, port information, and process id. Please refer to the individual elements in the schema for more details about what each represents.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5#linux")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5#linux", IsNullable=false)]
    public partial class inetlisteningservers_state : StateType {
        
        private EntityStateStringType protocolField;
        
        private EntityStateIPAddressStringType local_addressField;
        
        private EntityStateIntType local_portField;
        
        private EntityStateStringType local_full_addressField;
        
        private EntityStateStringType program_nameField;
        
        private EntityStateIPAddressStringType foreign_addressField;
        
        private EntityStateIntType foreign_portField;
        
        private EntityStateStringType foreign_full_addressField;
        
        private EntityStateIntType pidField;
        
        private EntityStateIntType user_idField;
        
        /// <summary>
        /// The protocol entity defines the specific transport-layer protocol, in lowercase: tcp or udp, associated with the inet listening server.
        /// </summary>
        public EntityStateStringType protocol {
            get {
                return this.protocolField;
            }
            set {
                this.protocolField = value;
            }
        }
        
        /// <summary>
        /// This is the IP address of the network interface on which the program listens. Note that the IP address can be IPv4 or IPv6.
        /// </summary>
        public EntityStateIPAddressStringType local_address {
            get {
                return this.local_addressField;
            }
            set {
                this.local_addressField = value;
            }
        }
        
        /// <summary>
        /// This is the TCP or UDP port number associated with the inet listening server.
        /// </summary>
        public EntityStateIntType local_port {
            get {
                return this.local_portField;
            }
            set {
                this.local_portField = value;
            }
        }
        
        /// <summary>
        /// This is the IP address and network port number associated with the inet listening server, equivalent to local_address:local_port. Note that the IP address can be IPv4 or IPv6.
        /// </summary>
        public EntityStateStringType local_full_address {
            get {
                return this.local_full_addressField;
            }
            set {
                this.local_full_addressField = value;
            }
        }
        
        /// <summary>
        /// This is the name of the communicating program.
        /// </summary>
        public EntityStateStringType program_name {
            get {
                return this.program_nameField;
            }
            set {
                this.program_nameField = value;
            }
        }
        
        /// <summary>
        /// This is the IP address with which the program is communicating, or with which it will communicate, in the case of a listening server. Note that the IP address can be IPv4 or IPv6.
        /// </summary>
        public EntityStateIPAddressStringType foreign_address {
            get {
                return this.foreign_addressField;
            }
            set {
                this.foreign_addressField = value;
            }
        }
        
        /// <summary>
        /// This is the TCP or UDP port to which the program communicates. In the case of a listening program accepting new connections, this is usually a *.
        /// </summary>
        public EntityStateIntType foreign_port {
            get {
                return this.foreign_portField;
            }
            set {
                this.foreign_portField = value;
            }
        }
        
        /// <summary>
        /// This is the IP address and network port to which the program is communicating or will accept communications from, equivalent to foreign_address:foreign_port. Note that the IP address can be IPv4 or IPv6.
        /// </summary>
        public EntityStateStringType foreign_full_address {
            get {
                return this.foreign_full_addressField;
            }
            set {
                this.foreign_full_addressField = value;
            }
        }
        
        /// <summary>
        /// The pid is the process ID of a specific process.
        /// </summary>
        public EntityStateIntType pid {
            get {
                return this.pidField;
            }
            set {
                this.pidField = value;
            }
        }
        
        /// <summary>
        /// The numeric user id, or uid, is the third column of each user's entry in /etc/passwd. It represents the owner, and thus privilege level, of the specified program.
        /// </summary>
        public EntityStateIntType user_id {
            get {
                return this.user_idField;
            }
            set {
                this.user_idField = value;
            }
        }
    }
    
    /// <summary>
    /// The partition_test is used to check the information associated with partitions on the local system. It extends the standard TestType as defined in the oval-definitions-schema and one should refer to the TestType description for more information. The required object element references a partition_object and the optional state element references a partition_state that specifies the information to check.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5#linux")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5#linux", IsNullable=false)]
    public partial class partition_test : TestType {
        
        private ObjectRefType objectField;
        
        private StateRefType[] stateField;
        
        public ObjectRefType @object {
            get {
                return this.objectField;
            }
            set {
                this.objectField = value;
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("state")]
        public StateRefType[] state {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
    }
    
    /// <summary>
    /// The partition_object is used by a partition_test to define which partitions on the local system should be collected. Each object extends the standard ObjectType as defined in the oval-definitions-schema and one should refer to the ObjectType description for more information. The common set element allows complex objects to be created using filters and set logic. Again, please refer to the description of the set element in the oval-definitions-schema.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5#linux")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5#linux", IsNullable=false)]
    public partial class partition_object : ObjectType {
        
        private object[] itemsField;
        
        [System.Xml.Serialization.XmlElementAttribute("mount_point", typeof(EntityObjectStringType))]
        [System.Xml.Serialization.XmlElementAttribute("filter", typeof(filter), Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5")]
        [System.Xml.Serialization.XmlElementAttribute("set", typeof(set), Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
    }
    
    /// <summary>
    /// The partition_state element defines the different information associated with a partition. This includes the name, filesystem type, mount options, total space, space used, and space left. Please refer to the individual elements in the schema for more details about what each represents.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5#linux")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5#linux", IsNullable=false)]
    public partial class partition_state : StateType {
        
        private EntityStateStringType mount_pointField;
        
        private EntityStateStringType deviceField;
        
        private EntityStateStringType uuidField;
        
        private EntityStateStringType fs_typeField;
        
        private EntityStateStringType mount_optionsField;
        
        private EntityStateIntType total_spaceField;
        
        private EntityStateIntType space_usedField;
        
        private EntityStateIntType space_leftField;
        
        /// <summary>
        /// The mount_point element contains a string that represents the mount point of a partition on the local system.
        /// </summary>
        public EntityStateStringType mount_point {
            get {
                return this.mount_pointField;
            }
            set {
                this.mount_pointField = value;
            }
        }
        
        /// <summary>
        /// The device element contains a string that represents the name of the device.
        /// </summary>
        public EntityStateStringType device {
            get {
                return this.deviceField;
            }
            set {
                this.deviceField = value;
            }
        }
        
        /// <summary>
        /// The uuid element contains a string that represents the universally unique identifier associated with a partition.
        /// </summary>
        public EntityStateStringType uuid {
            get {
                return this.uuidField;
            }
            set {
                this.uuidField = value;
            }
        }
        
        /// <summary>
        /// The fs_type element contains a string that represents the type of filesystem on a partition.
        /// </summary>
        public EntityStateStringType fs_type {
            get {
                return this.fs_typeField;
            }
            set {
                this.fs_typeField = value;
            }
        }
        
        /// <summary>
        /// The mount_options element contains a string that represents the mount options associated with a partition.
        /// </summary>
        public EntityStateStringType mount_options {
            get {
                return this.mount_optionsField;
            }
            set {
                this.mount_optionsField = value;
            }
        }
        
        /// <summary>
        /// The total_space element contains an integer that represents the total number of blocks on a partition.
        /// </summary>
        public EntityStateIntType total_space {
            get {
                return this.total_spaceField;
            }
            set {
                this.total_spaceField = value;
            }
        }
        
        /// <summary>
        /// The space_used element contains an integer that represents the number of blocks used on a partition.
        /// </summary>
        public EntityStateIntType space_used {
            get {
                return this.space_usedField;
            }
            set {
                this.space_usedField = value;
            }
        }
        
        /// <summary>
        /// The space_left element contains an integer that represents the number of blocks left on a partition.
        /// </summary>
        public EntityStateIntType space_left {
            get {
                return this.space_leftField;
            }
            set {
                this.space_leftField = value;
            }
        }
    }
    
    /// <summary>
    /// The rpminfo_test is used to check the RPM header information for a given RPM package. It extends the standard TestType as defined in the oval-definitions-schema and one should refer to the TestType description for more information. The required object element references a rpminfo_object and the optional state element specifies the data to check.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5#linux")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5#linux", IsNullable=false)]
    public partial class rpminfo_test : TestType {
        
        private ObjectRefType objectField;
        
        private StateRefType[] stateField;
        
        public ObjectRefType @object {
            get {
                return this.objectField;
            }
            set {
                this.objectField = value;
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("state")]
        public StateRefType[] state {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
    }
    
    /// <summary>
    /// A rpm info object consists of a single name entity that identifies the package being checked.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5#linux")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5#linux", IsNullable=false)]
    public partial class rpminfo_object : ObjectType {
        
        private object[] itemsField;
        
        [System.Xml.Serialization.XmlElementAttribute("behaviors", typeof(RpmInfoBehaviors))]
        [System.Xml.Serialization.XmlElementAttribute("name", typeof(EntityObjectStringType))]
        [System.Xml.Serialization.XmlElementAttribute("filter", typeof(filter), Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5")]
        [System.Xml.Serialization.XmlElementAttribute("set", typeof(set), Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5#linux")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5#linux", IsNullable=true)]
    public partial class RpmInfoBehaviors {
        
        private bool filepathsField;
        
        public RpmInfoBehaviors() {
            this.filepathsField = false;
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool filepaths {
            get {
                return this.filepathsField;
            }
            set {
                this.filepathsField = value;
            }
        }
    }
    
    /// <summary>
    /// The rpminfo_state element defines the different information that can be used to evaluate the specified rpm. This includes the architecture, epoch number, and version numbers. Most of this information can be obtained through the rpm function. Please refer to the individual elements in the schema for more details about what each represents.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5#linux")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5#linux", IsNullable=false)]
    public partial class rpminfo_state : StateType {
        
        private EntityStateStringType nameField;
        
        private EntityStateStringType archField;
        
        private rpminfo_stateEpoch epochField;
        
        private rpminfo_stateRelease releaseField;
        
        private rpminfo_stateVersion version1Field;
        
        private EntityStateEVRStringType evrField;
        
        private EntityStateStringType signature_keyidField;
        
        private EntityStateStringType extended_nameField;
        
        private EntityStateStringType filepathField;
        
        /// <summary>
        /// This is the package name to check.
        /// </summary>
        public EntityStateStringType name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <summary>
        /// This is the architecture for which the RPM was built, like : i386, ppc, sparc, noarch. In the case of an apache rpm named httpd-2.0.40-21.11.4.i686.rpm, this value would be i686.
        /// </summary>
        public EntityStateStringType arch {
            get {
                return this.archField;
            }
            set {
                this.archField = value;
            }
        }
        
        /// <summary>
        /// This is the epoch number of the RPM, this is used as a kludge for version-release comparisons where the vendor has done some kind of re-numbering or version forking. For a null epoch (or '(none)' as returned by rpm) the string '(none)' should be used.. This number is not revealed by a normal query of the RPM's information -- you must use a formatted rpm query command to gather this data from the command line, like so. For an already-installed RPM: rpm -q --qf '%{EPOCH}\n' installed_rpm For an RPM file that has not been installed: rpm -qp --qf '%{EPOCH}\n' rpm_file
        /// </summary>
        public rpminfo_stateEpoch epoch {
            get {
                return this.epochField;
            }
            set {
                this.epochField = value;
            }
        }
        
        /// <summary>
        /// This is the release number of the build, changed by the vendor/builder.
        /// </summary>
        public rpminfo_stateRelease release {
            get {
                return this.releaseField;
            }
            set {
                this.releaseField = value;
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("version")]
        public rpminfo_stateVersion version1 {
            get {
                return this.version1Field;
            }
            set {
                this.version1Field = value;
            }
        }
        
        /// <summary>
        /// This represents the epoch, version, and release fields as a single version string. It has the form "EPOCH:VERSION-RELEASE". Note that a null epoch (or '(none)' as returned by rpm) is equivalent to '0' and would hence have the form 0:VERSION-RELEASE. Comparisons involving this datatype should follow the algorithm of librpm's rpmvercmp() function.
        /// </summary>
        public EntityStateEVRStringType evr {
            get {
                return this.evrField;
            }
            set {
                this.evrField = value;
            }
        }
        
        /// <summary>
        /// This field contains the 64-bit PGP key ID that the RPM issuer (generally the original operating system vendor) uses to sign the key. Note that the value should NOT contain a hyphen to separate the higher 32-bits from the lower 32-bits. It should simply be a 16 character hex string. PGP is used to verify the authenticity and integrity of the RPM being considered. Software packages and patches are signed cryptographically to allow administrators to allay concerns that the distribution mechanism has been compromised, whether that mechanism is web site, FTP server, or even a mirror controlled by a hostile party. OVAL uses this field most of all to confirm that the package installed on the system is that shipped by the vendor, since comparing package version numbers against patch announcements is only programmatically valid if the installed package is known to contain the patched code.
        /// </summary>
        public EntityStateStringType signature_keyid {
            get {
                return this.signature_keyidField;
            }
            set {
                this.signature_keyidField = value;
            }
        }
        
        /// <summary>
        /// This represents the name, epoch, version, release, and architecture fields as a single version string. It has the form "NAME-EPOCH:VERSION-RELEASE.ARCHITECTURE". Note that a null epoch (or '(none)' as returned by rpm) is equivalent to '0' and would hence have the form NAME-0:VERSION-RELEASE.ARCHITECTURE.
        /// </summary>
        public EntityStateStringType extended_name {
            get {
                return this.extended_nameField;
            }
            set {
                this.extended_nameField = value;
            }
        }
        
        /// <summary>
        /// This field contains the absolute path of a file or directory included in the rpm.
        /// </summary>
        public EntityStateStringType filepath {
            get {
                return this.filepathField;
            }
            set {
                this.filepathField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5#linux")]
    public partial class rpminfo_stateEpoch : EntityStateAnySimpleType {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5#linux")]
    public partial class rpminfo_stateRelease : EntityStateAnySimpleType {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5#linux")]
    public partial class rpminfo_stateVersion : EntityStateAnySimpleType {
    }
    
    /// <summary>
    /// The rpmverify_test is used to verify the integrity of installed RPMs. This test aligns with the rpm -V command for verifying RPMs. It extends the standard TestType as defined in the oval-definitions-schema and one should refer to the TestType description for more information. The required object element references a rpmverify_object and the optional state element specifies the data to check.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5#linux")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5#linux", IsNullable=false)]
    public partial class rpmverify_test : TestType {
        
        private ObjectRefType objectField;
        
        private StateRefType[] stateField;
        
        public ObjectRefType @object {
            get {
                return this.objectField;
            }
            set {
                this.objectField = value;
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("state")]
        public StateRefType[] state {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
    }
    
    /// <summary>
    /// The rpmverify_object element is used by a rpmverity_test to define a set of files within a set of RPMs to verify. Each object extends the standard ObjectType as defined in the oval-definitions-schema and one should refer to the ObjectType description for more information. The common set element allows complex objects to be created using filters and set logic. Again, please refer to the description of the set element in the oval-definitions-schema.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5#linux")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5#linux", IsNullable=false)]
    public partial class rpmverify_object : ObjectType {
        
        private object[] itemsField;
        
        private ItemsChoiceType3[] itemsElementNameField;
        
        [System.Xml.Serialization.XmlElementAttribute("behaviors", typeof(RpmVerifyBehaviors))]
        [System.Xml.Serialization.XmlElementAttribute("filepath", typeof(EntityObjectStringType))]
        [System.Xml.Serialization.XmlElementAttribute("name", typeof(EntityObjectStringType))]
        [System.Xml.Serialization.XmlElementAttribute("filter", typeof(filter), Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5")]
        [System.Xml.Serialization.XmlElementAttribute("set", typeof(set), Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5")]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType3[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5#linux")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5#linux", IsNullable=true)]
    public partial class RpmVerifyBehaviors {
        
        private bool nodepsField;
        
        private bool nodigestField;
        
        private bool nofilesField;
        
        private bool noscriptsField;
        
        private bool nosignatureField;
        
        private bool nolinktoField;
        
        private bool nomd5Field;
        
        private bool nosizeField;
        
        private bool nouserField;
        
        private bool nogroupField;
        
        private bool nomtimeField;
        
        private bool nomodeField;
        
        private bool nordevField;
        
        private bool noconfigfilesField;
        
        private bool noghostfilesField;
        
        public RpmVerifyBehaviors() {
            this.nodepsField = false;
            this.nodigestField = false;
            this.nofilesField = false;
            this.noscriptsField = false;
            this.nosignatureField = false;
            this.nolinktoField = false;
            this.nomd5Field = false;
            this.nosizeField = false;
            this.nouserField = false;
            this.nogroupField = false;
            this.nomtimeField = false;
            this.nomodeField = false;
            this.nordevField = false;
            this.noconfigfilesField = false;
            this.noghostfilesField = false;
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool nodeps {
            get {
                return this.nodepsField;
            }
            set {
                this.nodepsField = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool nodigest {
            get {
                return this.nodigestField;
            }
            set {
                this.nodigestField = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool nofiles {
            get {
                return this.nofilesField;
            }
            set {
                this.nofilesField = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool noscripts {
            get {
                return this.noscriptsField;
            }
            set {
                this.noscriptsField = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool nosignature {
            get {
                return this.nosignatureField;
            }
            set {
                this.nosignatureField = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool nolinkto {
            get {
                return this.nolinktoField;
            }
            set {
                this.nolinktoField = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool nomd5 {
            get {
                return this.nomd5Field;
            }
            set {
                this.nomd5Field = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool nosize {
            get {
                return this.nosizeField;
            }
            set {
                this.nosizeField = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool nouser {
            get {
                return this.nouserField;
            }
            set {
                this.nouserField = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool nogroup {
            get {
                return this.nogroupField;
            }
            set {
                this.nogroupField = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool nomtime {
            get {
                return this.nomtimeField;
            }
            set {
                this.nomtimeField = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool nomode {
            get {
                return this.nomodeField;
            }
            set {
                this.nomodeField = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool nordev {
            get {
                return this.nordevField;
            }
            set {
                this.nordevField = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool noconfigfiles {
            get {
                return this.noconfigfilesField;
            }
            set {
                this.noconfigfilesField = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool noghostfiles {
            get {
                return this.noghostfilesField;
            }
            set {
                this.noghostfilesField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5#linux", IncludeInSchema=false)]
    public enum ItemsChoiceType3 {
        
        /// <remarks/>
        behaviors,
        
        /// <remarks/>
        filepath,
        
        /// <remarks/>
        name,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("http://oval.mitre.org/XMLSchema/oval-definitions-5:filter")]
        filter,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("http://oval.mitre.org/XMLSchema/oval-definitions-5:set")]
        set,
    }
    
    /// <summary>
    /// The rpmverify_state element defines the different information that can be used to evaluate the specified rpm. This includes the architecture, epoch number, and version numbers. Most of this information can be obtained through the rpm function. Please refer to the individual elements in the schema for more details about what each represents.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5#linux")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5#linux", IsNullable=false)]
    public partial class rpmverify_state : StateType {
        
        private EntityStateStringType nameField;
        
        private EntityStateStringType filepathField;
        
        private EntityStateRpmVerifyResultType size_differsField;
        
        private EntityStateRpmVerifyResultType mode_differsField;
        
        private EntityStateRpmVerifyResultType md5_differsField;
        
        private EntityStateRpmVerifyResultType device_differsField;
        
        private EntityStateRpmVerifyResultType link_mismatchField;
        
        private EntityStateRpmVerifyResultType ownership_differsField;
        
        private EntityStateRpmVerifyResultType group_differsField;
        
        private EntityStateRpmVerifyResultType mtime_differsField;
        
        private EntityStateRpmVerifyResultType capabilities_differField;
        
        private EntityStateBoolType configuration_fileField;
        
        private EntityStateBoolType documentation_fileField;
        
        private EntityStateBoolType ghost_fileField;
        
        private EntityStateBoolType license_fileField;
        
        private EntityStateBoolType readme_fileField;
        
        /// <summary>
        /// This is the package name to check.
        /// </summary>
        public EntityStateStringType name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <summary>
        /// The filepath element specifies the absolute path for a file or directory in the specified package.
        /// </summary>
        public EntityStateStringType filepath {
            get {
                return this.filepathField;
            }
            set {
                this.filepathField = value;
            }
        }
        
        /// <summary>
        /// The size_differs entity aligns with the first character ('S' flag) in the character string in the output generated by running rpm –V on a specific file.
        /// </summary>
        public EntityStateRpmVerifyResultType size_differs {
            get {
                return this.size_differsField;
            }
            set {
                this.size_differsField = value;
            }
        }
        
        /// <summary>
        /// The mode_differs entity aligns with the second character ('M' flag) in the character string in the output generated by running rpm –V on a specific file.
        /// </summary>
        public EntityStateRpmVerifyResultType mode_differs {
            get {
                return this.mode_differsField;
            }
            set {
                this.mode_differsField = value;
            }
        }
        
        /// <summary>
        /// The md5_differs entity aligns with the third character ('5' flag) in the character string in the output generated by running rpm –V on a specific file.
        /// </summary>
        public EntityStateRpmVerifyResultType md5_differs {
            get {
                return this.md5_differsField;
            }
            set {
                this.md5_differsField = value;
            }
        }
        
        /// <summary>
        /// The device_differs entity aligns with the fourth character ('D' flag) in the character string in the output generated by running rpm –V on a specific file.
        /// </summary>
        public EntityStateRpmVerifyResultType device_differs {
            get {
                return this.device_differsField;
            }
            set {
                this.device_differsField = value;
            }
        }
        
        /// <summary>
        /// The link_mismatch entity aligns with the fifth character ('L' flag) in the character string in the output generated by running rpm –V on a specific file.
        /// </summary>
        public EntityStateRpmVerifyResultType link_mismatch {
            get {
                return this.link_mismatchField;
            }
            set {
                this.link_mismatchField = value;
            }
        }
        
        /// <summary>
        /// The ownership_differs entity aligns with the sixth character ('U' flag) in the character string in the output generated by running rpm –V on a specific file.
        /// </summary>
        public EntityStateRpmVerifyResultType ownership_differs {
            get {
                return this.ownership_differsField;
            }
            set {
                this.ownership_differsField = value;
            }
        }
        
        /// <summary>
        /// The group_differs entity aligns with the seventh character ('U' flag) in the character string in the output generated by running rpm –V on a specific file.
        /// </summary>
        public EntityStateRpmVerifyResultType group_differs {
            get {
                return this.group_differsField;
            }
            set {
                this.group_differsField = value;
            }
        }
        
        /// <summary>
        /// The mtime_differs entity aligns with the eighth character ('T' flag) in the character string in the output generated by running rpm –V on a specific file.
        /// </summary>
        public EntityStateRpmVerifyResultType mtime_differs {
            get {
                return this.mtime_differsField;
            }
            set {
                this.mtime_differsField = value;
            }
        }
        
        /// <summary>
        /// The size_differs entity aligns with the ninth character ('P' flag) in the character string in the output generated by running rpm –V on a specific file.
        /// </summary>
        public EntityStateRpmVerifyResultType capabilities_differ {
            get {
                return this.capabilities_differField;
            }
            set {
                this.capabilities_differField = value;
            }
        }
        
        /// <summary>
        /// The configuration_file entity represents the configuration file attribute marker that may be present on a file.
        /// </summary>
        public EntityStateBoolType configuration_file {
            get {
                return this.configuration_fileField;
            }
            set {
                this.configuration_fileField = value;
            }
        }
        
        /// <summary>
        /// The documentation_file entity represents the documenation file attribute marker that may be present on a file.
        /// </summary>
        public EntityStateBoolType documentation_file {
            get {
                return this.documentation_fileField;
            }
            set {
                this.documentation_fileField = value;
            }
        }
        
        /// <summary>
        /// The ghost_file entity represents the ghost file attribute marker that may be present on a file.
        /// </summary>
        public EntityStateBoolType ghost_file {
            get {
                return this.ghost_fileField;
            }
            set {
                this.ghost_fileField = value;
            }
        }
        
        /// <summary>
        /// The license_file entity represents the license file attribute marker that may be present on a file.
        /// </summary>
        public EntityStateBoolType license_file {
            get {
                return this.license_fileField;
            }
            set {
                this.license_fileField = value;
            }
        }
        
        /// <summary>
        /// The readme_file entity represents the readme file attribute marker that may be present on a file.
        /// </summary>
        public EntityStateBoolType readme_file {
            get {
                return this.readme_fileField;
            }
            set {
                this.readme_fileField = value;
            }
        }
    }
    
    /// <summary>
    /// The rpmverifyfile_test is used to verify the integrity of the individual files in installed RPMs. This test aligns with the rpm -V command for verifying RPMs. It extends the standard TestType as defined in the oval-definitions-schema and one should refer to the TestType description for more information. The required object element references a rpmverifyfile_object and the optional state element specifies the data to check.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5#linux")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5#linux", IsNullable=false)]
    public partial class rpmverifyfile_test : TestType {
        
        private ObjectRefType objectField;
        
        private StateRefType[] stateField;
        
        public ObjectRefType @object {
            get {
                return this.objectField;
            }
            set {
                this.objectField = value;
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("state")]
        public StateRefType[] state {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
    }
    
    /// <summary>
    /// The rpmverifyfile_object element is used by a rpmverifyfile_test to define a set of files within a set of RPMs to verify. Each object extends the standard ObjectType as defined in the oval-definitions-schema and one should refer to the ObjectType description for more information. The common set element allows complex objects to be created using filters and set logic. Again, please refer to the description of the set element in the oval-definitions-schema.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5#linux")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5#linux", IsNullable=false)]
    public partial class rpmverifyfile_object : ObjectType {
        
        private object[] itemsField;
        
        private ItemsChoiceType4[] itemsElementNameField;
        
        [System.Xml.Serialization.XmlElementAttribute("arch", typeof(EntityObjectStringType))]
        [System.Xml.Serialization.XmlElementAttribute("behaviors", typeof(RpmVerifyFileBehaviors))]
        [System.Xml.Serialization.XmlElementAttribute("epoch", typeof(rpmverifyfile_objectEpoch))]
        [System.Xml.Serialization.XmlElementAttribute("filepath", typeof(EntityObjectStringType))]
        [System.Xml.Serialization.XmlElementAttribute("name", typeof(EntityObjectStringType))]
        [System.Xml.Serialization.XmlElementAttribute("release", typeof(rpmverifyfile_objectRelease))]
        [System.Xml.Serialization.XmlElementAttribute("version", typeof(rpmverifyfile_objectVersion))]
        [System.Xml.Serialization.XmlElementAttribute("filter", typeof(filter), Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5")]
        [System.Xml.Serialization.XmlElementAttribute("set", typeof(set), Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5")]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType4[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5#linux")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5#linux", IsNullable=true)]
    public partial class RpmVerifyFileBehaviors {
        
        private bool nolinktoField;
        
        private bool nomd5Field;
        
        private bool nosizeField;
        
        private bool nouserField;
        
        private bool nogroupField;
        
        private bool nomtimeField;
        
        private bool nomodeField;
        
        private bool nordevField;
        
        private bool noconfigfilesField;
        
        private bool noghostfilesField;
        
        public RpmVerifyFileBehaviors() {
            this.nolinktoField = false;
            this.nomd5Field = false;
            this.nosizeField = false;
            this.nouserField = false;
            this.nogroupField = false;
            this.nomtimeField = false;
            this.nomodeField = false;
            this.nordevField = false;
            this.noconfigfilesField = false;
            this.noghostfilesField = false;
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool nolinkto {
            get {
                return this.nolinktoField;
            }
            set {
                this.nolinktoField = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool nomd5 {
            get {
                return this.nomd5Field;
            }
            set {
                this.nomd5Field = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool nosize {
            get {
                return this.nosizeField;
            }
            set {
                this.nosizeField = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool nouser {
            get {
                return this.nouserField;
            }
            set {
                this.nouserField = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool nogroup {
            get {
                return this.nogroupField;
            }
            set {
                this.nogroupField = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool nomtime {
            get {
                return this.nomtimeField;
            }
            set {
                this.nomtimeField = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool nomode {
            get {
                return this.nomodeField;
            }
            set {
                this.nomodeField = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool nordev {
            get {
                return this.nordevField;
            }
            set {
                this.nordevField = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool noconfigfiles {
            get {
                return this.noconfigfilesField;
            }
            set {
                this.noconfigfilesField = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool noghostfiles {
            get {
                return this.noghostfilesField;
            }
            set {
                this.noghostfilesField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5#linux")]
    public partial class rpmverifyfile_objectEpoch : EntityObjectAnySimpleType {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5#linux")]
    public partial class rpmverifyfile_objectRelease : EntityObjectAnySimpleType {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5#linux")]
    public partial class rpmverifyfile_objectVersion : EntityObjectAnySimpleType {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5#linux", IncludeInSchema=false)]
    public enum ItemsChoiceType4 {
        
        /// <remarks/>
        arch,
        
        /// <remarks/>
        behaviors,
        
        /// <remarks/>
        epoch,
        
        /// <remarks/>
        filepath,
        
        /// <remarks/>
        name,
        
        /// <remarks/>
        release,
        
        /// <remarks/>
        version,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("http://oval.mitre.org/XMLSchema/oval-definitions-5:filter")]
        filter,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("http://oval.mitre.org/XMLSchema/oval-definitions-5:set")]
        set,
    }
    
    /// <summary>
    /// The rpmverifyfile_state element defines the different information that can be used to determine if a set of files within a set of RPMs passed verification. This includes the architecture, epoch number, version numbers, and the verification of various file attributes. Most of this information can be obtained through the rpm function. Please refer to the individual elements in the schema for more details about what each represents.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5#linux")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5#linux", IsNullable=false)]
    public partial class rpmverifyfile_state : StateType {
        
        private EntityStateStringType nameField;
        
        private rpmverifyfile_stateEpoch epochField;
        
        private rpmverifyfile_stateVersion version1Field;
        
        private rpmverifyfile_stateRelease releaseField;
        
        private EntityStateStringType archField;
        
        private EntityStateStringType filepathField;
        
        private EntityStateStringType extended_nameField;
        
        private EntityStateRpmVerifyResultType size_differsField;
        
        private EntityStateRpmVerifyResultType mode_differsField;
        
        private EntityStateRpmVerifyResultType md5_differsField;
        
        private EntityStateRpmVerifyResultType device_differsField;
        
        private EntityStateRpmVerifyResultType link_mismatchField;
        
        private EntityStateRpmVerifyResultType ownership_differsField;
        
        private EntityStateRpmVerifyResultType group_differsField;
        
        private EntityStateRpmVerifyResultType mtime_differsField;
        
        private EntityStateRpmVerifyResultType capabilities_differField;
        
        private EntityStateBoolType configuration_fileField;
        
        private EntityStateBoolType documentation_fileField;
        
        private EntityStateBoolType ghost_fileField;
        
        private EntityStateBoolType license_fileField;
        
        private EntityStateBoolType readme_fileField;
        
        /// <summary>
        /// This is the package name to check.
        /// </summary>
        public EntityStateStringType name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <summary>
        /// This is the epoch number of the RPM, this is used as a kludge for version-release comparisons where the vendor has done some kind of re-numbering or version forking. For a null epoch (or '(none)' as returned by rpm) the string '(none)' should be used.. This number is not revealed by a normal query of the RPM's information -- you must use a formatted rpm query command to gather this data from the command line, like so. For an already-installed RPM: rpm -q --qf '%{EPOCH}\n' installed_rpm For an RPM file that has not been installed: rpm -qp --qf '%{EPOCH}\n' rpm_file
        /// </summary>
        public rpmverifyfile_stateEpoch epoch {
            get {
                return this.epochField;
            }
            set {
                this.epochField = value;
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("version")]
        public rpmverifyfile_stateVersion version1 {
            get {
                return this.version1Field;
            }
            set {
                this.version1Field = value;
            }
        }
        
        /// <summary>
        /// This is the release number of the build, changed by the vendor/builder.
        /// </summary>
        public rpmverifyfile_stateRelease release {
            get {
                return this.releaseField;
            }
            set {
                this.releaseField = value;
            }
        }
        
        /// <summary>
        /// This is the architecture for which the RPM was built, like : i386, ppc, sparc, noarch. In the case of an apache rpm named httpd-2.0.40-21.11.4.i686.rpm, this value would be i686.
        /// </summary>
        public EntityStateStringType arch {
            get {
                return this.archField;
            }
            set {
                this.archField = value;
            }
        }
        
        /// <summary>
        /// The filepath element specifies the absolute path for a file or directory in the specified package.
        /// </summary>
        public EntityStateStringType filepath {
            get {
                return this.filepathField;
            }
            set {
                this.filepathField = value;
            }
        }
        
        /// <summary>
        /// This represents the name, epoch, version, release, and architecture fields as a single version string. It has the form "NAME-EPOCH:VERSION-RELEASE.ARCHITECTURE". Note that a null epoch (or '(none)' as returned by rpm) is equivalent to '0' and would hence have the form NAME-0:VERSION-RELEASE.ARCHITECTURE.
        /// </summary>
        public EntityStateStringType extended_name {
            get {
                return this.extended_nameField;
            }
            set {
                this.extended_nameField = value;
            }
        }
        
        /// <summary>
        /// The size_differs entity aligns with the first character ('S' flag) in the character string in the output generated by running rpm –V on a specific file.
        /// </summary>
        public EntityStateRpmVerifyResultType size_differs {
            get {
                return this.size_differsField;
            }
            set {
                this.size_differsField = value;
            }
        }
        
        /// <summary>
        /// The mode_differs entity aligns with the second character ('M' flag) in the character string in the output generated by running rpm –V on a specific file.
        /// </summary>
        public EntityStateRpmVerifyResultType mode_differs {
            get {
                return this.mode_differsField;
            }
            set {
                this.mode_differsField = value;
            }
        }
        
        /// <summary>
        /// The md5_differs entity aligns with the third character ('5' flag) in the character string in the output generated by running rpm –V on a specific file.
        /// </summary>
        public EntityStateRpmVerifyResultType md5_differs {
            get {
                return this.md5_differsField;
            }
            set {
                this.md5_differsField = value;
            }
        }
        
        /// <summary>
        /// The device_differs entity aligns with the fourth character ('D' flag) in the character string in the output generated by running rpm –V on a specific file.
        /// </summary>
        public EntityStateRpmVerifyResultType device_differs {
            get {
                return this.device_differsField;
            }
            set {
                this.device_differsField = value;
            }
        }
        
        /// <summary>
        /// The link_mismatch entity aligns with the fifth character ('L' flag) in the character string in the output generated by running rpm –V on a specific file.
        /// </summary>
        public EntityStateRpmVerifyResultType link_mismatch {
            get {
                return this.link_mismatchField;
            }
            set {
                this.link_mismatchField = value;
            }
        }
        
        /// <summary>
        /// The ownership_differs entity aligns with the sixth character ('U' flag) in the character string in the output generated by running rpm –V on a specific file.
        /// </summary>
        public EntityStateRpmVerifyResultType ownership_differs {
            get {
                return this.ownership_differsField;
            }
            set {
                this.ownership_differsField = value;
            }
        }
        
        /// <summary>
        /// The group_differs entity aligns with the seventh character ('U' flag) in the character string in the output generated by running rpm –V on a specific file.
        /// </summary>
        public EntityStateRpmVerifyResultType group_differs {
            get {
                return this.group_differsField;
            }
            set {
                this.group_differsField = value;
            }
        }
        
        /// <summary>
        /// The mtime_differs entity aligns with the eighth character ('T' flag) in the character string in the output generated by running rpm –V on a specific file.
        /// </summary>
        public EntityStateRpmVerifyResultType mtime_differs {
            get {
                return this.mtime_differsField;
            }
            set {
                this.mtime_differsField = value;
            }
        }
        
        /// <summary>
        /// The size_differs entity aligns with the ninth character ('P' flag) in the character string in the output generated by running rpm –V on a specific file.
        /// </summary>
        public EntityStateRpmVerifyResultType capabilities_differ {
            get {
                return this.capabilities_differField;
            }
            set {
                this.capabilities_differField = value;
            }
        }
        
        /// <summary>
        /// The configuration_file entity represents the configuration file attribute marker that may be present on a file.
        /// </summary>
        public EntityStateBoolType configuration_file {
            get {
                return this.configuration_fileField;
            }
            set {
                this.configuration_fileField = value;
            }
        }
        
        /// <summary>
        /// The documentation_file entity represents the documenation file attribute marker that may be present on a file.
        /// </summary>
        public EntityStateBoolType documentation_file {
            get {
                return this.documentation_fileField;
            }
            set {
                this.documentation_fileField = value;
            }
        }
        
        /// <summary>
        /// The ghost_file entity represents the ghost file attribute marker that may be present on a file.
        /// </summary>
        public EntityStateBoolType ghost_file {
            get {
                return this.ghost_fileField;
            }
            set {
                this.ghost_fileField = value;
            }
        }
        
        /// <summary>
        /// The license_file entity represents the license file attribute marker that may be present on a file.
        /// </summary>
        public EntityStateBoolType license_file {
            get {
                return this.license_fileField;
            }
            set {
                this.license_fileField = value;
            }
        }
        
        /// <summary>
        /// The readme_file entity represents the readme file attribute marker that may be present on a file.
        /// </summary>
        public EntityStateBoolType readme_file {
            get {
                return this.readme_fileField;
            }
            set {
                this.readme_fileField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5#linux")]
    public partial class rpmverifyfile_stateEpoch : EntityStateAnySimpleType {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5#linux")]
    public partial class rpmverifyfile_stateVersion : EntityStateAnySimpleType {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5#linux")]
    public partial class rpmverifyfile_stateRelease : EntityStateAnySimpleType {
    }
    
    /// <summary>
    /// The rpmverifypackage_test is used to verify the integrity of installed RPMs. This test aligns with the rpm -V command for verifying RPMs. It extends the standard TestType as defined in the oval-definitions-schema and one should refer to the TestType description for more information. The required object element references a rpmverifypackage_object and the optional state element specifies the data to check.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5#linux")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5#linux", IsNullable=false)]
    public partial class rpmverifypackage_test : TestType {
        
        private ObjectRefType objectField;
        
        private StateRefType[] stateField;
        
        public ObjectRefType @object {
            get {
                return this.objectField;
            }
            set {
                this.objectField = value;
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("state")]
        public StateRefType[] state {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
    }
    
    /// <summary>
    /// The rpmverifypackage_object element is used by a rpmverity_test to define a set of RPMs to verify. Each object extends the standard ObjectType as defined in the oval-definitions-schema and one should refer to the ObjectType description for more information. The common set element allows complex objects to be created using filters and set logic. Again, please refer to the description of the set element in the oval-definitions-schema.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5#linux")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5#linux", IsNullable=false)]
    public partial class rpmverifypackage_object : ObjectType {
        
        private object[] itemsField;
        
        private ItemsChoiceType5[] itemsElementNameField;
        
        [System.Xml.Serialization.XmlElementAttribute("arch", typeof(EntityObjectStringType))]
        [System.Xml.Serialization.XmlElementAttribute("behaviors", typeof(RpmVerifyPackageBehaviors))]
        [System.Xml.Serialization.XmlElementAttribute("epoch", typeof(rpmverifypackage_objectEpoch))]
        [System.Xml.Serialization.XmlElementAttribute("name", typeof(EntityObjectStringType))]
        [System.Xml.Serialization.XmlElementAttribute("release", typeof(rpmverifypackage_objectRelease))]
        [System.Xml.Serialization.XmlElementAttribute("version", typeof(rpmverifypackage_objectVersion))]
        [System.Xml.Serialization.XmlElementAttribute("filter", typeof(filter), Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5")]
        [System.Xml.Serialization.XmlElementAttribute("set", typeof(set), Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5")]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType5[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5#linux")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5#linux", IsNullable=true)]
    public partial class RpmVerifyPackageBehaviors {
        
        private bool nodepsField;
        
        private bool nodigestField;
        
        private bool noscriptsField;
        
        private bool nosignatureField;
        
        public RpmVerifyPackageBehaviors() {
            this.nodepsField = false;
            this.nodigestField = false;
            this.noscriptsField = false;
            this.nosignatureField = false;
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool nodeps {
            get {
                return this.nodepsField;
            }
            set {
                this.nodepsField = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool nodigest {
            get {
                return this.nodigestField;
            }
            set {
                this.nodigestField = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool noscripts {
            get {
                return this.noscriptsField;
            }
            set {
                this.noscriptsField = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool nosignature {
            get {
                return this.nosignatureField;
            }
            set {
                this.nosignatureField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5#linux")]
    public partial class rpmverifypackage_objectEpoch : EntityObjectAnySimpleType {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5#linux")]
    public partial class rpmverifypackage_objectRelease : EntityObjectAnySimpleType {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5#linux")]
    public partial class rpmverifypackage_objectVersion : EntityObjectAnySimpleType {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5#linux", IncludeInSchema=false)]
    public enum ItemsChoiceType5 {
        
        /// <remarks/>
        arch,
        
        /// <remarks/>
        behaviors,
        
        /// <remarks/>
        epoch,
        
        /// <remarks/>
        name,
        
        /// <remarks/>
        release,
        
        /// <remarks/>
        version,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("http://oval.mitre.org/XMLSchema/oval-definitions-5:filter")]
        filter,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("http://oval.mitre.org/XMLSchema/oval-definitions-5:set")]
        set,
    }
    
    /// <summary>
    /// The rpmverifypackage_state element defines the different information that can be used to verify the integrity of installed rpms. This includes the architecture, epoch number, version numbers, verification of variuos attributes of an rpm. Most of this information can be obtained through the rpm function. Please refer to the individual elements in the schema for more details about what each represents.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5#linux")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5#linux", IsNullable=false)]
    public partial class rpmverifypackage_state : StateType {
        
        private EntityStateStringType nameField;
        
        private rpmverifypackage_stateEpoch epochField;
        
        private rpmverifypackage_stateVersion version1Field;
        
        private rpmverifypackage_stateRelease releaseField;
        
        private EntityStateStringType archField;
        
        private EntityStateBoolType dependency_check_passedField;
        
        private EntityStateBoolType digest_check_passedField;
        
        private EntityStateBoolType verification_script_successfulField;
        
        private EntityStateBoolType signature_check_passedField;
        
        /// <summary>
        /// This is the package name to check.
        /// </summary>
        public EntityStateStringType name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <summary>
        /// This is the epoch number of the RPM, this is used as a kludge for version-release comparisons where the vendor has done some kind of re-numbering or version forking. For a null epoch (or '(none)' as returned by rpm) the string '(none)' should be used.. This number is not revealed by a normal query of the RPM's information -- you must use a formatted rpm query command to gather this data from the command line, like so. For an already-installed RPM: rpm -q --qf '%{EPOCH}\n' installed_rpm For an RPM file that has not been installed: rpm -qp --qf '%{EPOCH}\n' rpm_file
        /// </summary>
        public rpmverifypackage_stateEpoch epoch {
            get {
                return this.epochField;
            }
            set {
                this.epochField = value;
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("version")]
        public rpmverifypackage_stateVersion version1 {
            get {
                return this.version1Field;
            }
            set {
                this.version1Field = value;
            }
        }
        
        /// <summary>
        /// This is the release number of the build, changed by the vendor/builder.
        /// </summary>
        public rpmverifypackage_stateRelease release {
            get {
                return this.releaseField;
            }
            set {
                this.releaseField = value;
            }
        }
        
        /// <summary>
        /// This is the architecture for which the RPM was built, like : i386, ppc, sparc, noarch. In the case of an apache rpm named httpd-2.0.40-21.11.4.i686.rpm, this value would be i686.
        /// </summary>
        public EntityStateStringType arch {
            get {
                return this.archField;
            }
            set {
                this.archField = value;
            }
        }
        
        /// <summary>
        /// The dependency_check_passed entity indicates whether or not the dependency check passed. If the dependency check is not performed, due to the 'nodeps' behavior, this entity must not be collected.
        /// </summary>
        public EntityStateBoolType dependency_check_passed {
            get {
                return this.dependency_check_passedField;
            }
            set {
                this.dependency_check_passedField = value;
            }
        }
        
        /// <summary>
        /// The digest_check_passed entity indicates whether or not the verification of the package or header digests passed. If the digest check is not performed, due to the 'nodigest' behavior, this entity must not be collected.
        /// </summary>
        public EntityStateBoolType digest_check_passed {
            get {
                return this.digest_check_passedField;
            }
            set {
                this.digest_check_passedField = value;
            }
        }
        
        /// <summary>
        /// The verification_script_successful entity indicates whether or not the verification script executed successfully. If the verification script is not executed, due to the 'noscripts' behavior, this entity must not be collected.
        /// </summary>
        public EntityStateBoolType verification_script_successful {
            get {
                return this.verification_script_successfulField;
            }
            set {
                this.verification_script_successfulField = value;
            }
        }
        
        /// <summary>
        /// The signature_check_passed entity indicates whether or not the verification of the package or header signatures passed. If the signature check is not performed, due to the 'nosignature' behavior, this entity must not be collected.
        /// </summary>
        public EntityStateBoolType signature_check_passed {
            get {
                return this.signature_check_passedField;
            }
            set {
                this.signature_check_passedField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5#linux")]
    public partial class rpmverifypackage_stateEpoch : EntityStateAnySimpleType {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5#linux")]
    public partial class rpmverifypackage_stateVersion : EntityStateAnySimpleType {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5#linux")]
    public partial class rpmverifypackage_stateRelease : EntityStateAnySimpleType {
    }
    
    /// <summary>
    /// The selinuxboolean_test is used to check the current and pending status of a SELinux boolean. It extends the standard TestType as defined in the oval-definitions-schema and one should refer to the TestType description for more information. The required object element references a selinuxboolean_object and the optional state element references a selinuxboolean_state that specifies the metadata to check.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5#linux")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5#linux", IsNullable=false)]
    public partial class selinuxboolean_test : TestType {
        
        private ObjectRefType objectField;
        
        private StateRefType[] stateField;
        
        public ObjectRefType @object {
            get {
                return this.objectField;
            }
            set {
                this.objectField = value;
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("state")]
        public StateRefType[] state {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
    }
    
    /// <summary>
    /// The selinuxboolean_object element is used by an selinuxboolean_test to define the items to evaluate based on a specified state.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5#linux")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5#linux", IsNullable=false)]
    public partial class selinuxboolean_object : ObjectType {
        
        private object[] itemsField;
        
        [System.Xml.Serialization.XmlElementAttribute("name", typeof(EntityObjectStringType))]
        [System.Xml.Serialization.XmlElementAttribute("filter", typeof(filter), Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5")]
        [System.Xml.Serialization.XmlElementAttribute("set", typeof(set), Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
    }
    
    /// <summary>
    /// The selinuxboolean_state element defines the different information that can be used to evaluate the specified SELinux boolean. This includes SELinux boolean's current and pending status. Please refer to the individual elements in the schema for more details about what each represents.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5#linux")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5#linux", IsNullable=false)]
    public partial class selinuxboolean_state : StateType {
        
        private EntityStateStringType nameField;
        
        private EntityStateBoolType current_statusField;
        
        private EntityStateBoolType pending_statusField;
        
        /// <summary>
        /// The name of the SELinux boolean.
        /// </summary>
        public EntityStateStringType name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <summary>
        /// The current_status entity represents the current state of the specified SELinux boolean.
        /// </summary>
        public EntityStateBoolType current_status {
            get {
                return this.current_statusField;
            }
            set {
                this.current_statusField = value;
            }
        }
        
        /// <summary>
        /// The pending_status entity represents the pending state of the specified SELinux boolean.
        /// </summary>
        public EntityStateBoolType pending_status {
            get {
                return this.pending_statusField;
            }
            set {
                this.pending_statusField = value;
            }
        }
    }
    
    /// <summary>
    /// The selinuxsecuritycontext_test is used to check the security context of a file or process on the local system. It extends the standard TestType as defined in the oval-definitions-schema and one should refer to the TestType description for more information. The required object element references a selinuxsecuritycontext_object and the optional state element references a selinuxsecuritycontext_state that specifies the metadata to check.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5#linux")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5#linux", IsNullable=false)]
    public partial class selinuxsecuritycontext_test : TestType {
        
        private ObjectRefType objectField;
        
        private StateRefType[] stateField;
        
        public ObjectRefType @object {
            get {
                return this.objectField;
            }
            set {
                this.objectField = value;
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("state")]
        public StateRefType[] state {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
    }
    
    /// <summary>
    /// The selinuxsecuritycontext_object element is used by an selinuxsecuritycontext_test to define the security contexts of files and processes to collect from the local system. Each object extends the standard ObjectType as defined in the oval-definitions-schema and one should refer to the ObjectType description for more information. The common set element allows complex objects to be created using filters and set logic. Again, please refer to the description of the set element in the oval-definitions-schema.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5#linux")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5#linux", IsNullable=false)]
    public partial class selinuxsecuritycontext_object : ObjectType {
        
        private object[] itemsField;
        
        private ItemsChoiceType6[] itemsElementNameField;
        
        [System.Xml.Serialization.XmlElementAttribute("behaviors", typeof(FileBehaviors))]
        [System.Xml.Serialization.XmlElementAttribute("filename", typeof(EntityObjectStringType), IsNullable=true)]
        [System.Xml.Serialization.XmlElementAttribute("filepath", typeof(EntityObjectStringType))]
        [System.Xml.Serialization.XmlElementAttribute("path", typeof(EntityObjectStringType))]
        [System.Xml.Serialization.XmlElementAttribute("pid", typeof(EntityObjectIntType), IsNullable=true)]
        [System.Xml.Serialization.XmlElementAttribute("filter", typeof(filter), Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5")]
        [System.Xml.Serialization.XmlElementAttribute("set", typeof(set), Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5")]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType6[] ItemsElementName {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5#linux")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5#linux", IsNullable=true)]
    public partial class FileBehaviors {
        
        private string max_depthField;
        
        private FileBehaviorsRecurse recurseField;
        
        private FileBehaviorsRecurse_direction recurse_directionField;
        
        private FileBehaviorsRecurse_file_system recurse_file_systemField;
        
        public FileBehaviors() {
            this.max_depthField = "-1";
            this.recurseField = FileBehaviorsRecurse.symlinksanddirectories;
            this.recurse_directionField = FileBehaviorsRecurse_direction.none;
            this.recurse_file_systemField = FileBehaviorsRecurse_file_system.all;
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="integer")]
        [System.ComponentModel.DefaultValueAttribute("-1")]
        public string max_depth {
            get {
                return this.max_depthField;
            }
            set {
                this.max_depthField = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(FileBehaviorsRecurse.symlinksanddirectories)]
        public FileBehaviorsRecurse recurse {
            get {
                return this.recurseField;
            }
            set {
                this.recurseField = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(FileBehaviorsRecurse_direction.none)]
        public FileBehaviorsRecurse_direction recurse_direction {
            get {
                return this.recurse_directionField;
            }
            set {
                this.recurse_directionField = value;
            }
        }
        
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(FileBehaviorsRecurse_file_system.all)]
        public FileBehaviorsRecurse_file_system recurse_file_system {
            get {
                return this.recurse_file_systemField;
            }
            set {
                this.recurse_file_systemField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5#linux")]
    public enum FileBehaviorsRecurse {
        
        /// <remarks/>
        directories,
        
        /// <remarks/>
        symlinks,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("symlinks and directories")]
        symlinksanddirectories,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5#linux")]
    public enum FileBehaviorsRecurse_direction {
        
        /// <remarks/>
        none,
        
        /// <remarks/>
        up,
        
        /// <remarks/>
        down,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5#linux")]
    public enum FileBehaviorsRecurse_file_system {
        
        /// <remarks/>
        all,
        
        /// <remarks/>
        local,
        
        /// <remarks/>
        defined,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5#linux", IncludeInSchema=false)]
    public enum ItemsChoiceType6 {
        
        /// <remarks/>
        behaviors,
        
        /// <remarks/>
        filename,
        
        /// <remarks/>
        filepath,
        
        /// <remarks/>
        path,
        
        /// <remarks/>
        pid,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("http://oval.mitre.org/XMLSchema/oval-definitions-5:filter")]
        filter,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("http://oval.mitre.org/XMLSchema/oval-definitions-5:set")]
        set,
    }
    
    /// <summary>
    /// The selinuxsecuritycontext_state element defines the different information that can be used to evaluate the specified SELinux security context. This includes SELinux security context's user, type role, low sensitivity, low category, high sensitivity, high category, raw low sensitivity, raw low category, raw high sensitivity, and raw high category. This state follows the SELinux security context structure: user:role:type:low_sensitivity[:low_category]- high_sensitivity [:high_category]. Please refer to the individual elements in the schema for more details about what each represents.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5#linux")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5#linux", IsNullable=false)]
    public partial class selinuxsecuritycontext_state : StateType {
        
        private EntityStateStringType filepathField;
        
        private EntityStateStringType pathField;
        
        private EntityStateStringType filenameField;
        
        private EntityStateIntType pidField;
        
        private EntityStateStringType userField;
        
        private EntityStateStringType roleField;
        
        private EntityStateStringType typeField;
        
        private EntityStateStringType low_sensitivityField;
        
        private EntityStateStringType low_categoryField;
        
        private EntityStateStringType high_sensitivityField;
        
        private EntityStateStringType high_categoryField;
        
        private EntityStateStringType rawlow_sensitivityField;
        
        private EntityStateStringType rawlow_categoryField;
        
        private EntityStateStringType rawhigh_sensitivityField;
        
        private EntityStateStringType rawhigh_categoryField;
        
        /// <summary>
        /// The filepath element specifies the absolute path for a file on the machine. A directory cannot be specified as a filepath.
        /// </summary>
        public EntityStateStringType filepath {
            get {
                return this.filepathField;
            }
            set {
                this.filepathField = value;
            }
        }
        
        /// <summary>
        /// The path element specifies the directory component of the absolute path to a file on the machine.
        /// </summary>
        public EntityStateStringType path {
            get {
                return this.pathField;
            }
            set {
                this.pathField = value;
            }
        }
        
        /// <summary>
        /// The name of the file. If the xsi:nil attribute is set to true, then the item being represented is the higher directory represented by the path entity.
        /// </summary>
        public EntityStateStringType filename {
            get {
                return this.filenameField;
            }
            set {
                this.filenameField = value;
            }
        }
        
        /// <summary>
        /// This is the process ID of the process.
        /// </summary>
        public EntityStateIntType pid {
            get {
                return this.pidField;
            }
            set {
                this.pidField = value;
            }
        }
        
        /// <summary>
        /// The user element specifies the SELinux user that either created the file or started the process.
        /// </summary>
        public EntityStateStringType user {
            get {
                return this.userField;
            }
            set {
                this.userField = value;
            }
        }
        
        /// <summary>
        /// The role element specifies the types that a process may transition to (domain transitions). Note that this entity is not relevant for files and will always have a value of object_r.
        /// </summary>
        public EntityStateStringType role {
            get {
                return this.roleField;
            }
            set {
                this.roleField = value;
            }
        }
        
        /// <summary>
        /// The type element specifies the domain in which the file is accessible or the domain in which a process executes.
        /// </summary>
        public EntityStateStringType type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <summary>
        /// The low_sensitivity element specifies the current sensitivity of a file or process.
        /// </summary>
        public EntityStateStringType low_sensitivity {
            get {
                return this.low_sensitivityField;
            }
            set {
                this.low_sensitivityField = value;
            }
        }
        
        /// <summary>
        /// The low_category element specifies the set of categories associated with the low sensitivity.
        /// </summary>
        public EntityStateStringType low_category {
            get {
                return this.low_categoryField;
            }
            set {
                this.low_categoryField = value;
            }
        }
        
        /// <summary>
        /// The high_sensitivity element specifies the maximum range for a file or the clearance for a process.
        /// </summary>
        public EntityStateStringType high_sensitivity {
            get {
                return this.high_sensitivityField;
            }
            set {
                this.high_sensitivityField = value;
            }
        }
        
        /// <summary>
        /// The high_category element specifies the set of categories associated with the high sensitivity.
        /// </summary>
        public EntityStateStringType high_category {
            get {
                return this.high_categoryField;
            }
            set {
                this.high_categoryField = value;
            }
        }
        
        /// <summary>
        /// The rawlow_sensitivity element specifies the current sensitivity of a file or process but in its raw context.
        /// </summary>
        public EntityStateStringType rawlow_sensitivity {
            get {
                return this.rawlow_sensitivityField;
            }
            set {
                this.rawlow_sensitivityField = value;
            }
        }
        
        /// <summary>
        /// The rawlow_category element specifies the set of categories associated with the low sensitivity but in its raw context.
        /// </summary>
        public EntityStateStringType rawlow_category {
            get {
                return this.rawlow_categoryField;
            }
            set {
                this.rawlow_categoryField = value;
            }
        }
        
        /// <summary>
        /// The rawhigh_sensitivity element specifies the maximum range for a file or the clearance for a process but in its raw context.
        /// </summary>
        public EntityStateStringType rawhigh_sensitivity {
            get {
                return this.rawhigh_sensitivityField;
            }
            set {
                this.rawhigh_sensitivityField = value;
            }
        }
        
        /// <summary>
        /// The rawhigh_category element specifies the set of categories associated with the high sensitivity but in its raw context.
        /// </summary>
        public EntityStateStringType rawhigh_category {
            get {
                return this.rawhigh_categoryField;
            }
            set {
                this.rawhigh_categoryField = value;
            }
        }
    }
    
    /// <summary>
    /// The slackware package info test is used to check information associated with a given Slackware package. It extends the standard TestType as defined in the oval-definitions-schema and one should refer to the TestType description for more information. The required object element references a slackwarepkginfo_object and the optional state element specifies the data to check.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5#linux")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5#linux", IsNullable=false)]
    public partial class slackwarepkginfo_test : TestType {
        
        private ObjectRefType objectField;
        
        private StateRefType[] stateField;
        
        public ObjectRefType @object {
            get {
                return this.objectField;
            }
            set {
                this.objectField = value;
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("state")]
        public StateRefType[] state {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
    }
    
    /// <summary>
    /// A slackware package info object consists of a single name entity that identifies the package being checked.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5#linux")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5#linux", IsNullable=false)]
    public partial class slackwarepkginfo_object : ObjectType {
        
        private object[] itemsField;
        
        [System.Xml.Serialization.XmlElementAttribute("name", typeof(EntityObjectStringType))]
        [System.Xml.Serialization.XmlElementAttribute("filter", typeof(filter), Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5")]
        [System.Xml.Serialization.XmlElementAttribute("set", typeof(set), Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5")]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
    }
    
    /// <summary>
    /// The slackwarepkginfo_state element defines the different information that can be used to evaluate the specified package. This includes the version, architecture, and revision. Please refer to the individual elements in the schema for more details about what each represents.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5#linux")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5#linux", IsNullable=false)]
    public partial class slackwarepkginfo_state : StateType {
        
        private EntityStateStringType nameField;
        
        private EntityStateStringType version1Field;
        
        private EntityStateStringType architectureField;
        
        private EntityStateStringType revisionField;
        
        /// <summary>
        /// This is the package name to check.
        /// </summary>
        public EntityStateStringType name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("version")]
        public EntityStateStringType version1 {
            get {
                return this.version1Field;
            }
            set {
                this.version1Field = value;
            }
        }
        
        public EntityStateStringType architecture {
            get {
                return this.architectureField;
            }
            set {
                this.architectureField = value;
            }
        }
        
        public EntityStateStringType revision {
            get {
                return this.revisionField;
            }
            set {
                this.revisionField = value;
            }
        }
    }
}
