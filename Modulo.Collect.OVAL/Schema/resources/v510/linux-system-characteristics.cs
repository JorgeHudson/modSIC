// ------------------------------------------------------------------------------
//  <auto-generated>
//    Generated by Xsd2Code. Version 3.5.0.14890
//    <NameSpace>Modulo.Collect.OVAL.SystemCharacteristics.Linux</NameSpace><Collection>Array</Collection><codeType>CSharp</codeType><EnableDataBinding>False</EnableDataBinding><EnableLazyLoading>False</EnableLazyLoading><TrackingChangesEnable>False</TrackingChangesEnable><GenTrackingClasses>False</GenTrackingClasses><HidePrivateFieldInIDE>False</HidePrivateFieldInIDE><EnableSummaryComment>True</EnableSummaryComment><VirtualProp>False</VirtualProp><IncludeSerializeMethod>False</IncludeSerializeMethod><UseBaseClass>False</UseBaseClass><GenBaseClass>False</GenBaseClass><GenerateCloneMethod>False</GenerateCloneMethod><GenerateDataContracts>False</GenerateDataContracts><CodeBaseTag>Net20</CodeBaseTag><SerializeMethodName>Serialize</SerializeMethodName><DeserializeMethodName>Deserialize</DeserializeMethodName><SaveToFileMethodName>SaveToFile</SaveToFileMethodName><LoadFromFileMethodName>LoadFromFile</LoadFromFileMethodName><GenerateXMLAttributes>True</GenerateXMLAttributes><OrderXMLAttrib>False</OrderXMLAttrib><EnableEncoding>False</EnableEncoding><AutomaticProperties>False</AutomaticProperties><GenerateShouldSerialize>False</GenerateShouldSerialize><DisableDebug>False</DisableDebug><PropNameSpecified>Default</PropNameSpecified><Encoder>UTF8</Encoder><CustomUsings>Modulo.Collect.OVAL.Common;Modulo.Collect.OVAL.SystemCharacteristics</CustomUsings><ExcludeIncludedTypes>True</ExcludeIncludedTypes><EnableInitializeFields>False</EnableInitializeFields>
//  </auto-generated>
// ------------------------------------------------------------------------------
namespace Modulo.Collect.OVAL.SystemCharacteristics.Linux {
    using System;
    using System.Diagnostics;
    using System.Xml.Serialization;
    using System.Collections;
    using System.Xml.Schema;
    using System.ComponentModel;
    using Modulo.Collect.OVAL.Common;
    using Modulo.Collect.OVAL.SystemCharacteristics;
    
    
    /// <summary>
    /// This item stores DPKG package info.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#linux")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#linux", IsNullable=false)]
    public partial class dpkginfo_item : ItemType {
        
        private EntityItemStringType nameField;
        
        private EntityItemStringType archField;
        
        private dpkginfo_itemEpoch epochField;
        
        private dpkginfo_itemRelease releaseField;
        
        private dpkginfo_itemVersion versionField;
        
        private EntityItemEVRStringType evrField;
        
        /// <summary>
        /// This is the pakage name to check.
        /// </summary>
        public EntityItemStringType name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <summary>
        /// This is the architecture for which the DPKG was built, like : i386, ppc, sparc, noarch.
        /// </summary>
        public EntityItemStringType arch {
            get {
                return this.archField;
            }
            set {
                this.archField = value;
            }
        }
        
        /// <summary>
        /// This is the epoch number of the DPKG. For a null epoch (or '(none)' as returned by dpkg) the string '(none)' should be used.
        /// </summary>
        public dpkginfo_itemEpoch epoch {
            get {
                return this.epochField;
            }
            set {
                this.epochField = value;
            }
        }
        
        /// <summary>
        /// This is the release number of the build.
        /// </summary>
        public dpkginfo_itemRelease release {
            get {
                return this.releaseField;
            }
            set {
                this.releaseField = value;
            }
        }
        
        /// <summary>
        /// This is the version number of the build, changed by the vendor/builder.
        /// </summary>
        public dpkginfo_itemVersion version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
        
        /// <summary>
        /// This represents the epoch, version, and release fields as a single version string. It has the form "EPOCH:VERSION-RELEASE". Note that a null epoch (or '(none)' as returned by rpm) is equivalent to '0' and would hence have the form 0:VERSION-RELEASE.
        /// </summary>
        public EntityItemEVRStringType evr {
            get {
                return this.evrField;
            }
            set {
                this.evrField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#linux")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#linux", IsNullable=true)]
    public partial class EntityItemProtocolType : EntityItemStringType {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#linux")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#linux", IsNullable=true)]
    public partial class EntityItemRpmVerifyResultType : EntityItemStringType {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#linux")]
    public partial class dpkginfo_itemEpoch : EntityItemAnySimpleType {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#linux")]
    public partial class dpkginfo_itemRelease : EntityItemAnySimpleType {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#linux")]
    public partial class dpkginfo_itemVersion : EntityItemAnySimpleType {
    }
    
    /// <summary>
    /// An iflisteners_item stores the results of checking for applications that are bound to an interface on the system. Only applications that are bound to an ethernet interface should be collected.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#linux")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#linux", IsNullable=false)]
    public partial class iflisteners_item : ItemType {
        
        private EntityItemStringType interface_nameField;
        
        private EntityItemProtocolType protocolField;
        
        private EntityItemStringType hw_addressField;
        
        private EntityItemStringType program_nameField;
        
        private EntityItemIntType pidField;
        
        private EntityItemIntType user_idField;
        
        /// <summary>
        /// This is the name of the interface (eth0, eth1, fw0, etc.).
        /// </summary>
        public EntityItemStringType interface_name {
            get {
                return this.interface_nameField;
            }
            set {
                this.interface_nameField = value;
            }
        }
        
        /// <summary>
        /// This is the physical layer protocol used by the AF_PACKET socket.
        /// </summary>
        public EntityItemProtocolType protocol {
            get {
                return this.protocolField;
            }
            set {
                this.protocolField = value;
            }
        }
        
        /// <summary>
        /// This is the hardware address associated with the interface.
        /// </summary>
        public EntityItemStringType hw_address {
            get {
                return this.hw_addressField;
            }
            set {
                this.hw_addressField = value;
            }
        }
        
        /// <summary>
        /// This is the name of the communicating program.
        /// </summary>
        public EntityItemStringType program_name {
            get {
                return this.program_nameField;
            }
            set {
                this.program_nameField = value;
            }
        }
        
        /// <summary>
        /// This is the process ID of the process. The process in question is that of the program communicating on the network.
        /// </summary>
        public EntityItemIntType pid {
            get {
                return this.pidField;
            }
            set {
                this.pidField = value;
            }
        }
        
        /// <summary>
        /// The numeric user id, or uid, is the third column of each user's entry in /etc/passwd. It represents the owner, and thus privilege level, of the specified program.
        /// </summary>
        public EntityItemIntType user_id {
            get {
                return this.user_idField;
            }
            set {
                this.user_idField = value;
            }
        }
    }
    
    /// <summary>
    /// An inet listening server item stores the results of checking for network servers currently active on a system. It holds information pertaining to a specific protocol-address-port combination.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#linux")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#linux", IsNullable=false)]
    public partial class inetlisteningserver_item : ItemType {
        
        private EntityItemStringType protocolField;
        
        private EntityItemIPAddressStringType local_addressField;
        
        private EntityItemIntType local_portField;
        
        private EntityItemStringType local_full_addressField;
        
        private EntityItemStringType program_nameField;
        
        private EntityItemIPAddressStringType foreign_addressField;
        
        private EntityItemIntType foreign_portField;
        
        private EntityItemStringType foreign_full_addressField;
        
        private EntityItemIntType pidField;
        
        private EntityItemIntType user_idField;
        
        /// <summary>
        /// This is the transport-layer protocol, in lowercase: tcp or udp.
        /// </summary>
        public EntityItemStringType protocol {
            get {
                return this.protocolField;
            }
            set {
                this.protocolField = value;
            }
        }
        
        /// <summary>
        /// This is the IP address associated with the inet listening server. Note that the IP address can be IPv4 or IPv6.
        /// </summary>
        public EntityItemIPAddressStringType local_address {
            get {
                return this.local_addressField;
            }
            set {
                this.local_addressField = value;
            }
        }
        
        /// <summary>
        /// This is the TCP or UDP port on which the program listens.
        /// </summary>
        public EntityItemIntType local_port {
            get {
                return this.local_portField;
            }
            set {
                this.local_portField = value;
            }
        }
        
        /// <summary>
        /// This is the IP address and network port on which the program listens, equivalent to local_address:local_port. Note that the IP address can be IPv4 or IPv6.
        /// </summary>
        public EntityItemStringType local_full_address {
            get {
                return this.local_full_addressField;
            }
            set {
                this.local_full_addressField = value;
            }
        }
        
        /// <summary>
        /// This is the name of the communicating program.
        /// </summary>
        public EntityItemStringType program_name {
            get {
                return this.program_nameField;
            }
            set {
                this.program_nameField = value;
            }
        }
        
        /// <summary>
        /// This is the IP address with which the program is communicating, or with which it will communicate, in the case of a listening server. Note that the IP address can be IPv4 or IPv6.
        /// </summary>
        public EntityItemIPAddressStringType foreign_address {
            get {
                return this.foreign_addressField;
            }
            set {
                this.foreign_addressField = value;
            }
        }
        
        /// <summary>
        /// This is the TCP or UDP port to which the program communicates. In the case of a listening program accepting new connections, this is usually a *.
        /// </summary>
        public EntityItemIntType foreign_port {
            get {
                return this.foreign_portField;
            }
            set {
                this.foreign_portField = value;
            }
        }
        
        /// <summary>
        /// This is the IP address and network port to which the program is communicating or will accept communications from, equivalent to foreign_address:foreign_port. Note that the IP address can be IPv4 or IPv6.
        /// </summary>
        public EntityItemStringType foreign_full_address {
            get {
                return this.foreign_full_addressField;
            }
            set {
                this.foreign_full_addressField = value;
            }
        }
        
        /// <summary>
        /// This is the process ID of the process. The process in question is that of the program communicating on the network.
        /// </summary>
        public EntityItemIntType pid {
            get {
                return this.pidField;
            }
            set {
                this.pidField = value;
            }
        }
        
        /// <summary>
        /// The numeric user id, or uid, is the third column of each user's entry in /etc/passwd. It represents the owner, and thus privilege level, of the specified program.
        /// </summary>
        public EntityItemIntType user_id {
            get {
                return this.user_idField;
            }
            set {
                this.user_idField = value;
            }
        }
    }
    
    /// <summary>
    /// The partition_item stores information about a partition on the local system.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#linux")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#linux", IsNullable=false)]
    public partial class partition_item : ItemType {
        
        private EntityItemStringType mount_pointField;
        
        private EntityItemStringType deviceField;
        
        private EntityItemStringType uuidField;
        
        private EntityItemStringType fs_typeField;
        
        private EntityItemStringType[] mount_optionsField;
        
        private EntityItemIntType total_spaceField;
        
        private EntityItemIntType space_usedField;
        
        private EntityItemIntType space_leftField;
        
        /// <summary>
        /// The mount_point element contains a string that represents the mount point of a partition on the local system.
        /// </summary>
        public EntityItemStringType mount_point {
            get {
                return this.mount_pointField;
            }
            set {
                this.mount_pointField = value;
            }
        }
        
        /// <summary>
        /// The device element contains a string that represents the name of the device.
        /// </summary>
        public EntityItemStringType device {
            get {
                return this.deviceField;
            }
            set {
                this.deviceField = value;
            }
        }
        
        /// <summary>
        /// The uuid element contains a string that represents the universally unique identifier associated with a partition.
        /// </summary>
        public EntityItemStringType uuid {
            get {
                return this.uuidField;
            }
            set {
                this.uuidField = value;
            }
        }
        
        /// <summary>
        /// The fs_type element contains a string that represents the type of filesystem on a partition.
        /// </summary>
        public EntityItemStringType fs_type {
            get {
                return this.fs_typeField;
            }
            set {
                this.fs_typeField = value;
            }
        }
        
        /// <summary>
        /// The mount_options element contains a string that represents a mount option associated with a partition on the local system.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("mount_options")]
        public EntityItemStringType[] mount_options {
            get {
                return this.mount_optionsField;
            }
            set {
                this.mount_optionsField = value;
            }
        }
        
        /// <summary>
        /// The total_space element contains an integer that represents the total number of blocks on a partition.
        /// </summary>
        public EntityItemIntType total_space {
            get {
                return this.total_spaceField;
            }
            set {
                this.total_spaceField = value;
            }
        }
        
        /// <summary>
        /// The space_used element contains an integer that represents the number of blocks used on a partition.
        /// </summary>
        public EntityItemIntType space_used {
            get {
                return this.space_usedField;
            }
            set {
                this.space_usedField = value;
            }
        }
        
        /// <summary>
        /// The space_left element contains an integer that represents the number of blocks left on a partition.
        /// </summary>
        public EntityItemIntType space_left {
            get {
                return this.space_leftField;
            }
            set {
                this.space_leftField = value;
            }
        }
    }
    
    /// <summary>
    /// This item stores rpm info.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#linux")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#linux", IsNullable=false)]
    public partial class rpminfo_item : ItemType {
        
        private EntityItemStringType nameField;
        
        private EntityItemStringType archField;
        
        private rpminfo_itemEpoch epochField;
        
        private rpminfo_itemRelease releaseField;
        
        private rpminfo_itemVersion versionField;
        
        private EntityItemEVRStringType evrField;
        
        private EntityItemStringType signature_keyidField;
        
        private EntityItemStringType extended_nameField;
        
        private EntityItemStringType[] filepathField;
        
        /// <summary>
        /// This is the pakage name to check.
        /// </summary>
        public EntityItemStringType name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <summary>
        /// This is the architecture for which the RPM was built, like : i386, ppc, sparc, noarch. In the case of an apache rpm named httpd-2.0.40-21.11.4.i686.rpm, this value would be i686.
        /// </summary>
        public EntityItemStringType arch {
            get {
                return this.archField;
            }
            set {
                this.archField = value;
            }
        }
        
        /// <summary>
        /// This is the epoch number of the RPM, this is used as a kludge for version-release comparisons where the vendor has done some kind of re-numbering or version forking. For a null epoch (or '(none)' as returned by rpm) the string '(none)' should be used. This number is not revealed by a normal query of the RPM's information -- you must use a formatted rpm query command to gather this data from the command line, like so. For an already-installed RPM: rpm -q --qf '%{EPOCH}\n' installed_rpm For an RPM file that has not been installed: rpm -qp --qf '%{EPOCH}\n' rpm_file
        /// </summary>
        public rpminfo_itemEpoch epoch {
            get {
                return this.epochField;
            }
            set {
                this.epochField = value;
            }
        }
        
        /// <summary>
        /// This is the release number of the build.
        /// </summary>
        public rpminfo_itemRelease release {
            get {
                return this.releaseField;
            }
            set {
                this.releaseField = value;
            }
        }
        
        /// <summary>
        /// This is the version number of the build, changed by the vendor/builder. In the case of an apache rpm named httpd-2.0.40-21.11.4.i686.rpm, this value would be 21.11.4.
        /// </summary>
        public rpminfo_itemVersion version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
        
        /// <summary>
        /// This represents the epoch, version, and release fields as a single version string. It has the form "EPOCH:VERSION-RELEASE". Note that a null epoch (or '(none)' as returned by rpm) is equivalent to '0' and would hence have the form 0:VERSION-RELEASE.
        /// </summary>
        public EntityItemEVRStringType evr {
            get {
                return this.evrField;
            }
            set {
                this.evrField = value;
            }
        }
        
        /// <summary>
        /// This field contains the PGP key ID that the RPM issuer (generally the original operating system vendor) uses to sign the key. PGP is used to verify the authenticity and integrity of the RPM being considered. Software packages and patches are signed cryptographically to allow administrators to allay concerns that the distribution mechanism has been compromised, whether that mechanism is web site, FTP server, or even a mirror controlled by a hostile party. OVAL uses this field most of all to confirm that the package installed on the system is that shipped by the vendor, since comparing package version numbers against patch announcements is only programmatically valid if the installed package is known to contain the patched code.
        /// </summary>
        public EntityItemStringType signature_keyid {
            get {
                return this.signature_keyidField;
            }
            set {
                this.signature_keyidField = value;
            }
        }
        
        /// <summary>
        /// This represents the name, epoch, version, release, and architecture fields as a single version string. It has the form "NAME-EPOCH:VERSION-RELEASE.ARCHITECTURE". Note that a null epoch (or '(none)' as returned by rpm) is equivalent to '0' and would hence have the form NAME-0:VERSION-RELEASE.ARCHITECTURE.
        /// </summary>
        public EntityItemStringType extended_name {
            get {
                return this.extended_nameField;
            }
            set {
                this.extended_nameField = value;
            }
        }
        
        /// <summary>
        /// This field contains the absolute path of a file or directory included in the rpm.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("filepath")]
        public EntityItemStringType[] filepath {
            get {
                return this.filepathField;
            }
            set {
                this.filepathField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#linux")]
    public partial class rpminfo_itemEpoch : EntityItemAnySimpleType {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#linux")]
    public partial class rpminfo_itemRelease : EntityItemAnySimpleType {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#linux")]
    public partial class rpminfo_itemVersion : EntityItemAnySimpleType {
    }
    
    /// <summary>
    /// This item stores rpm verification results similar to what is produced by the rpm -V command.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#linux")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#linux", IsNullable=false)]
    public partial class rpmverify_item : ItemType {
        
        private EntityItemStringType nameField;
        
        private EntityItemStringType filepathField;
        
        private EntityItemRpmVerifyResultType size_differsField;
        
        private EntityItemRpmVerifyResultType mode_differsField;
        
        private EntityItemRpmVerifyResultType md5_differsField;
        
        private EntityItemRpmVerifyResultType device_differsField;
        
        private EntityItemRpmVerifyResultType link_mismatchField;
        
        private EntityItemRpmVerifyResultType ownership_differsField;
        
        private EntityItemRpmVerifyResultType group_differsField;
        
        private EntityItemRpmVerifyResultType mtime_differsField;
        
        private EntityItemRpmVerifyResultType capabilities_differField;
        
        private EntityItemBoolType configuration_fileField;
        
        private EntityItemBoolType documentation_fileField;
        
        private EntityItemBoolType ghost_fileField;
        
        private EntityItemBoolType license_fileField;
        
        private EntityItemBoolType readme_fileField;
        
        /// <summary>
        /// This is the package name to check.
        /// </summary>
        public EntityItemStringType name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <summary>
        /// The filepath element specifies the absolute path for a file or directory in the specified package.
        /// </summary>
        public EntityItemStringType filepath {
            get {
                return this.filepathField;
            }
            set {
                this.filepathField = value;
            }
        }
        
        /// <summary>
        /// The size_differs entity aligns with the first character ('S' flag) in the character string in the output generated by running rpm –V on a specific file.
        /// </summary>
        public EntityItemRpmVerifyResultType size_differs {
            get {
                return this.size_differsField;
            }
            set {
                this.size_differsField = value;
            }
        }
        
        /// <summary>
        /// The mode_differs entity aligns with the second character ('M' flag) in the character string in the output generated by running rpm –V on a specific file.
        /// </summary>
        public EntityItemRpmVerifyResultType mode_differs {
            get {
                return this.mode_differsField;
            }
            set {
                this.mode_differsField = value;
            }
        }
        
        /// <summary>
        /// The md5_differs entity aligns with the third character ('5' flag) in the character string in the output generated by running rpm –V on a specific file.
        /// </summary>
        public EntityItemRpmVerifyResultType md5_differs {
            get {
                return this.md5_differsField;
            }
            set {
                this.md5_differsField = value;
            }
        }
        
        /// <summary>
        /// The device_differs entity aligns with the fourth character ('D' flag) in the character string in the output generated by running rpm –V on a specific file.
        /// </summary>
        public EntityItemRpmVerifyResultType device_differs {
            get {
                return this.device_differsField;
            }
            set {
                this.device_differsField = value;
            }
        }
        
        /// <summary>
        /// The link_mismatch entity aligns with the fifth character ('L' flag) in the character string in the output generated by running rpm –V on a specific file.
        /// </summary>
        public EntityItemRpmVerifyResultType link_mismatch {
            get {
                return this.link_mismatchField;
            }
            set {
                this.link_mismatchField = value;
            }
        }
        
        /// <summary>
        /// The ownership_differs entity aligns with the sixth character ('U' flag) in the character string in the output generated by running rpm –V on a specific file.
        /// </summary>
        public EntityItemRpmVerifyResultType ownership_differs {
            get {
                return this.ownership_differsField;
            }
            set {
                this.ownership_differsField = value;
            }
        }
        
        /// <summary>
        /// The group_differs entity aligns with the seventh character ('U' flag) in the character string in the output generated by running rpm –V on a specific file.
        /// </summary>
        public EntityItemRpmVerifyResultType group_differs {
            get {
                return this.group_differsField;
            }
            set {
                this.group_differsField = value;
            }
        }
        
        /// <summary>
        /// The mtime_differs entity aligns with the eighth character ('T' flag) in the character string in the output generated by running rpm –V on a specific file.
        /// </summary>
        public EntityItemRpmVerifyResultType mtime_differs {
            get {
                return this.mtime_differsField;
            }
            set {
                this.mtime_differsField = value;
            }
        }
        
        /// <summary>
        /// The size_differs entity aligns with the ninth character ('P' flag) in the character string in the output generated by running rpm –V on a specific file.
        /// </summary>
        public EntityItemRpmVerifyResultType capabilities_differ {
            get {
                return this.capabilities_differField;
            }
            set {
                this.capabilities_differField = value;
            }
        }
        
        /// <summary>
        /// The configuration_file entity represents the configuration file attribute marker that may be present on a file.
        /// </summary>
        public EntityItemBoolType configuration_file {
            get {
                return this.configuration_fileField;
            }
            set {
                this.configuration_fileField = value;
            }
        }
        
        /// <summary>
        /// The documentation_file entity represents the documenation file attribute marker that may be present on a file.
        /// </summary>
        public EntityItemBoolType documentation_file {
            get {
                return this.documentation_fileField;
            }
            set {
                this.documentation_fileField = value;
            }
        }
        
        /// <summary>
        /// The ghost_file entity represents the ghost file attribute marker that may be present on a file.
        /// </summary>
        public EntityItemBoolType ghost_file {
            get {
                return this.ghost_fileField;
            }
            set {
                this.ghost_fileField = value;
            }
        }
        
        /// <summary>
        /// The license_file entity represents the license file attribute marker that may be present on a file.
        /// </summary>
        public EntityItemBoolType license_file {
            get {
                return this.license_fileField;
            }
            set {
                this.license_fileField = value;
            }
        }
        
        /// <summary>
        /// The readme_file entity represents the readme file attribute marker that may be present on a file.
        /// </summary>
        public EntityItemBoolType readme_file {
            get {
                return this.readme_fileField;
            }
            set {
                this.readme_fileField = value;
            }
        }
    }
    
    /// <summary>
    /// This item stores the verification results of the individual files in an rpm similar to what is produced by the rpm -V command.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#linux")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#linux", IsNullable=false)]
    public partial class rpmverifyfile_item : ItemType {
        
        private EntityItemStringType nameField;
        
        private rpmverifyfile_itemEpoch epochField;
        
        private rpmverifyfile_itemVersion versionField;
        
        private rpmverifyfile_itemRelease releaseField;
        
        private EntityItemStringType archField;
        
        private EntityItemStringType filepathField;
        
        private EntityItemStringType extended_nameField;
        
        private EntityItemRpmVerifyResultType size_differsField;
        
        private EntityItemRpmVerifyResultType mode_differsField;
        
        private EntityItemRpmVerifyResultType md5_differsField;
        
        private EntityItemRpmVerifyResultType device_differsField;
        
        private EntityItemRpmVerifyResultType link_mismatchField;
        
        private EntityItemRpmVerifyResultType ownership_differsField;
        
        private EntityItemRpmVerifyResultType group_differsField;
        
        private EntityItemRpmVerifyResultType mtime_differsField;
        
        private EntityItemRpmVerifyResultType capabilities_differField;
        
        private EntityItemBoolType configuration_fileField;
        
        private EntityItemBoolType documentation_fileField;
        
        private EntityItemBoolType ghost_fileField;
        
        private EntityItemBoolType license_fileField;
        
        private EntityItemBoolType readme_fileField;
        
        /// <summary>
        /// This is the package name to check.
        /// </summary>
        public EntityItemStringType name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <summary>
        /// This is the epoch number of the RPM, this is used as a kludge for version-release comparisons where the vendor has done some kind of re-numbering or version forking. For a null epoch (or '(none)' as returned by rpm) the string '(none)' should be used.. This number is not revealed by a normal query of the RPM's information -- you must use a formatted rpm query command to gather this data from the command line, like so. For an already-installed RPM: rpm -q --qf '%{EPOCH}\n' installed_rpm For an RPM file that has not been installed: rpm -qp --qf '%{EPOCH}\n' rpm_file
        /// </summary>
        public rpmverifyfile_itemEpoch epoch {
            get {
                return this.epochField;
            }
            set {
                this.epochField = value;
            }
        }
        
        /// <summary>
        /// This is the version number of the build. In the case of an apache rpm named httpd-2.0.40-21.11.4.i686.rpm, this value would be 21.11.4.
        /// </summary>
        public rpmverifyfile_itemVersion version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
        
        /// <summary>
        /// This is the release number of the build, changed by the vendor/builder.
        /// </summary>
        public rpmverifyfile_itemRelease release {
            get {
                return this.releaseField;
            }
            set {
                this.releaseField = value;
            }
        }
        
        /// <summary>
        /// This is the architecture for which the RPM was built, like : i386, ppc, sparc, noarch. In the case of an apache rpm named httpd-2.0.40-21.11.4.i686.rpm, this value would be i686.
        /// </summary>
        public EntityItemStringType arch {
            get {
                return this.archField;
            }
            set {
                this.archField = value;
            }
        }
        
        /// <summary>
        /// The filepath element specifies the absolute path for a file or directory in the specified package.
        /// </summary>
        public EntityItemStringType filepath {
            get {
                return this.filepathField;
            }
            set {
                this.filepathField = value;
            }
        }
        
        /// <summary>
        /// This represents the name, epoch, version, release, and architecture fields as a single version string. It has the form "NAME-EPOCH:VERSION-RELEASE.ARCHITECTURE". Note that a null epoch (or '(none)' as returned by rpm) is equivalent to '0' and would hence have the form NAME-0:VERSION-RELEASE.ARCHITECTURE.
        /// </summary>
        public EntityItemStringType extended_name {
            get {
                return this.extended_nameField;
            }
            set {
                this.extended_nameField = value;
            }
        }
        
        /// <summary>
        /// The size_differs entity aligns with the first character ('S' flag) in the character string in the output generated by running rpm –V on a specific file.
        /// </summary>
        public EntityItemRpmVerifyResultType size_differs {
            get {
                return this.size_differsField;
            }
            set {
                this.size_differsField = value;
            }
        }
        
        /// <summary>
        /// The mode_differs entity aligns with the second character ('M' flag) in the character string in the output generated by running rpm –V on a specific file.
        /// </summary>
        public EntityItemRpmVerifyResultType mode_differs {
            get {
                return this.mode_differsField;
            }
            set {
                this.mode_differsField = value;
            }
        }
        
        /// <summary>
        /// The md5_differs entity aligns with the third character ('5' flag) in the character string in the output generated by running rpm –V on a specific file.
        /// </summary>
        public EntityItemRpmVerifyResultType md5_differs {
            get {
                return this.md5_differsField;
            }
            set {
                this.md5_differsField = value;
            }
        }
        
        /// <summary>
        /// The device_differs entity aligns with the fourth character ('D' flag) in the character string in the output generated by running rpm –V on a specific file.
        /// </summary>
        public EntityItemRpmVerifyResultType device_differs {
            get {
                return this.device_differsField;
            }
            set {
                this.device_differsField = value;
            }
        }
        
        /// <summary>
        /// The link_mismatch entity aligns with the fifth character ('L' flag) in the character string in the output generated by running rpm –V on a specific file.
        /// </summary>
        public EntityItemRpmVerifyResultType link_mismatch {
            get {
                return this.link_mismatchField;
            }
            set {
                this.link_mismatchField = value;
            }
        }
        
        /// <summary>
        /// The ownership_differs entity aligns with the sixth character ('U' flag) in the character string in the output generated by running rpm –V on a specific file.
        /// </summary>
        public EntityItemRpmVerifyResultType ownership_differs {
            get {
                return this.ownership_differsField;
            }
            set {
                this.ownership_differsField = value;
            }
        }
        
        /// <summary>
        /// The group_differs entity aligns with the seventh character ('U' flag) in the character string in the output generated by running rpm –V on a specific file.
        /// </summary>
        public EntityItemRpmVerifyResultType group_differs {
            get {
                return this.group_differsField;
            }
            set {
                this.group_differsField = value;
            }
        }
        
        /// <summary>
        /// The mtime_differs entity aligns with the eighth character ('T' flag) in the character string in the output generated by running rpm –V on a specific file.
        /// </summary>
        public EntityItemRpmVerifyResultType mtime_differs {
            get {
                return this.mtime_differsField;
            }
            set {
                this.mtime_differsField = value;
            }
        }
        
        /// <summary>
        /// The size_differs entity aligns with the ninth character ('P' flag) in the character string in the output generated by running rpm –V on a specific file.
        /// </summary>
        public EntityItemRpmVerifyResultType capabilities_differ {
            get {
                return this.capabilities_differField;
            }
            set {
                this.capabilities_differField = value;
            }
        }
        
        /// <summary>
        /// The configuration_file entity represents the configuration file attribute marker that may be present on a file.
        /// </summary>
        public EntityItemBoolType configuration_file {
            get {
                return this.configuration_fileField;
            }
            set {
                this.configuration_fileField = value;
            }
        }
        
        /// <summary>
        /// The documentation_file entity represents the documenation file attribute marker that may be present on a file.
        /// </summary>
        public EntityItemBoolType documentation_file {
            get {
                return this.documentation_fileField;
            }
            set {
                this.documentation_fileField = value;
            }
        }
        
        /// <summary>
        /// The ghost_file entity represents the ghost file attribute marker that may be present on a file.
        /// </summary>
        public EntityItemBoolType ghost_file {
            get {
                return this.ghost_fileField;
            }
            set {
                this.ghost_fileField = value;
            }
        }
        
        /// <summary>
        /// The license_file entity represents the license file attribute marker that may be present on a file.
        /// </summary>
        public EntityItemBoolType license_file {
            get {
                return this.license_fileField;
            }
            set {
                this.license_fileField = value;
            }
        }
        
        /// <summary>
        /// The readme_file entity represents the readme file attribute marker that may be present on a file.
        /// </summary>
        public EntityItemBoolType readme_file {
            get {
                return this.readme_fileField;
            }
            set {
                this.readme_fileField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#linux")]
    public partial class rpmverifyfile_itemEpoch : EntityItemAnySimpleType {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#linux")]
    public partial class rpmverifyfile_itemVersion : EntityItemAnySimpleType {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#linux")]
    public partial class rpmverifyfile_itemRelease : EntityItemAnySimpleType {
    }
    
    /// <summary>
    /// This item stores the rpm verification results of an rpm similar to what is produced by the rpm -V command.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#linux")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#linux", IsNullable=false)]
    public partial class rpmverifypackage_item : ItemType {
        
        private EntityItemStringType nameField;
        
        private rpmverifypackage_itemEpoch epochField;
        
        private rpmverifypackage_itemVersion versionField;
        
        private rpmverifypackage_itemRelease releaseField;
        
        private EntityItemStringType archField;
        
        private EntityItemStringType extended_nameField;
        
        private EntityItemBoolType dependency_check_passedField;
        
        private EntityItemBoolType digest_check_passedField;
        
        private EntityItemBoolType verification_script_successfulField;
        
        private EntityItemBoolType signature_check_passedField;
        
        /// <summary>
        /// This is the package name to check.
        /// </summary>
        public EntityItemStringType name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <summary>
        /// This is the epoch number of the RPM, this is used as a kludge for version-release comparisons where the vendor has done some kind of re-numbering or version forking. For a null epoch (or '(none)' as returned by rpm) the string '(none)' should be used.. This number is not revealed by a normal query of the RPM's information -- you must use a formatted rpm query command to gather this data from the command line, like so. For an already-installed RPM: rpm -q --qf '%{EPOCH}\n' installed_rpm For an RPM file that has not been installed: rpm -qp --qf '%{EPOCH}\n' rpm_file
        /// </summary>
        public rpmverifypackage_itemEpoch epoch {
            get {
                return this.epochField;
            }
            set {
                this.epochField = value;
            }
        }
        
        /// <summary>
        /// This is the version number of the build. In the case of an apache rpm named httpd-2.0.40-21.11.4.i686.rpm, this value would be 21.11.4.
        /// </summary>
        public rpmverifypackage_itemVersion version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
        
        /// <summary>
        /// This is the release number of the build, changed by the vendor/builder.
        /// </summary>
        public rpmverifypackage_itemRelease release {
            get {
                return this.releaseField;
            }
            set {
                this.releaseField = value;
            }
        }
        
        /// <summary>
        /// This is the architecture for which the RPM was built, like : i386, ppc, sparc, noarch. In the case of an apache rpm named httpd-2.0.40-21.11.4.i686.rpm, this value would be i686.
        /// </summary>
        public EntityItemStringType arch {
            get {
                return this.archField;
            }
            set {
                this.archField = value;
            }
        }
        
        /// <summary>
        /// This represents the name, epoch, version, release, and architecture fields as a single version string. It has the form "NAME-EPOCH:VERSION-RELEASE.ARCHITECTURE". Note that a null epoch (or '(none)' as returned by rpm) is equivalent to '0' and would hence have the form NAME-0:VERSION-RELEASE.ARCHITECTURE.
        /// </summary>
        public EntityItemStringType extended_name {
            get {
                return this.extended_nameField;
            }
            set {
                this.extended_nameField = value;
            }
        }
        
        /// <summary>
        /// The dependency_check_passed entity indicates whether or not the dependency check passed. If the dependency check is not performed, due to the 'nodeps' behavior, this entity must not be collected.
        /// </summary>
        public EntityItemBoolType dependency_check_passed {
            get {
                return this.dependency_check_passedField;
            }
            set {
                this.dependency_check_passedField = value;
            }
        }
        
        /// <summary>
        /// The digest_check_passed entity indicates whether or not the verification of the package or header digests passed. If the digest check is not performed, due to the 'nodigest' behavior, this entity must not be collected.
        /// </summary>
        public EntityItemBoolType digest_check_passed {
            get {
                return this.digest_check_passedField;
            }
            set {
                this.digest_check_passedField = value;
            }
        }
        
        /// <summary>
        /// The verification_script_successful entity indicates whether or not the verification script executed successfully. If the verification script is not executed, due to the 'noscripts' behavior, this entity must not be collected.
        /// </summary>
        public EntityItemBoolType verification_script_successful {
            get {
                return this.verification_script_successfulField;
            }
            set {
                this.verification_script_successfulField = value;
            }
        }
        
        /// <summary>
        /// The signature_check_passed entity indicates whether or not the verification of the package or header signatures passed. If the signature check is not performed, due to the 'nosignature' behavior, this entity must not be collected.
        /// </summary>
        public EntityItemBoolType signature_check_passed {
            get {
                return this.signature_check_passedField;
            }
            set {
                this.signature_check_passedField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#linux")]
    public partial class rpmverifypackage_itemEpoch : EntityItemAnySimpleType {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#linux")]
    public partial class rpmverifypackage_itemVersion : EntityItemAnySimpleType {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#linux")]
    public partial class rpmverifypackage_itemRelease : EntityItemAnySimpleType {
    }
    
    /// <summary>
    /// This item describes the current and pending status of a SELinux boolean. It extends the standard ItemType as defined in the oval-system-characteristics schema and one should refer to the ItemType description for more information.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#linux")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#linux", IsNullable=false)]
    public partial class selinuxboolean_item : ItemType {
        
        private EntityItemStringType nameField;
        
        private EntityItemBoolType current_statusField;
        
        private EntityItemBoolType pending_statusField;
        
        /// <summary>
        /// The name of the SELinux boolean.
        /// </summary>
        public EntityItemStringType name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <summary>
        /// The current_status entity indicates current state of the specified SELinux boolean.
        /// </summary>
        public EntityItemBoolType current_status {
            get {
                return this.current_statusField;
            }
            set {
                this.current_statusField = value;
            }
        }
        
        /// <summary>
        /// The pending_status entity indicates the pending state of the specified SELinux boolean.
        /// </summary>
        public EntityItemBoolType pending_status {
            get {
                return this.pending_statusField;
            }
            set {
                this.pending_statusField = value;
            }
        }
    }
    
    /// <summary>
    /// This item describes the SELinux security context of a file or process on the local system. This item follows the SELinux security context structure: user:role:type:low_sensitivity[:low_category]- high_sensitivity [:high_category]. It extends the standard ItemType as defined in the oval-system-characteristics schema and one should refer to the ItemType description for more information.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#linux")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#linux", IsNullable=false)]
    public partial class selinuxsecuritycontext_item : ItemType {
        
        private EntityItemStringType filepathField;
        
        private EntityItemStringType pathField;
        
        private EntityItemStringType filenameField;
        
        private EntityItemIntType pidField;
        
        private EntityItemStringType userField;
        
        private EntityItemStringType roleField;
        
        private EntityItemStringType typeField;
        
        private EntityItemStringType low_sensitivityField;
        
        private EntityItemStringType low_categoryField;
        
        private EntityItemStringType high_sensitivityField;
        
        private EntityItemStringType high_categoryField;
        
        private EntityItemStringType rawlow_sensitivityField;
        
        private EntityItemStringType rawlow_categoryField;
        
        private EntityItemStringType rawhigh_sensitivityField;
        
        private EntityItemStringType rawhigh_categoryField;
        
        /// <summary>
        /// The filepath element specifies the absolute path for a file on the machine. A directory cannot be specified as a filepath.
        /// </summary>
        public EntityItemStringType filepath {
            get {
                return this.filepathField;
            }
            set {
                this.filepathField = value;
            }
        }
        
        /// <summary>
        /// The path element specifies the directory component of the absolute path to a file on the machine.
        /// </summary>
        public EntityItemStringType path {
            get {
                return this.pathField;
            }
            set {
                this.pathField = value;
            }
        }
        
        /// <summary>
        /// The name of the file. If the xsi:nil attribute is set to true, then the item being represented is the higher directory represented by the path entity.
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public EntityItemStringType filename {
            get {
                return this.filenameField;
            }
            set {
                this.filenameField = value;
            }
        }
        
        /// <summary>
        /// This is the process ID of the process.
        /// </summary>
        public EntityItemIntType pid {
            get {
                return this.pidField;
            }
            set {
                this.pidField = value;
            }
        }
        
        /// <summary>
        /// The user element specifies the SELinux user that either created the file or started the process.
        /// </summary>
        public EntityItemStringType user {
            get {
                return this.userField;
            }
            set {
                this.userField = value;
            }
        }
        
        /// <summary>
        /// The role element specifies the types that a process may transition to (domain transitions). Note that this entity is not relevant for files and will always have a value of object_r.
        /// </summary>
        public EntityItemStringType role {
            get {
                return this.roleField;
            }
            set {
                this.roleField = value;
            }
        }
        
        /// <summary>
        /// The type element specifies the domain in which the file is accessible or the domain in which a process executes.
        /// </summary>
        public EntityItemStringType type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <summary>
        /// The low_sensitivity element specifies the current sensitivity of a file or process.
        /// </summary>
        public EntityItemStringType low_sensitivity {
            get {
                return this.low_sensitivityField;
            }
            set {
                this.low_sensitivityField = value;
            }
        }
        
        /// <summary>
        /// The low_category element specifies the set of categories associated with the low sensitivity.
        /// </summary>
        public EntityItemStringType low_category {
            get {
                return this.low_categoryField;
            }
            set {
                this.low_categoryField = value;
            }
        }
        
        /// <summary>
        /// The high_sensitivity element specifies the maximum range for a file or the clearance for a process.
        /// </summary>
        public EntityItemStringType high_sensitivity {
            get {
                return this.high_sensitivityField;
            }
            set {
                this.high_sensitivityField = value;
            }
        }
        
        /// <summary>
        /// The high_category element specifies the set of categories associated with the high sensitivity.
        /// </summary>
        public EntityItemStringType high_category {
            get {
                return this.high_categoryField;
            }
            set {
                this.high_categoryField = value;
            }
        }
        
        /// <summary>
        /// The rawlow_sensitivity element specifies the current sensitivity of a file or process but in its raw context.
        /// </summary>
        public EntityItemStringType rawlow_sensitivity {
            get {
                return this.rawlow_sensitivityField;
            }
            set {
                this.rawlow_sensitivityField = value;
            }
        }
        
        /// <summary>
        /// The rawlow_category element specifies the set of categories associated with the low sensitivity but in its raw context.
        /// </summary>
        public EntityItemStringType rawlow_category {
            get {
                return this.rawlow_categoryField;
            }
            set {
                this.rawlow_categoryField = value;
            }
        }
        
        /// <summary>
        /// The rawhigh_sensitivity element specifies the maximum range for a file or the clearance for a process but in its raw context.
        /// </summary>
        public EntityItemStringType rawhigh_sensitivity {
            get {
                return this.rawhigh_sensitivityField;
            }
            set {
                this.rawhigh_sensitivityField = value;
            }
        }
        
        /// <summary>
        /// The rawhigh_category element specifies the set of categories associated with the high sensitivity but in its raw context.
        /// </summary>
        public EntityItemStringType rawhigh_category {
            get {
                return this.rawhigh_categoryField;
            }
            set {
                this.rawhigh_categoryField = value;
            }
        }
    }
    
    /// <summary>
    /// This item describes info related to Slackware packages. It extends the standard ItemType as defined in the oval-system-characteristics schema and one should refer to the ItemType description for more information.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Xsd2Code", "3.5.0.14895")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#linux")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#linux", IsNullable=false)]
    public partial class slackwarepkginfo_item : ItemType {
        
        private EntityItemStringType nameField;
        
        private EntityItemStringType versionField;
        
        private EntityItemStringType architectureField;
        
        private EntityItemStringType revisionField;
        
        /// <summary>
        /// This is the pakage name to check.
        /// </summary>
        public EntityItemStringType name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <summary>
        /// This is the version number of the pakage.
        /// </summary>
        public EntityItemStringType version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
        
        /// <summary>
        /// This is the architecture the package is designed for.
        /// </summary>
        public EntityItemStringType architecture {
            get {
                return this.architectureField;
            }
            set {
                this.architectureField = value;
            }
        }
        
        /// <summary>
        /// This is the revision of the package.
        /// </summary>
        public EntityItemStringType revision {
            get {
                return this.revisionField;
            }
            set {
                this.revisionField = value;
            }
        }
    }
}
